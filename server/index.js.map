{
  "version": 3,
  "sources": ["../server.js", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.tsx", "../app/styles/context.tsx", "../app/styles/createEmotionCache.ts", "../app/root.tsx", "../app/components/Layout.tsx", "../app/components/Navbar.tsx", "../app/components/Footer.tsx", "../app/utils/hooks.tsx", "../app/components/Catch.tsx", "../app/components/Error.tsx", "../app/styles/theme.tsx", "../app/routes/infrastructure.tsx", "../app/routes/[sitemap.xml].tsx", "../app/routes/unsubscribe.tsx", "../app/routes/resources.tsx", "../app/routes/solutions.tsx", "../app/routes/contacts.tsx", "../app/utils/email.server.tsx", "../app/utils/db.server.tsx", "../app/routes/dev/null.ts", "../app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["import { createRequestHandler } from \"@remix-run/architect\";\nimport * as build from \"@remix-run/dev/server-build\";\n\nexport const handler = createRequestHandler({\n  build,\n  mode: process.env.NODE_ENV,\n});\n", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes\\\\infrastructure.tsx\";\nimport * as route2 from \"./routes\\\\[sitemap.xml].tsx\";\nimport * as route3 from \"./routes\\\\unsubscribe.tsx\";\nimport * as route4 from \"./routes\\\\resources.tsx\";\nimport * as route5 from \"./routes\\\\solutions.tsx\";\nimport * as route6 from \"./routes\\\\contacts.tsx\";\nimport * as route7 from \"./routes\\\\dev\\\\null.ts\";\nimport * as route8 from \"./routes\\\\index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const publicPath = \"/_static/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/infrastructure\": {\n      id: \"routes/infrastructure\",\n      parentId: \"root\",\n      path: \"infrastructure\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/[sitemap.xml]\": {\n      id: \"routes/[sitemap.xml]\",\n      parentId: \"root\",\n      path: \"sitemap.xml\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/unsubscribe\": {\n      id: \"routes/unsubscribe\",\n      parentId: \"root\",\n      path: \"unsubscribe\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/resources\": {\n      id: \"routes/resources\",\n      parentId: \"root\",\n      path: \"resources\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/solutions\": {\n      id: \"routes/solutions\",\n      parentId: \"root\",\n      path: \"solutions\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/contacts\": {\n      id: \"routes/contacts\",\n      parentId: \"root\",\n      path: \"contacts\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/dev/null\": {\n      id: \"routes/dev/null\",\n      parentId: \"root\",\n      path: \"dev/null\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route8\n    }\n  };", "// entry.server.tsx\nimport { renderToString } from \"react-dom/server\";\nimport { CacheProvider } from \"@emotion/react\";\nimport createEmotionServer from \"@emotion/server/create-instance\";\nimport { RemixServer } from \"@remix-run/react\";\nimport type { EntryContext } from \"@remix-run/node\"; // Depends on the runtime you choose\n\nimport { ServerStyleContext } from \"app/styles/context\";\nimport createEmotionCache from \"app/styles/createEmotionCache\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const cache = createEmotionCache();\n  const { extractCriticalToChunks } = createEmotionServer(cache);\n\n  const html = renderToString(\n    <ServerStyleContext.Provider value={null}>\n      <CacheProvider value={cache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </CacheProvider>\n    </ServerStyleContext.Provider>\n  );\n\n  const chunks = extractCriticalToChunks(html);\n\n  const markup = renderToString(\n    <ServerStyleContext.Provider value={chunks.styles}>\n      <CacheProvider value={cache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </CacheProvider>\n    </ServerStyleContext.Provider>\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(`<!DOCTYPE html>${markup}`, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "// context.tsx\r\nimport React, { createContext } from \"react\";\r\n\r\nexport interface ServerStyleContextData {\r\n  key: string;\r\n  ids: Array<string>;\r\n  css: string;\r\n}\r\n\r\nexport const ServerStyleContext = createContext<\r\n  ServerStyleContextData[] | null\r\n>(null);\r\n\r\nexport interface ClientStyleContextData {\r\n  reset: () => void;\r\n}\r\n\r\nexport const ClientStyleContext = createContext<ClientStyleContextData | null>(\r\n  null\r\n);\r\n", "// createEmotionCache.ts\r\nimport createCache from \"@emotion/cache\";\r\n\r\nexport default function createEmotionCache() {\r\n  return createCache({ key: \"css\" });\r\n}\r\n", "import React, { useContext, useEffect } from \"react\";\nimport { withEmotionCache } from \"@emotion/react\";\nimport { ChakraProvider, ColorModeScript } from \"@chakra-ui/react\";\n\nimport { useCatch } from \"@remix-run/react\";\n\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\nimport type { MetaFunction, LinksFunction } from \"@remix-run/node\";\n\nimport { ServerStyleContext, ClientStyleContext } from \"app/styles/context\";\n\nimport Layout from \"app/components/Layout\";\nimport Catch from \"app/components/Catch\";\nimport Error from \"app/components/Error\";\n\nimport theme from \"app/styles/theme\";\n\nimport global from \"app/styles/global.css\";\nimport favicon from \"public/favicon.ico\";\nimport LogoPlain from \"public/logos/Logo-Plain.svg\";\nimport LogoSideways from \"public/logos/Logo-Sideways.svg\";\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Eucrona\",\n  description:\n    \"Production-ready Applications and Solutions built and developed to last\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport const links: LinksFunction = () => {\n  return [\n    // { rel: \"preconnect\", href: \"https://fonts.googleapis.com\" },\n    // { rel: \"preconnect\", href: \"https://fonts.gstatic.com\" },\n\n    {\n      rel: \"stylesheet\",\n      href: \"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700;1,800&display=swap\",\n    },\n    {\n      rel: \"stylesheet\",\n      href: global,\n    },\n    {\n      rel: \"preload\",\n      href: LogoPlain,\n      as: \"image\",\n    },\n    {\n      rel: \"preload\",\n      href: LogoSideways,\n      as: \"image\",\n    },\n    {\n      rel: \"preload\",\n      type: \"image/png\",\n      href: favicon,\n    },\n    {\n      rel: \"icon\",\n      type: \"image/png\",\n      href: favicon,\n    },\n  ];\n};\n\ninterface DocumentProps {\n  children: React.ReactNode;\n}\n\nconst Document = withEmotionCache(\n  ({ children }: DocumentProps, emotionCache) => {\n    const serverStyleData = useContext(ServerStyleContext);\n    const clientStyleData = useContext(ClientStyleContext);\n\n    // Only executed on client\n    useEffect(() => {\n      // re-link sheet container\n      emotionCache.sheet.container = document.head;\n      // re-inject tags\n      const tags = emotionCache.sheet.tags;\n      emotionCache.sheet.flush();\n      tags.forEach((tag) => {\n        (emotionCache.sheet as any)._insertTag(tag);\n      });\n      // reset cache to reapply global styles\n      clientStyleData?.reset();\n    }, []);\n\n    return (\n      <html lang=\"en\">\n        <head>\n          <Meta />\n          <Links />\n          {serverStyleData?.map(({ key, ids, css }) => (\n            <style\n              key={key}\n              data-emotion={`${key} ${ids.join(\" \")}`}\n              dangerouslySetInnerHTML={{ __html: css }}\n            />\n          ))}\n        </head>\n\n        <body style={{ height: \"100%\", overflow: \"overlay\" }}>\n          <ChakraProvider theme={theme}>{children}</ChakraProvider>\n          <ScrollRestoration />\n          <Scripts />\n          {process.env.NODE_ENV === \"development\" ? <LiveReload /> : null}\n        </body>\n      </html>\n    );\n  }\n);\n\nexport default function App() {\n  return (\n    <Document>\n      <Layout>\n        <Outlet />\n      </Layout>\n    </Document>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  return (\n    <Document>\n      <Layout>\n        <Error error={error} />\n      </Layout>\n    </Document>\n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  return (\n    <Document>\n      <Layout>\n        <Catch caught={caught} />\n      </Layout>\n    </Document>\n  );\n}\n", "import { Fragment, ReactNode, useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Fade,\r\n  Divider,\r\n  IconButton,\r\n  Box,\r\n  useDisclosure,\r\n  Show,\r\n  Tooltip,\r\n  Center,\r\n  Skeleton,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\nimport ExecutionEnvironment from \"exenv\";\r\n\r\nimport Navbar from \"app/components/Navbar\";\r\nimport Footer from \"app/components/Footer\";\r\n\r\nimport { FaGithub, FaLinkedin } from \"react-icons/fa\";\r\n\r\nimport { useWindowDimensions } from \"app/utils/hooks\";\r\nimport { useScrollButtonVisibility } from \"app/utils/hooks\";\r\nimport { ChevronUpIcon } from \"@chakra-ui/icons\";\r\n\r\ninterface LayoutProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst navigationLinks = [\r\n  { label: \"Solutions\", url: \"Solutions\" },\r\n  { label: \"Infrastructure\", url: \"Infrastructure\" },\r\n  { label: \"Resources\", url: \"Resources\" },\r\n  { label: \"Contacts\", url: \"Contacts\" },\r\n];\r\n\r\nconst eucronaAccounts = [\r\n  {\r\n    label: \"Michail Proios LinkedIn\",\r\n    url: \"https://www.linkedin.com/in/michail-proios/\",\r\n    isExternal: true,\r\n    icon: <FaLinkedin />,\r\n  },\r\n  {\r\n    label: \"Michail Proios Github\",\r\n    url: \"https://github.com/MichailProios\",\r\n    isExternal: true,\r\n    icon: <FaGithub />,\r\n  },\r\n];\r\n\r\nexport default function Layout({ children }: LayoutProps) {\r\n  const [flag, setFlag] = useState(false);\r\n  const { height } = useWindowDimensions();\r\n\r\n  const showButton = useScrollButtonVisibility();\r\n\r\n  useEffect(() => {\r\n    if (ExecutionEnvironment.canUseDOM) {\r\n      setFlag(true);\r\n    }\r\n  }, [setFlag]);\r\n\r\n  const handleScrollToTop = () => {\r\n    if (ExecutionEnvironment.canUseDOM) {\r\n      scroll.scrollToTop({\r\n        duration: 400,\r\n        delay: 0,\r\n        smooth: \"easeInOutQuart\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display={\"flex\"}\r\n      width={\"100%\"}\r\n      minHeight={height || \"100vh\"}\r\n      flexDirection={\"column\"}\r\n      justifyContent=\"flex-start\"\r\n    >\r\n      <Navbar\r\n        navigationLinks={navigationLinks}\r\n        eucronaAccounts={eucronaAccounts}\r\n      />\r\n\r\n      <Box display={{ base: \"none\", md: \"flex\" }}>\r\n        <Fade in={showButton} unmountOnExit style={{ zIndex: 1000 }}>\r\n          <Tooltip label=\"Scroll to Top\" closeOnScroll>\r\n            <IconButton\r\n              onClick={handleScrollToTop}\r\n              aria-label=\"top\"\r\n              zIndex={1000}\r\n              shadow=\"lg\"\r\n              size=\"lg\"\r\n              rounded={\"full\"}\r\n              position=\"fixed\"\r\n              bottom={12}\r\n              right={16}\r\n              colorScheme={\"primary\"}\r\n            >\r\n              <ChevronUpIcon fontSize=\"1.5em\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Fade>\r\n      </Box>\r\n\r\n      <Box>{children}</Box>\r\n      <Box marginTop={\"auto\"}>\r\n        <Divider />\r\n        <Footer\r\n          navigationLinks={navigationLinks}\r\n          eucronaAccounts={eucronaAccounts}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n", "import { ReactNode, useEffect, useRef, forwardRef } from \"react\";\r\n\r\nimport {\r\n  Show,\r\n  Spinner,\r\n  Flex,\r\n  Image,\r\n  HStack,\r\n  Button,\r\n  IconButton,\r\n  useColorModeValue,\r\n  useColorMode,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  VStack,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  useDisclosure,\r\n  DrawerHeader,\r\n  Link,\r\n  DrawerCloseButton,\r\n  useBreakpoint,\r\n  Box,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { NavLink } from \"@remix-run/react\";\r\n\r\n// import Footer from \"app/components/Footer\";\r\n\r\nimport { HamburgerIcon, MoonIcon, SunIcon } from \"@chakra-ui/icons\";\r\n\r\nimport LogoSideways from \"public/logos/Logo-Sideways.svg\";\r\nimport LogoPlain from \"public/logos/Logo-Plain.svg\";\r\n\r\ninterface NavbarProps {\r\n  navigationLinks: { label: string; url: string }[];\r\n  eucronaAccounts: {\r\n    label: string;\r\n    url: string;\r\n    isExternal: boolean;\r\n    icon: any;\r\n  }[];\r\n}\r\n\r\nexport default function Navbar({\r\n  navigationLinks,\r\n  eucronaAccounts,\r\n}: NavbarProps) {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const btnRef = useRef<HTMLButtonElement>(null);\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  const breakpoint = useBreakpoint({ ssr: true });\r\n\r\n  useEffect(() => {\r\n    if (breakpoint === \"lg\") {\r\n      onClose();\r\n    }\r\n  }, [breakpoint, onClose]);\r\n\r\n  return (\r\n    <>\r\n      <NavbarHeader\r\n        isOpen={isOpen}\r\n        onOpen={onOpen}\r\n        onClose={onClose}\r\n        btnRef={btnRef}\r\n        colorMode={colorMode}\r\n        toggleColorMode={toggleColorMode}\r\n        navigationLinks={navigationLinks}\r\n        eucronaAccounts={eucronaAccounts}\r\n      />\r\n      <NavbarDrawer\r\n        isOpen={isOpen}\r\n        onOpen={onOpen}\r\n        onClose={onClose}\r\n        btnRef={btnRef}\r\n        colorMode={colorMode}\r\n        toggleColorMode={toggleColorMode}\r\n        navigationLinks={navigationLinks}\r\n        eucronaAccounts={eucronaAccounts}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\ninterface NavbarHeaderProps {\r\n  isOpen: any;\r\n  onOpen: any;\r\n  onClose: any;\r\n  btnRef: any;\r\n  colorMode: any;\r\n  toggleColorMode: any;\r\n  navigationLinks: { label: string; url: string }[];\r\n  eucronaAccounts: {\r\n    label: string;\r\n    url: string;\r\n    isExternal: boolean;\r\n    icon: any;\r\n  }[];\r\n}\r\n\r\nfunction NavbarHeader({\r\n  isOpen,\r\n  onOpen,\r\n  onClose,\r\n  btnRef,\r\n  colorMode,\r\n  toggleColorMode,\r\n  navigationLinks,\r\n  eucronaAccounts,\r\n}: NavbarHeaderProps) {\r\n  return (\r\n    <Flex\r\n      h={16}\r\n      alignItems={\"center\"}\r\n      justifyContent={\"center\"}\r\n      px={{ base: 4, sm: 6, lg: 8 }}\r\n      bg={useColorModeValue(\"gray.50\", \"gray.900\")}\r\n      position=\"sticky\"\r\n      top={0}\r\n      zIndex={800}\r\n      width={\"100%\"}\r\n      as=\"header\"\r\n      boxShadow={\"md\"}\r\n    >\r\n      <Flex\r\n        alignItems={\"center\"}\r\n        justifyContent={\"space-between\"}\r\n        w={\"100%\"}\r\n        maxW={\"1600px\"}\r\n      >\r\n        <HStack spacing=\"40px\">\r\n          <NavLink to={\"/\"} prefetch=\"render\" draggable={false}>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                \"@media screen and (max-width: 370px)\": {\r\n                  display: \"none\",\r\n                },\r\n              }}\r\n            >\r\n              <Image\r\n                objectFit=\"contain\"\r\n                h={50}\r\n                w={\"auto\"}\r\n                minWidth=\"156px\"\r\n                src={LogoSideways}\r\n                alt=\"Eucrona-Logo\"\r\n                draggable=\"false\"\r\n                loading=\"eager\"\r\n              />\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                display: \"none\",\r\n                \"@media screen and (max-width: 370px)\": {\r\n                  display: \"flex\",\r\n                },\r\n              }}\r\n            >\r\n              <Image\r\n                objectFit=\"contain\"\r\n                h={50}\r\n                w={\"auto\"}\r\n                src={LogoPlain}\r\n                alt=\"Eucrona-Logo\"\r\n                draggable=\"false\"\r\n                loading=\"eager\"\r\n              />\r\n            </Box>\r\n          </NavLink>\r\n          <HStack spacing=\"12px\" display={{ base: \"none\", lg: \"flex\" }}>\r\n            {navigationLinks.map((link, index) => (\r\n              <NavLink\r\n                key={index}\r\n                to={link.url}\r\n                draggable=\"false\"\r\n                prefetch=\"render\"\r\n              >\r\n                {({ isActive }) => (\r\n                  <Button onClick={onClose} variant=\"ghost\" isActive={isActive}>\r\n                    {link.label}\r\n                  </Button>\r\n                )}\r\n              </NavLink>\r\n            ))}\r\n          </HStack>\r\n        </HStack>\r\n\r\n        <HStack spacing=\"12px\">\r\n          <HStack spacing=\"2px\">\r\n            {eucronaAccounts.map((value, index) => (\r\n              <IconButton\r\n                key={index}\r\n                variant={\"ghost\"}\r\n                aria-label=\"Color Scheme\"\r\n                as={Link}\r\n                href={value.url}\r\n                isExternal={value.isExternal}\r\n              >\r\n                {value.icon}\r\n              </IconButton>\r\n            ))}\r\n\r\n            <IconButton\r\n              variant={\"ghost\"}\r\n              aria-label=\"Color Scheme\"\r\n              onClick={() => {\r\n                toggleColorMode();\r\n              }}\r\n            >\r\n              {colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\r\n            </IconButton>\r\n          </HStack>\r\n\r\n          <Button\r\n            fontSize={\"sm\"}\r\n            fontWeight={400}\r\n            display={{ base: \"none\", lg: \"flex\" }}\r\n            as={Link}\r\n            href=\"https://cloud.eucrona.com\"\r\n            style={{ textDecoration: \"none\" }}\r\n            variant={\"solid\"}\r\n          >\r\n            Sign In\r\n          </Button>\r\n\r\n          <Button\r\n            fontSize={\"sm\"}\r\n            fontWeight={600}\r\n            variant=\"solid\"\r\n            colorScheme={\"primary\"}\r\n            display={{ base: \"none\", lg: \"flex\" }}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n\r\n          <IconButton\r\n            aria-label=\"Open Drawer\"\r\n            ref={btnRef}\r\n            onClick={onOpen}\r\n            display={{ lg: \"none\" }}\r\n          >\r\n            <HamburgerIcon />\r\n          </IconButton>\r\n        </HStack>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n}\r\n\r\ninterface NavbarDrawerProps {\r\n  isOpen: any;\r\n  onOpen: any;\r\n  onClose: any;\r\n  btnRef: any;\r\n  colorMode: any;\r\n  toggleColorMode: any;\r\n  navigationLinks: { label: string; url: string }[];\r\n  eucronaAccounts: {\r\n    label: string;\r\n    url: string;\r\n    isExternal: boolean;\r\n    icon: any;\r\n  }[];\r\n}\r\n\r\nfunction NavbarDrawer({\r\n  isOpen,\r\n  onOpen,\r\n  onClose,\r\n  btnRef,\r\n  colorMode,\r\n  toggleColorMode,\r\n  navigationLinks,\r\n  eucronaAccounts,\r\n}: NavbarDrawerProps) {\r\n  return (\r\n    <Drawer\r\n      isOpen={isOpen}\r\n      placement=\"right\"\r\n      size=\"xs\"\r\n      onClose={onClose}\r\n      finalFocusRef={btnRef}\r\n    >\r\n      <DrawerOverlay />\r\n\r\n      <DrawerContent>\r\n        <DrawerCloseButton />\r\n        <DrawerHeader p={2} alignSelf=\"center\">\r\n          <NavLink to={\"/\"} onClick={onClose} prefetch=\"render\">\r\n            <Image\r\n              objectFit=\"contain\"\r\n              h={50}\r\n              w={\"auto\"}\r\n              src={LogoPlain}\r\n              alt=\"Eucrona-Logo\"\r\n              draggable=\"false\"\r\n              loading=\"eager\"\r\n            />\r\n          </NavLink>\r\n        </DrawerHeader>\r\n        <DrawerBody>\r\n          <VStack spacing=\"12px\" align=\"stretch\">\r\n            {navigationLinks.map((link, index) => (\r\n              <NavLink\r\n                key={index}\r\n                to={link.url}\r\n                draggable=\"false\"\r\n                prefetch=\"render\"\r\n              >\r\n                {({ isActive }) => (\r\n                  <Button\r\n                    onClick={onClose}\r\n                    variant=\"ghost\"\r\n                    isActive={isActive}\r\n                    w={\"100%\"}\r\n                  >\r\n                    {link.label}\r\n                  </Button>\r\n                )}\r\n              </NavLink>\r\n            ))}\r\n          </VStack>\r\n        </DrawerBody>\r\n\r\n        <DrawerFooter alignSelf=\"center\" width={\"100%\"}>\r\n          <VStack spacing=\"12px\" width={\"100%\"}>\r\n            <Button\r\n              fontSize={\"sm\"}\r\n              width={\"100%\"}\r\n              fontWeight={400}\r\n              as={Link}\r\n              href=\"https://cloud.eucrona.com\"\r\n              style={{ textDecoration: \"none\" }}\r\n              variant={\"solid\"}\r\n            >\r\n              Sign In\r\n            </Button>\r\n\r\n            <Button\r\n              width={\"100%\"}\r\n              fontSize={\"sm\"}\r\n              fontWeight={600}\r\n              variant=\"solid\"\r\n              colorScheme={\"primary\"}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </VStack>\r\n        </DrawerFooter>\r\n      </DrawerContent>\r\n    </Drawer>\r\n  );\r\n}\r\n", "import {\r\n  Stack,\r\n  HStack,\r\n  Link,\r\n  Divider,\r\n  Image,\r\n  IconButton,\r\n  LinkProps,\r\n  Button,\r\n  Box,\r\n} from \"@chakra-ui/react\";\r\n// Here we have used react-icons package for the icons\r\n\r\nimport LogoPlain from \"public/logos/Logo-Plain.svg\";\r\n\r\nimport { NavLink } from \"@remix-run/react\";\r\n\r\ninterface FooterProps {\r\n  navigationLinks: { label: string; url: string }[];\r\n  eucronaAccounts: {\r\n    label: string;\r\n    url: string;\r\n    isExternal: boolean;\r\n    icon: any;\r\n  }[];\r\n}\r\n\r\nfunction Footer({ navigationLinks, eucronaAccounts }: FooterProps) {\r\n  return (\r\n    <Stack\r\n      maxW=\"1200px\"\r\n      marginInline=\"auto\"\r\n      p={2}\r\n      spacing={{ base: 3, md: 0 }}\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      direction={{ base: \"column\", md: \"row\" }}\r\n    >\r\n      <NavLink to={\"\"} draggable=\"false\">\r\n        <Image\r\n          objectFit=\"contain\"\r\n          h={50}\r\n          w={\"auto\"}\r\n          src={LogoPlain}\r\n          alt=\"Eucrona-Logo\"\r\n          draggable=\"false\"\r\n        />\r\n      </NavLink>\r\n\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          \"@media screen and (max-width: 370px)\": {\r\n            display: \"none\",\r\n          },\r\n        }}\r\n      >\r\n        <Stack spacing={4} alignItems=\"center\" direction={\"row\"}>\r\n          {navigationLinks.map((link, index) => (\r\n            <NavLink key={index} to={link.url} draggable=\"false\">\r\n              <Button variant={\"link\"} fontSize=\"sm\">\r\n                {link.label}\r\n              </Button>\r\n            </NavLink>\r\n          ))}\r\n        </Stack>\r\n      </Box>\r\n\r\n      <Box\r\n        sx={{\r\n          display: \"none\",\r\n          \"@media screen and (max-width: 370px)\": {\r\n            display: \"flex\",\r\n          },\r\n        }}\r\n      >\r\n        <Stack spacing={2} alignItems=\"center\" direction={\"column\"}>\r\n          {navigationLinks.map((link, index) => (\r\n            <NavLink key={index} to={link.url} draggable=\"false\">\r\n              <Button variant={\"link\"} fontSize=\"sm\">\r\n                {link.label}\r\n              </Button>\r\n            </NavLink>\r\n          ))}\r\n        </Stack>\r\n      </Box>\r\n\r\n      <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n        {eucronaAccounts.map((value, index) => (\r\n          <IconButton\r\n            key={index}\r\n            variant={\"ghost\"}\r\n            aria-label=\"Color Scheme\"\r\n            as={Link}\r\n            href={value.url}\r\n            isExternal={value.isExternal}\r\n          >\r\n            {value.icon}\r\n          </IconButton>\r\n        ))}\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n", "import { useEffect, useState } from \"react\";\r\n\r\nexport function useScrollButtonVisibility() {\r\n  const [showButton, setShowButton] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      const handleScrollButtonVisiblity = () => {\r\n        window.pageYOffset > 300 ? setShowButton(true) : setShowButton(false);\r\n      };\r\n      window.addEventListener(\"scroll\", handleScrollButtonVisiblity);\r\n      return () => {\r\n        window.removeEventListener(\"scroll\", handleScrollButtonVisiblity);\r\n      };\r\n    }\r\n  }, []); // Empty array ensures that effect is only run on mount\r\n  return showButton;\r\n}\r\n\r\ntype WindowDimentions = {\r\n  width: number | undefined;\r\n  height: number | undefined;\r\n};\r\n\r\nexport function useWindowDimensions() {\r\n  const [windowDimensions, setWindowSize] = useState<WindowDimentions>({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // only execute all the code below in client side\r\n    if (typeof window !== \"undefined\") {\r\n      // Handler to call on window resize\r\n      function handleResize() {\r\n        // Set window width/height to state\r\n        setWindowSize({\r\n          width: window.innerWidth,\r\n          height: window.innerHeight,\r\n        });\r\n      }\r\n\r\n      // Add event listener\r\n      window.addEventListener(\"resize\", handleResize);\r\n\r\n      // Call handler right away so state gets updated with initial window size\r\n      handleResize();\r\n\r\n      // Remove event listener on cleanup\r\n      return () => window.removeEventListener(\"resize\", handleResize);\r\n    }\r\n  }, []); // Empty array ensures that effect is only run on mount\r\n  return windowDimensions;\r\n}\r\n", "import React from \"react\";\r\nimport { Heading, Text, Button, Container, VStack } from \"@chakra-ui/react\";\r\nimport { NavLink } from \"@remix-run/react\";\r\nimport { ArrowForwardIcon } from \"@chakra-ui/icons\";\r\n\r\ninterface CatchProps {\r\n  caught: any;\r\n}\r\n\r\nexport default function Catch({ caught }: CatchProps) {\r\n  return (\r\n    <Container mt=\"5em\">\r\n      <VStack>\r\n        <Heading bgGradient=\"linear(to-br, #228be6, #15aabf)\" bgClip=\"text\">\r\n          {caught.status}\r\n        </Heading>\r\n        <Text fontSize=\"18px\">{caught.statusText}</Text>\r\n\r\n        <Button\r\n          rightIcon={<ArrowForwardIcon />}\r\n          variant=\"solid\"\r\n          colorScheme={\"primary\"}\r\n          size=\"lg\"\r\n          as={NavLink}\r\n          to=\"/\"\r\n          draggable={false}\r\n        >\r\n          Go to Home\r\n        </Button>\r\n      </VStack>\r\n    </Container>\r\n  );\r\n}\r\n", "import React from \"react\";\r\nimport { Heading, Text, Button, Container, VStack } from \"@chakra-ui/react\";\r\nimport { NavLink } from \"@remix-run/react\";\r\nimport { ArrowForwardIcon } from \"@chakra-ui/icons\";\r\n\r\ninterface ErrorProps {\r\n  error: any;\r\n}\r\n\r\nexport default function Error({ error }: ErrorProps) {\r\n  console.error(error.stack);\r\n  return (\r\n    <Container mt=\"5em\">\r\n      <VStack>\r\n        <Heading bgGradient=\"linear(to-br, #228be6, #15aabf)\" bgClip=\"text\">\r\n          Application Error\r\n        </Heading>\r\n        <Text fontSize=\"18px\">{error.message}</Text>\r\n\r\n        <Button\r\n          rightIcon={<ArrowForwardIcon />}\r\n          variant=\"solid\"\r\n          colorScheme={\"primary\"}\r\n          size=\"lg\"\r\n          as={NavLink}\r\n          to=\"/\"\r\n          draggable={false}\r\n        >\r\n          Go to Home\r\n        </Button>\r\n      </VStack>\r\n    </Container>\r\n  );\r\n}\r\n", "import { extendTheme } from \"@chakra-ui/react\";\r\n\r\nconst colors = {\r\n  primary: {\r\n    \"50\": \"#f0f9fe\",\r\n    \"100\": \"#c3e5fb\",\r\n    \"200\": \"#8dcdf7\",\r\n    \"300\": \"#45aef2\",\r\n    \"400\": \"#349cde\",\r\n    \"500\": \"#2c83bb\",\r\n    \"600\": \"#256f9e\",\r\n    \"700\": \"#1e597f\",\r\n    \"800\": \"#194b6b\",\r\n    \"900\": \"#12364d\",\r\n  },\r\n};\r\n\r\nconst config = {\r\n  initialColorMode: \"light\",\r\n};\r\n\r\nconst components = {};\r\n\r\nconst theme = extendTheme({ config, colors, components });\r\n\r\nexport default theme;\r\n", "import React, { Fragment } from \"react\";\r\nimport {\r\n  Box,\r\n  chakra,\r\n  Container,\r\n  Text,\r\n  HStack,\r\n  VStack,\r\n  Flex,\r\n  useColorModeValue,\r\n  useBreakpointValue,\r\n  Link,\r\n  Stack,\r\n  Button,\r\n  Skeleton,\r\n  Image,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport type { TextProps } from \"@chakra-ui/react\";\r\n\r\nimport type { PropsWithChildren } from \"react\";\r\n\r\nimport temp2 from \"public/temp2.webp\";\r\n\r\nconst milestones = [\r\n  {\r\n    id: 1,\r\n    date: \"MARCH 30, 2022\",\r\n    title: \"Chakra Hackathon\",\r\n    description: `Winner of first ever ChakraUI Hackathon. On sait depuis longtemps que travailler avec du texte lisible et contenant du sens.`,\r\n  },\r\n  {\r\n    id: 2,\r\n    date: \"July 30, 2021\",\r\n    title: \"Open Source, first contribution\",\r\n    description: `Fixing a typo, to fix a bug, contributing to Open Source and collaborating to improve technology for everyone, Ahmad's world changed again!.`,\r\n  },\r\n  {\r\n    id: 3,\r\n    date: \"July 30, 2018\",\r\n    title: \"Freelancing, started working for myself\",\r\n    description:\r\n      \"Ahmad starts his own business consulting for companies as a fullstack developer. Clients include UK Government departments, UK banks, global fintechs and startups.\",\r\n  },\r\n  {\r\n    id: 4,\r\n    date: \"July 30, 2018\",\r\n    title: \"Freelancing, started working for myself\",\r\n    description:\r\n      \"Ahmad starts his own business consulting for companies as a fullstack developer. Clients include UK Government departments, UK banks, global fintechs and startups.\",\r\n  },\r\n  {\r\n    id: 5,\r\n    date: \"July 30, 2018\",\r\n    title: \"Freelancing, started working for myself\",\r\n    description:\r\n      \"Ahmad starts his own business consulting for companies as a fullstack developer. Clients include UK Government departments, UK banks, global fintechs and startups.\",\r\n  },\r\n  {\r\n    id: 6,\r\n    date: \"July 30, 2018\",\r\n    title: \"Freelancing, started working for myself\",\r\n    description:\r\n      \"Ahmad starts his own business consulting for companies as a fullstack developer. Clients include UK Government departments, UK banks, global fintechs and startups.\",\r\n  },\r\n\r\n  {\r\n    id: 7,\r\n    date: \"July 30, 2018\",\r\n    title: \"Freelancing, started working for myself\",\r\n    description:\r\n      \"Ahmad starts his own business consulting for companies as a fullstack developer. Clients include UK Government departments, UK banks, global fintechs and startups.\",\r\n  },\r\n  {\r\n    id: 8,\r\n    date: \"July 30, 2018\",\r\n    title: \"Freelancing, started working for myself\",\r\n    description:\r\n      \"Ahmad starts his own business consulting for companies as a fullstack developer. Clients include UK Government departments, UK banks, global fintechs and startups.\",\r\n  },\r\n];\r\n\r\n//\r\n\r\nexport default function Infrastructure() {\r\n  return (\r\n    <Fragment>\r\n      <Container maxW=\"1200px\" px={{ base: 6, md: 10 }} py={14}>\r\n        <chakra.h3 fontSize=\"4xl\" fontWeight=\"bold\" mb={18} textAlign=\"center\">\r\n          Infrastructure\r\n        </chakra.h3>\r\n        <Stack\r\n          direction={{ base: \"column\", lg: \"row\" }}\r\n          justifyContent=\"center\"\r\n        >\r\n          <Box mr={{ base: 0, md: 5 }} pos=\"relative\">\r\n            <DottedBox />\r\n            <Image\r\n              boxShadow=\"lg\"\r\n              w=\"100%\"\r\n              h=\"100%\"\r\n              minW={{ base: \"auto\", md: \"30rem\" }}\r\n              maxH=\"20rem\"\r\n              objectFit=\"cover\"\r\n              src={temp2}\r\n              rounded=\"md\"\r\n              loading=\"eager\"\r\n              fallback={<Skeleton />}\r\n            />\r\n          </Box>\r\n          <Stack direction=\"column\" spacing={6} justifyContent=\"center\">\r\n            <chakra.h1\r\n              fontSize=\"5xl\"\r\n              lineHeight={1}\r\n              fontWeight=\"bold\"\r\n              textAlign=\"left\"\r\n            >\r\n              On a mission to empower Front end developers\r\n            </chakra.h1>\r\n            <Box>\r\n              <Content>\r\n                Building products is hard. We've built our fair share and we've\r\n                noticed the problems you always run into.\r\n              </Content>\r\n              <Content mt={4}>\r\n                TemplatesKart provides the best ChakraUI templates. Now you can\r\n                focus on your business, not on the boilerplate.\r\n              </Content>\r\n              <Content mt={4}>\r\n                You want to build a product and we want to help you. Building\r\n                products has changed our lives in ways we couldn't imagine and\r\n                we want to help you achieve that success too.\r\n              </Content>\r\n            </Box>\r\n            <Link href=\"#\" fontSize=\"sm\" color=\"blue.400\">\r\n              See how people are using our components \u2192\r\n            </Link>\r\n          </Stack>\r\n        </Stack>\r\n      </Container>\r\n      <Container maxW=\"1200px\" px={{ base: 6, md: 10 }} py={14}>\r\n        {milestones.map((milestone) => (\r\n          <div key={milestone.id}>\r\n            <Flex mb=\"10px\" display={{ base: \"none\", md: \"flex\" }}>\r\n              {milestone.id % 2 === 0 && (\r\n                <>\r\n                  <EmptyCard />\r\n                  <LineWithDot />\r\n                  <Card {...milestone} />\r\n                </>\r\n              )}\r\n              {/* </chakra.span> */}\r\n\r\n              {/* <chakra.span display={{ base: \"none\", md: \"flex\" }}> */}\r\n              {milestone.id % 2 !== 0 && (\r\n                <>\r\n                  <Card {...milestone} />\r\n\r\n                  <LineWithDot />\r\n                  <EmptyCard />\r\n                </>\r\n              )}\r\n            </Flex>\r\n\r\n            <Flex mb=\"10px\" display={{ base: \"flex\", md: \"none\" }}>\r\n              <>\r\n                <LineWithDot />\r\n                <Card {...milestone} />\r\n              </>\r\n            </Flex>\r\n          </div>\r\n        ))}\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst Content = ({ children, ...props }: PropsWithChildren<TextProps>) => {\r\n  return (\r\n    <Text\r\n      fontSize=\"md\"\r\n      textAlign=\"left\"\r\n      lineHeight=\"1.375\"\r\n      fontWeight=\"400\"\r\n      color=\"gray.500\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Text>\r\n  );\r\n};\r\n\r\nfunction DottedBox() {\r\n  return (\r\n    <Box\r\n      position=\"absolute\"\r\n      left=\"-45px\"\r\n      top=\"-30px\"\r\n      height=\"full\"\r\n      maxW=\"700px\"\r\n      zIndex={-1}\r\n    >\r\n      <svg\r\n        color={useColorModeValue(\"rgba(55,65,81, 0.1)\", \"rgba(55,65,81, 0.7)\")}\r\n        width=\"350\"\r\n        height=\"420\"\r\n        fill=\"none\"\r\n      >\r\n        <defs>\r\n          <pattern\r\n            id=\"5d0dd344-b041-4d26-bec4-8d33ea57ec9b\"\r\n            x=\"0\"\r\n            y=\"0\"\r\n            width=\"20\"\r\n            height=\"20\"\r\n            patternUnits=\"userSpaceOnUse\"\r\n          >\r\n            <rect x=\"0\" y=\"0\" width=\"4\" height=\"4\" fill=\"currentColor\"></rect>\r\n          </pattern>\r\n        </defs>\r\n        <rect\r\n          width=\"404\"\r\n          height=\"404\"\r\n          fill=\"url(#5d0dd344-b041-4d26-bec4-8d33ea57ec9b)\"\r\n        ></rect>\r\n      </svg>\r\n    </Box>\r\n  );\r\n}\r\n\r\ninterface CardProps {\r\n  id: number;\r\n  title: string;\r\n  description: string;\r\n  date: string;\r\n}\r\n\r\nconst Card = ({ id, title, description, date }: CardProps) => {\r\n  // For even id show card on left side\r\n  // For odd id show card on right side\r\n  const isEvenId = id % 2 == 0;\r\n  let borderWidthValue = isEvenId ? \"15px 15px 15px 0\" : \"15px 0 15px 15px\";\r\n  let leftValue = isEvenId ? \"-15px\" : \"unset\";\r\n  let rightValue = isEvenId ? \"unset\" : \"-15px\";\r\n\r\n  const isMobile = useBreakpointValue({ base: true, md: false });\r\n  if (isMobile) {\r\n    leftValue = \"-15px\";\r\n    rightValue = \"unset\";\r\n    borderWidthValue = \"15px 15px 15px 0\";\r\n  }\r\n\r\n  return (\r\n    <HStack\r\n      flex={1}\r\n      p={{ base: 3, sm: 6 }}\r\n      bg={useColorModeValue(\"gray.100\", \"gray.800\")}\r\n      spacing={5}\r\n      rounded=\"lg\"\r\n      alignItems=\"center\"\r\n      pos=\"relative\"\r\n      _before={{\r\n        content: `\"\"`,\r\n        w: \"0\",\r\n        h: \"0\",\r\n        borderColor: `transparent ${useColorModeValue(\r\n          \"#edf2f6\",\r\n          \"#1a202c\"\r\n        )} transparent`,\r\n        borderStyle: \"solid\",\r\n        borderWidth: borderWidthValue,\r\n        position: \"absolute\",\r\n        left: leftValue,\r\n        right: rightValue,\r\n        display: \"block\",\r\n      }}\r\n    >\r\n      <Box>\r\n        <Text fontSize=\"lg\" color={isEvenId ? \"teal.400\" : \"blue.400\"}>\r\n          {date}\r\n        </Text>\r\n\r\n        <VStack spacing={2} mb={3} textAlign=\"left\">\r\n          <chakra.h1 fontSize=\"2xl\" lineHeight={1.2} fontWeight=\"bold\" w=\"100%\">\r\n            {title}\r\n          </chakra.h1>\r\n          <Text fontSize=\"md\">{description}</Text>\r\n        </VStack>\r\n      </Box>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nconst LineWithDot = () => {\r\n  return (\r\n    <Flex\r\n      pos=\"relative\"\r\n      alignItems=\"center\"\r\n      mr={{ base: \"40px\", md: \"40px\" }}\r\n      ml={{ base: \"0\", md: \"40px\" }}\r\n    >\r\n      <chakra.span\r\n        position=\"absolute\"\r\n        left=\"50%\"\r\n        height=\"calc(100% + 10px)\"\r\n        border=\"1px solid\"\r\n        borderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\r\n        top=\"0px\"\r\n      ></chakra.span>\r\n      <Box pos=\"relative\" p=\"10px\">\r\n        <Box\r\n          pos=\"absolute\"\r\n          top=\"0\"\r\n          left=\"0\"\r\n          bottom=\"0\"\r\n          right=\"0\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          backgroundSize=\"cover\"\r\n          backgroundRepeat=\"no-repeat\"\r\n          backgroundPosition=\"center center\"\r\n          bg={useColorModeValue(\"gray.600\", \"gray.200\")}\r\n          borderRadius=\"100px\"\r\n          backgroundImage=\"none\"\r\n          opacity={1}\r\n        ></Box>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nconst EmptyCard = () => {\r\n  return (\r\n    <Box\r\n      flex={{ base: 0, md: 1 }}\r\n      p={{ base: 0, md: 6 }}\r\n      bg=\"transparent\"\r\n    ></Box>\r\n  );\r\n};\r\n", "export const loader = () => {\r\n  const content = `\r\n        <urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\r\n            <url>\r\n                <loc>https://eucrona.com</loc>              \r\n            </url>\r\n             <url>\r\n                <loc>https://eucrona.com/Solutions</loc>\r\n            </url>\r\n            <url>\r\n                <loc>https://eucrona.com/Infrastructure</loc>\r\n            </url>\r\n             <url>\r\n                <loc>https://eucrona.com/Resources</loc>\r\n            </url>\r\n             <url>\r\n                <loc>https://eucrona.com/Contacts</loc>\r\n            </url>          \r\n        </urlset>\r\n        `;\r\n  return new Response(content, {\r\n    status: 200,\r\n    headers: {\r\n      \"Content-Type\": \"application/xml\",\r\n      \"xml-version\": \"1.0\",\r\n      encoding: \"UTF-8\",\r\n    },\r\n  });\r\n};\r\n", "import React from \"react\";\r\nimport { Container, Button, Heading, Text, VStack } from \"@chakra-ui/react\";\r\nimport { CheckCircleIcon } from \"@chakra-ui/icons\";\r\nimport { NavLink, useLoaderData } from \"@remix-run/react\";\r\nimport type { LoaderFunction } from \"@remix-run/node\";\r\nimport { ArrowForwardIcon } from \"@chakra-ui/icons\";\r\n\r\nexport const loader: LoaderFunction = async ({ params }) => {\r\n  console.log(params.userId);\r\n  console.log(params.projectId);\r\n\r\n  return \"\";\r\n};\r\n\r\nexport default function Unsubscribe() {\r\n  const data = useLoaderData();\r\n\r\n  return (\r\n    <Container mt=\"5em\">\r\n      <VStack>\r\n        <CheckCircleIcon boxSize={\"50px\"} color={\"green.500\"} />\r\n        <Heading bgGradient=\"linear(to-br, #228be6, #15aabf)\" bgClip=\"text\">\r\n          Unsubscribed Successfully\r\n        </Heading>\r\n        <Text color={\"gray.500\"} textAlign=\"center\">\r\n          We're sorry to see you go.\r\n        </Text>\r\n\r\n        <Button\r\n          rightIcon={<ArrowForwardIcon />}\r\n          variant=\"solid\"\r\n          colorScheme={\"primary\"}\r\n          size=\"lg\"\r\n          as={NavLink}\r\n          to=\"/\"\r\n          draggable={false}\r\n        >\r\n          Go to Home\r\n        </Button>\r\n      </VStack>\r\n    </Container>\r\n\r\n    // <Box textAlign=\"center\" py={10} px={6}>\r\n    //   <CheckCircleIcon boxSize={\"50px\"} color={\"green.500\"} />\r\n    //   <Heading bgGradient=\"linear(to-br, #228be6, #15aabf)\" bgClip=\"text\">\r\n    //     Unsubscribed Successfully\r\n    //   </Heading>\r\n    //   <Text color={\"gray.500\"}>\r\n    //     Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy\r\n    //     eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam\r\n    //     voluptua.\r\n    //   </Text>\r\n\r\n    // </Box>\r\n  );\r\n}\r\n", "import React from \"react\";\r\nimport { Heading, Text, Button, Container, VStack } from \"@chakra-ui/react\";\r\nimport { NavLink } from \"@remix-run/react\";\r\nimport { ArrowForwardIcon } from \"@chakra-ui/icons\";\r\n\r\nexport default function resources() {\r\n  return (\r\n    <Container mt=\"5em\">\r\n      <VStack>\r\n        <Heading bgGradient=\"linear(to-br, #228be6, #15aabf)\" bgClip=\"text\">\r\n          Under Development\r\n        </Heading>\r\n        <Text fontSize=\"18px\" textAlign={\"center\"}>\r\n          This page will be available upon the release of <br />\r\n          Eucrona Cloud\r\n        </Text>\r\n\r\n        <Button\r\n          rightIcon={<ArrowForwardIcon />}\r\n          variant=\"solid\"\r\n          colorScheme={\"primary\"}\r\n          size=\"lg\"\r\n          as={NavLink}\r\n          to=\"/\"\r\n          draggable={false}\r\n        >\r\n          Go to Home\r\n        </Button>\r\n      </VStack>\r\n    </Container>\r\n  );\r\n}\r\n", "import {\r\n  Container,\r\n  Box,\r\n  chakra,\r\n  Text,\r\n  Icon,\r\n  SimpleGrid,\r\n  Stack,\r\n  HStack,\r\n  VStack,\r\n  Flex,\r\n  Image,\r\n  Button,\r\n  useColorModeValue,\r\n  Link as ChakraLink,\r\n} from \"@chakra-ui/react\";\r\n\r\n// import type { SVGProps } from \"react\";\r\nimport { Link } from \"@remix-run/react\";\r\n// Here we have used react-icons package for the icons\r\nimport {\r\n  MdOutlinePersonPin,\r\n  MdPermDeviceInformation,\r\n  MdOutlineFlashlightOn,\r\n} from \"react-icons/md\";\r\nimport { SiMinds } from \"react-icons/si\";\r\nimport type { IconType } from \"react-icons\";\r\nimport { Fragment } from \"react\";\r\n\r\nimport pic from \"public/temp.png\";\r\n\r\ninterface IFeature1 {\r\n  heading: string;\r\n  content: string;\r\n  icon: IconType;\r\n}\r\n\r\nconst Solution: IFeature1[] = [\r\n  {\r\n    heading: \"Learn with flashcards\",\r\n    content:\r\n      \"The main part of the learning process is using flashcards, you see a question, then you answer it.\",\r\n    icon: MdOutlineFlashlightOn,\r\n  },\r\n  {\r\n    heading: \"Never forget\",\r\n    content: `With our latest SRS algorithm, you will never forget what you've learned. The more you remember something, the less often the system will ask you to review it.`,\r\n    icon: SiMinds,\r\n  },\r\n  {\r\n    heading: \"Tiny bits of information\",\r\n    content:\r\n      \"Instead of showing you a wall of text that will take you a long time to read and then that you quickly forget, we show you tiny bits of information every day.\",\r\n    icon: MdPermDeviceInformation,\r\n  },\r\n  {\r\n    heading: \"Community\",\r\n    content: `Keep your learning streak going, see stats of what you've learned and share it with others via your public profile. You can also join our private discord server!`,\r\n    icon: MdOutlinePersonPin,\r\n  },\r\n];\r\n\r\ninterface IFeature2 {\r\n  heading: string;\r\n  content: string;\r\n  icon: any;\r\n}\r\n\r\nconst features: IFeature2[] = [\r\n  {\r\n    heading: \"Payments\",\r\n    content:\r\n      \"Choose from Stripe, Paddle, Braintree, or PayPal to launch your product quickly.\",\r\n    icon: (\r\n      <svg\r\n        width={36}\r\n        height={36}\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        stroke=\"currentColor\"\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          strokeWidth=\"2\"\r\n          d=\"M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z\"\r\n        ></path>\r\n      </svg>\r\n    ),\r\n  },\r\n  {\r\n    heading: \"Invoicing\",\r\n    content:\r\n      \"Webhooks are wired up to automatically email customers PDF receipts and invoices.\",\r\n    icon: (\r\n      <svg\r\n        width={36}\r\n        height={36}\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        stroke=\"currentColor\"\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          strokeWidth=\"2\"\r\n          d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01\"\r\n        ></path>\r\n      </svg>\r\n    ),\r\n  },\r\n  {\r\n    heading: \"API Included\",\r\n    content:\r\n      \"Roll your own API to easily connect with other apps or services. Pull in updates.\",\r\n    icon: (\r\n      <svg\r\n        width={36}\r\n        height={36}\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        stroke=\"currentColor\"\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          strokeWidth=\"2\"\r\n          d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\r\n        ></path>\r\n      </svg>\r\n    ),\r\n  },\r\n];\r\n\r\nconst overviewList = [\r\n  {\r\n    id: 1,\r\n    label: \"Login once per day\",\r\n    subLabel: \"The process should be quick.\",\r\n  },\r\n  {\r\n    id: 2,\r\n    label: \"Do your reviews\",\r\n    subLabel: \"Reviews come from previous flashcards that you chose.\",\r\n  },\r\n  {\r\n    id: 3,\r\n    label: \"Streak increase\",\r\n    subLabel:\r\n      \"Your streak increases once per day as long as you finish your reviews.\",\r\n  },\r\n  {\r\n    id: 4,\r\n    label: \"Choose your lesson\",\r\n    subLabel: \"This will add 5 new flashcards to your reviews.\",\r\n  },\r\n];\r\n\r\nconst Solutions = () => {\r\n  return (\r\n    <Fragment>\r\n      <Container maxW=\"1200px\" px={{ base: 6, md: 10 }} py={14}>\r\n        <chakra.h3 fontSize=\"4xl\" fontWeight=\"bold\" mb={3} textAlign=\"center\">\r\n          Solutions\r\n        </chakra.h3>\r\n        <SimpleGrid\r\n          columns={{ base: 1, md: 2 }}\r\n          placeItems=\"center\"\r\n          spacing={16}\r\n          mt={12}\r\n          mb={4}\r\n        >\r\n          {Solution.map((feature, index) => (\r\n            <Box key={index} textAlign=\"center\">\r\n              <Icon as={feature.icon} w={10} h={10} color=\"blue.400\" />\r\n              <chakra.h3 fontWeight=\"semibold\" fontSize=\"2xl\">\r\n                {feature.heading}\r\n              </chakra.h3>\r\n              <Text fontSize=\"md\">{feature.content}</Text>\r\n            </Box>\r\n          ))}\r\n        </SimpleGrid>\r\n      </Container>\r\n      <Box overflow=\"hidden\">\r\n        <svg\r\n          fill={useColorModeValue(\"#f7fafc\", \"#171923\")}\r\n          width=\"150%\"\r\n          height=\"56px\"\r\n          // transform=\"scaleX(-1)\"\r\n          filter=\"drop-shadow(10px 5px 5px rgba(0, 0, 0, 0.05))\"\r\n          preserveAspectRatio=\"none\"\r\n          viewBox=\"0 0 1200 120\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d={`M321.39 56.44c58-10.79 114.16-30.13 172-41.86 82.39-16.72 168.19-17.73 \r\n            250.45-.39C823.78 31 906.67 72 985.66 92.83c70.05 18.48 146.53 26.09 214.34 \r\n            3V0H0v27.35a600.21 600.21 0 00321.39 29.09z`}\r\n          ></path>\r\n        </svg>\r\n      </Box>\r\n      <Container maxW=\"1200px\" px={{ base: 6, md: 10 }} py={14}>\r\n        <chakra.h3 fontSize=\"4xl\" fontWeight=\"bold\" mb={20} textAlign=\"center\">\r\n          Everything your app needs and more\r\n        </chakra.h3>\r\n        <SimpleGrid\r\n          columns={{ base: 1, sm: 2, md: 3 }}\r\n          placeItems=\"center\"\r\n          spacing={10}\r\n          mb={4}\r\n        >\r\n          {features.map((feature, index) => (\r\n            <Box\r\n              key={index}\r\n              _light={{ bg: \"gray.50\" }}\r\n              _dark={{ bg: \"gray.700\" }}\r\n              rounded=\"lg\"\r\n              boxShadow=\"2xl\"\r\n              p={6}\r\n              textAlign=\"center\"\r\n              pos=\"relative\"\r\n            >\r\n              <Flex\r\n                p={2}\r\n                w=\"max-content\"\r\n                color=\"white\"\r\n                bgGradient=\"linear(to-br, #228be6, #15aabf)\"\r\n                rounded=\"md\"\r\n                marginInline=\"auto\"\r\n                pos=\"absolute\"\r\n                left={0}\r\n                right={0}\r\n                top=\"-1.5rem\"\r\n                boxShadow=\"lg\"\r\n              >\r\n                {feature.icon}\r\n              </Flex>\r\n              <chakra.h3 fontWeight=\"semibold\" fontSize=\"2xl\" mt={6}>\r\n                {feature.heading}\r\n              </chakra.h3>\r\n              <Text fontSize=\"md\" mt={4}>\r\n                {feature.content}\r\n              </Text>\r\n              <ChakraLink href=\"#\" mt={4} fontSize=\"sm\" color=\"blue.400\">\r\n                Learn more \u2192\r\n              </ChakraLink>\r\n            </Box>\r\n          ))}\r\n        </SimpleGrid>\r\n      </Container>\r\n      <Container maxW=\"1200px\" px={{ base: 6, md: 10 }} py={14}>\r\n        <chakra.h2 fontSize=\"4xl\" fontWeight=\"bold\" textAlign=\"center\" mb={3}>\r\n          How it works?\r\n        </chakra.h2>\r\n        <Stack\r\n          direction={{ base: \"column\", md: \"row\" }}\r\n          spacing={{ base: 0, md: 3 }}\r\n          mt={12}\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <VStack\r\n            spacing={4}\r\n            alignItems=\"flex-start\"\r\n            mb={{ base: 5, md: 0 }}\r\n            maxW=\"md\"\r\n          >\r\n            {overviewList.map((data) => (\r\n              <Box key={data.id}>\r\n                <HStack spacing={2}>\r\n                  <Flex\r\n                    fontWeight=\"bold\"\r\n                    boxShadow=\"md\"\r\n                    color=\"white\"\r\n                    bg=\"blue.400\"\r\n                    rounded=\"full\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                    w={10}\r\n                    h={10}\r\n                  >\r\n                    {data.id}\r\n                  </Flex>\r\n                  <Text fontSize=\"xl\">{data.label}</Text>\r\n                </HStack>\r\n                <Text fontSize=\"md\" color=\"gray.500\" ml={12}>\r\n                  {data.subLabel}\r\n                </Text>\r\n              </Box>\r\n            ))}\r\n          </VStack>\r\n          <Image\r\n            // boxSize={{ base: \"auto\", md: \"lg\" }}\r\n            width={{ base: \"auto\", md: \"50%\" }}\r\n            objectFit=\"contain\"\r\n            src={pic}\r\n            rounded=\"xl\"\r\n          />\r\n        </Stack>\r\n      </Container>\r\n\r\n      <Container maxW=\"1200px\" px={{ base: 6, md: 10 }} py={14}>\r\n        <Stack\r\n          direction={{ base: \"column\", lg: \"row\" }}\r\n          spacing={5}\r\n          alignItems={\"center\"}\r\n          justifyContent=\"space-between\"\r\n          rounded=\"lg\"\r\n          boxShadow=\"2xl\"\r\n          bg={useColorModeValue(\"gray.50\", \"gray.700\")}\r\n          p={{ base: 8, md: 16 }}\r\n        >\r\n          <Box>\r\n            <chakra.h1 fontSize=\"4xl\" lineHeight={1.2} fontWeight=\"bold\">\r\n              Ready to get started?\r\n            </chakra.h1>\r\n            <chakra.h2\r\n              fontSize=\"2xl\"\r\n              lineHeight={1.2}\r\n              fontWeight=\"bold\"\r\n              bgGradient=\"linear(to-l, #0ea5e9,#2563eb)\"\r\n              bgClip=\"text\"\r\n            >\r\n              Create an account or learn more.\r\n            </chakra.h2>\r\n          </Box>\r\n          <Stack\r\n            direction={{ base: \"column\", sm: \"row\" }}\r\n            spacing={{ base: 0, sm: 3 }}\r\n            w={{ base: \"100%\", sm: \"auto\" }}\r\n          >\r\n            <Button\r\n              // as={Link}\r\n              colorScheme=\"primary\"\r\n              // href=\"#\"\r\n              variant=\"solid\"\r\n              // size=\"lg\"\r\n              // rounded=\"md\"\r\n              mb={{ base: 2, sm: 0 }}\r\n              // lineHeight={1}\r\n            >\r\n              Create Eucrona Account\r\n            </Button>\r\n            <Button\r\n              as={Link}\r\n              to={\"/Infrastructure\"}\r\n              // size=\"lg\"\r\n              // rounded=\"md\"\r\n              mb={{ base: 2, sm: 0 }}\r\n              variant={\"solid\"}\r\n              // bg={useColorModeValue(\"gray.200\", \"gray.600\")}\r\n              // _hover={{ bg: useColorModeValue(\"gray.300\", \"gray.500\") }}\r\n              // lineHeight={1}\r\n            >\r\n              Learn more\r\n            </Button>\r\n          </Stack>\r\n        </Stack>\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Solutions;\r\n", "import {\r\n  Container,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Textarea,\r\n  Stack,\r\n  Button,\r\n  Heading,\r\n  useColorModeValue,\r\n  VStack,\r\n  Flex,\r\n  Text,\r\n  FormErrorMessage,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  Checkbox,\r\n} from \"@chakra-ui/react\";\r\nimport { useActionData } from \"@remix-run/react\";\r\n\r\nimport {\r\n  ValidatedForm,\r\n  validationError,\r\n  useIsSubmitting,\r\n  useField,\r\n} from \"remix-validated-form\";\r\nimport { withZod } from \"@remix-validated-form/with-zod\";\r\nimport { z } from \"zod\";\r\nimport { ses } from \"app/utils/email.server\";\r\nimport { EmailSubscribers } from \"~/utils/db.server\";\r\n// import { db } from \"app/utils/db.server\";\r\n\r\nexport const validator = withZod(\r\n  z.object({\r\n    fullName: z\r\n      .string()\r\n      .min(1, { message: \"Full Name is required\" })\r\n      .max(20, { message: \"Full Name cannot be more than 20 characters\" }),\r\n\r\n    emailAddress: z\r\n      .string()\r\n      .min(1, { message: \"Email is required\" })\r\n      .email(\"Must be a valid email\")\r\n      .max(50, { message: \"Email cannot be more than 50 characters\" }),\r\n\r\n    subject: z\r\n      .string()\r\n      .min(1, { message: \"Subject is required\" })\r\n      .max(50, { message: \"Subject cannot be more than 50 characters\" }),\r\n\r\n    body: z\r\n      .string()\r\n      .min(1, { message: \"Body is required\" })\r\n      .max(500, { message: \"Subject cannot be more than 500 characters\" }),\r\n\r\n    subscribe: z.any(),\r\n  })\r\n);\r\n\r\nexport async function action({ request }: { request: Request }) {\r\n  const data = await validator.validate(await request.formData());\r\n\r\n  if (data.error) {\r\n    return validationError(data.error);\r\n  }\r\n\r\n  const { fullName, emailAddress, subject, body, subscribe } = data.data;\r\n\r\n  try {\r\n    if (subscribe) {\r\n      const exists = await EmailSubscribers.query(\"EmailAddress\")\r\n        .eq(emailAddress)\r\n        .exec();\r\n\r\n      if (!exists[0]) {\r\n        await EmailSubscribers.create({ EmailAddress: emailAddress });\r\n      }\r\n    }\r\n\r\n    await ses.sendEmail({\r\n      Destination: {\r\n        ToAddresses: [\"mproios@eucrona.com\"],\r\n      },\r\n      Message: {\r\n        Body: {\r\n          Text: { Data: body },\r\n        },\r\n\r\n        Subject: { Data: `New inquiry ${fullName} - ${subject}` },\r\n      },\r\n      Source: \"inquiries@eucrona.com\",\r\n    });\r\n\r\n    return \"success\";\r\n  } catch (error) {\r\n    console.error(error);\r\n    return \"error\";\r\n  }\r\n}\r\n\r\nfunction TextField(props: any) {\r\n  const { error, getInputProps } = useField(props.name);\r\n  const actionData = useActionData();\r\n\r\n  return (\r\n    <FormControl id={props.name} isInvalid={error ? true : false}>\r\n      <FormLabel>{props.label}</FormLabel>\r\n      <Input\r\n        {...props}\r\n        {...getInputProps()}\r\n        disabled={actionData === \"success\"}\r\n      />\r\n      <FormErrorMessage>{error}</FormErrorMessage>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nfunction TextArea(props: any) {\r\n  const { error, getInputProps } = useField(props.name);\r\n  const actionData = useActionData();\r\n\r\n  return (\r\n    <FormControl id={props.name} isInvalid={error ? true : false}>\r\n      <FormLabel>{props.label}</FormLabel>\r\n      <Textarea\r\n        {...props}\r\n        {...getInputProps()}\r\n        disabled={actionData === \"success\"}\r\n      />\r\n      <FormErrorMessage>{error}</FormErrorMessage>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nfunction CheckBox(props: any) {\r\n  const { getInputProps } = useField(props.name);\r\n  const actionData = useActionData();\r\n\r\n  return (\r\n    <Checkbox\r\n      {...props}\r\n      {...getInputProps()}\r\n      defaultChecked\r\n      value={\"yes\"}\r\n      disabled={actionData === \"success\"}\r\n    >\r\n      {props.label}\r\n    </Checkbox>\r\n  );\r\n}\r\n\r\nfunction SubmitButton(props: any) {\r\n  const isSubmitting = useIsSubmitting();\r\n  const actionData = useActionData();\r\n\r\n  return (\r\n    <Button\r\n      {...props}\r\n      isLoading={isSubmitting}\r\n      loadingText=\"Sending\"\r\n      disabled={actionData === \"success\" || isSubmitting}\r\n    >\r\n      {props.label}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default function Contacts() {\r\n  const actionData = useActionData();\r\n\r\n  return (\r\n    <Container maxW=\"1200px\" px={{ base: 6, md: 10 }} py={14}>\r\n      <Flex align=\"center\" justify=\"center\" direction=\"column\">\r\n        <Heading fontSize=\"4xl\" mb={2}>\r\n          Contact Us\r\n        </Heading>\r\n        <Text fontSize=\"md\" textAlign=\"center\">\r\n          Send us your requests and questions\r\n        </Text>\r\n      </Flex>\r\n      <Stack\r\n        spacing={10}\r\n        as={ValidatedForm}\r\n        validator={validator}\r\n        method=\"post\"\r\n        id=\"contactForm\"\r\n        resetAfterSubmit={actionData !== \"success\"}\r\n      >\r\n        <VStack\r\n          spacing={8}\r\n          w=\"100%\"\r\n          bg={useColorModeValue(\"white\", \"gray.700\")}\r\n          rounded=\"lg\"\r\n          boxShadow=\"lg\"\r\n          p={{ base: 5, sm: 10 }}\r\n        >\r\n          <VStack spacing={6} w=\"100%\">\r\n            <Stack\r\n              w=\"100%\"\r\n              spacing={3}\r\n              direction={{ base: \"column\", md: \"row\" }}\r\n            >\r\n              <TextField\r\n                label=\"Name\"\r\n                name=\"fullName\"\r\n                placeholder=\"Enter your full name\"\r\n                rounded=\"md\"\r\n                type=\"text\"\r\n              />\r\n\r\n              <TextField\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                name=\"emailAddress\"\r\n                placeholder=\"Enter your email address\"\r\n                rounded=\"md\"\r\n              />\r\n            </Stack>\r\n\r\n            <TextField\r\n              label=\"Subject\"\r\n              type=\"text\"\r\n              name=\"subject\"\r\n              placeholder=\"Enter the subject\"\r\n              rounded=\"md\"\r\n            />\r\n\r\n            <TextArea\r\n              label=\"Message\"\r\n              type=\"text\"\r\n              size=\"lg\"\r\n              name=\"body\"\r\n              placeholder=\"Enter your message\"\r\n              rounded=\"md\"\r\n            />\r\n\r\n            <CheckBox\r\n              type=\"checkbox\"\r\n              name=\"subscribe\"\r\n              label=\"Subscribe to receive updates and news\"\r\n            />\r\n\r\n            <SubmitButton\r\n              type=\"submit\"\r\n              colorScheme=\"primary\"\r\n              label=\"Send Message\"\r\n            />\r\n          </VStack>\r\n\r\n          {actionData && (\r\n            <Alert\r\n              status={actionData === \"success\" ? \"success\" : \"error\"}\r\n              rounded=\"md\"\r\n            >\r\n              <AlertIcon />\r\n              <AlertTitle>\r\n                {actionData === \"success\"\r\n                  ? \"Email sent successfully. Thank you!\"\r\n                  : \"Email failed to send. Please try again.\"}\r\n              </AlertTitle>\r\n            </Alert>\r\n          )}\r\n        </VStack>\r\n      </Stack>\r\n    </Container>\r\n  );\r\n}\r\n", "import { SESClient, SendEmailCommand } from \"@aws-sdk/client-ses\";\r\n\r\nimport type {\r\n  SendEmailCommandOutput,\r\n  SendEmailCommandInput,\r\n} from \"@aws-sdk/client-ses\";\r\n\r\nconst sesClient = new SESClient({ region: \"us-east-1\" });\r\n\r\nconst ses = {\r\n  sendEmail: async function (params: SendEmailCommandInput) {\r\n    let data: SendEmailCommandOutput | undefined;\r\n\r\n    data = await sesClient.send(new SendEmailCommand(params));\r\n\r\n    return data;\r\n  },\r\n};\r\n\r\nexport { ses };\r\n", "import * as dynamoose from \"dynamoose\";\r\nimport type { Item } from \"dynamoose/dist/Item\";\r\n\r\nconst ddb = new dynamoose.aws.ddb.DynamoDB({\r\n  region: \"us-east-1\",\r\n});\r\n\r\ndynamoose.aws.ddb.set(ddb);\r\n\r\ninterface EmailSubscribersProps extends Item {\r\n  EmailAddress: String;\r\n}\r\n\r\nconst EmailSubscribers = dynamoose.model<EmailSubscribersProps>(\r\n  \"EmailSubscribers\",\r\n  {\r\n    EmailAddress: String,\r\n  }\r\n);\r\n\r\nexport { EmailSubscribers, dynamoose };\r\n", "export function action() {\r\n  return null;\r\n}\r\n", "import { Fragment } from \"react\";\r\nimport {\r\n  chakra,\r\n  Container,\r\n  Stack,\r\n  Text,\r\n  useColorModeValue,\r\n  Button,\r\n  Icon,\r\n  HStack,\r\n  SimpleGrid,\r\n  Flex,\r\n  Box,\r\n  Heading,\r\n  Input,\r\n  FormControl,\r\n  FormErrorMessage,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { useActionData } from \"@remix-run/react\";\r\n\r\nimport {\r\n  ValidatedForm,\r\n  validationError,\r\n  useIsSubmitting,\r\n  useField,\r\n} from \"remix-validated-form\";\r\nimport { withZod } from \"@remix-validated-form/with-zod\";\r\nimport { z } from \"zod\";\r\n\r\nimport { ArrowForwardIcon } from \"@chakra-ui/icons\";\r\nimport { FaBook } from \"react-icons/fa\";\r\nimport { AiFillCheckCircle } from \"react-icons/ai\";\r\nimport { Link } from \"@remix-run/react\";\r\nimport { EmailSubscribers, dynamoose } from \"~/utils/db.server\";\r\n\r\n// import type { LoaderFunction } from \"@remix-run/node\";\r\n// import { db } from \"app/utils/db.server\";\r\n\r\ninterface StatData {\r\n  label: string;\r\n  score: string;\r\n}\r\n\r\nconst statData: StatData[] = [\r\n  {\r\n    label: \"Active Applications \",\r\n    score: \">10\",\r\n  },\r\n  {\r\n    label: \"Stars on GitHub\",\r\n    score: \"77k\",\r\n  },\r\n  {\r\n    label: \"Contributors\",\r\n    score: \"2.4k\",\r\n  },\r\n  {\r\n    label: \"Followers on Twitter\",\r\n    score: \"17k\",\r\n  },\r\n];\r\n\r\nconst planList = [\r\n  \"Customer obsessed. We put our customers front & center.\",\r\n  \"Transparency. Most of our work is public.\",\r\n  \"Freedom. We work from anywhere in the world.\",\r\n  \"Autonomy. We want to create a safe, high-trust team.\",\r\n  \"Excellence. We are aiming high, and we know it.\",\r\n];\r\n\r\nconst features = [\r\n  {\r\n    title: \"Developed on the Edge\",\r\n    detail: \"With best practices and latest technologies in mind\",\r\n    icon: (\r\n      <svg\r\n        aria-hidden=\"true\"\r\n        role=\"img\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"28\"\r\n        height=\"28\"\r\n        fill=\"currentColor\"\r\n      >\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          d={`M3 3a2 2 0 012-2h9.982a2 2 0 011.414.586l4.018 4.018A2 2 0 0121 7.018V21a2 2 0 01-2 2H4.75a.75.75 \r\n          0 010-1.5H19a.5.5 0 00.5-.5V8.5h-4a2 2 0 01-2-2v-4H5a.5.5 0 00-.5.5v6.25a.75.75 0 01-1.5 0V3zm12-.5v4a.5.5 \r\n          0 00.5.5h4a.5.5 0 00-.146-.336l-4.018-4.018A.5.5 0 0015 2.5z`}\r\n        ></path>\r\n        <path\r\n          d={`M4.53 12.24a.75.75 0 01-.039 1.06l-2.639 2.45 2.64 2.45a.75.75 0 11-1.022 1.1l-3.23-3a.75.75 0 \r\n        010-1.1l3.23-3a.75.75 0 011.06.04zm3.979 1.06a.75.75 0 111.02-1.1l3.231 3a.75.75 0 010 1.1l-3.23 3a.75.75 \r\n        0 11-1.021-1.1l2.639-2.45-2.64-2.45z`}\r\n        ></path>\r\n      </svg>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Balanced for Performance\",\r\n    detail: \"For consistent workloads and zero downtime\",\r\n    icon: (\r\n      <svg\r\n        aria-hidden=\"true\"\r\n        role=\"img\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"28\"\r\n        height=\"28\"\r\n        fill=\"currentColor\"\r\n      >\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          d={`M12.75 2.75a.75.75 0 00-1.5 0V4.5H9.276a1.75 1.75 0 00-.985.303L6.596 5.957A.25.25 0 016.455 \r\n          6H2.353a.75.75 0 100 1.5H3.93L.563 15.18a.762.762 0 00.21.88c.08.064.161.125.309.221.186.121.452.278.792.433.68.311 \r\n          1.662.62 2.876.62a6.919 6.919 0 002.876-.62c.34-.155.606-.312.792-.433.15-.097.23-.158.31-.223a.75.75 0 \r\n          00.209-.878L5.569 7.5h.886c.351 0 .694-.106.984-.303l1.696-1.154A.25.25 0 019.275 6h1.975v14.5H6.763a.75.75 \r\n          0 000 1.5h10.474a.75.75 0 000-1.5H12.75V6h1.974c.05 0 .1.015.14.043l1.697 1.154c.29.197.633.303.984.303h.886l-3.368 \r\n          7.68a.75.75 0 00.23.896c.012.009 0 0 .002 0a3.154 3.154 0 00.31.206c.185.112.45.256.79.4a7.343 7.343 0 \r\n          002.855.568 7.343 7.343 0 002.856-.569c.338-.143.604-.287.79-.399a3.5 3.5 0 00.31-.206.75.75 0 00.23-.896L20.07 \r\n          7.5h1.578a.75.75 0 000-1.5h-4.102a.25.25 0 01-.14-.043l-1.697-1.154a1.75 1.75 0 00-.984-.303H12.75V2.75zM2.193 \r\n          15.198a5.418 5.418 0 002.557.635 5.418 5.418 0 002.557-.635L4.75 9.368l-2.557 5.83zm14.51-.024c.082.04.174.083.275.126.53.223 \r\n          1.305.45 2.272.45a5.846 5.846 0 002.547-.576L19.25 9.367l-2.547 5.807z`}\r\n        ></path>\r\n      </svg>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Customizeable\",\r\n    detail: \"For every type of use, personal or enterprise\",\r\n    icon: (\r\n      <svg\r\n        aria-hidden=\"true\"\r\n        role=\"img\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"28\"\r\n        height=\"28\"\r\n        fill=\"currentColor\"\r\n      >\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          d={`M10.157 1.154a11.07 11.07 0 013.686 0 .75.75 0 01-.25 1.479 9.568 9.568 0 00-3.186 0 .75.75 0 \r\n          01-.25-1.48zM6.68 3.205a.75.75 0 01-.177 1.046A9.558 9.558 0 004.25 6.503a.75.75 0 01-1.223-.87 \r\n          11.058 11.058 0 012.606-2.605.75.75 0 011.046.177zm10.64 0a.75.75 0 011.046-.177 11.058 11.058 0 \r\n          012.605 2.606.75.75 0 11-1.222.869 9.558 9.558 0 00-2.252-2.252.75.75 0 01-.177-1.046zM2.018 \r\n          9.543a.75.75 0 01.615.864 9.568 9.568 0 000 3.186.75.75 0 01-1.48.25 11.07 11.07 0 010-3.686.75.75 \r\n          0 01.865-.614zm19.964 0a.75.75 0 01.864.614 11.066 11.066 0 010 3.686.75.75 0 01-1.479-.25 9.56 9.56 \r\n          0 000-3.186.75.75 0 01.615-.864zM3.205 17.32a.75.75 0 011.046.177 9.558 9.558 0 002.252 2.252.75.75 \r\n          0 11-.87 1.223 11.058 11.058 0 01-2.605-2.606.75.75 0 01.177-1.046zm17.59 0a.75.75 0 01.176 1.046 \r\n          11.057 11.057 0 01-2.605 2.605.75.75 0 11-.869-1.222 9.558 9.558 0 002.252-2.252.75.75 0 011.046-.177zM9.543 \r\n          21.982a.75.75 0 01.864-.615 9.56 9.56 0 003.186 0 .75.75 0 01.25 1.48 11.066 11.066 0 01-3.686 0 .75.75 0 01-.614-.865z`}\r\n        ></path>\r\n      </svg>\r\n    ),\r\n  },\r\n];\r\n\r\nexport const validator = withZod(\r\n  z.object({\r\n    emailAddress: z\r\n      .string()\r\n      .min(1, { message: \"Email is required\" })\r\n      .email(\"Must be a valid email\")\r\n      .max(50, { message: \"Email cannot be more than 50 characters\" }),\r\n  })\r\n);\r\n\r\nexport async function action({ request }: { request: Request }) {\r\n  const data = await validator.validate(await request.formData());\r\n\r\n  if (data.error) {\r\n    return validationError(data.error);\r\n  }\r\n\r\n  const { emailAddress } = data.data;\r\n\r\n  try {\r\n    const exists = await EmailSubscribers.query(\"EmailAddress\")\r\n      .eq(emailAddress)\r\n      .exec();\r\n\r\n    if (exists[0]) {\r\n      return \"exists\";\r\n    }\r\n\r\n    await EmailSubscribers.create({ EmailAddress: emailAddress });\r\n\r\n    return \"success\";\r\n  } catch (error) {\r\n    console.error(error);\r\n    return \"error\";\r\n  }\r\n}\r\n\r\nfunction TextField(props: any) {\r\n  const { error, getInputProps } = useField(props.name);\r\n  const actionData = useActionData();\r\n\r\n  return (\r\n    <FormControl\r\n      id={props.name}\r\n      isInvalid={error ? true : false}\r\n      w={{ base: \"100%\", md: \"70%\" }}\r\n    >\r\n      <Input\r\n        {...props}\r\n        {...getInputProps()}\r\n        disabled={actionData === \"success\"}\r\n      />\r\n      <FormErrorMessage>{error}</FormErrorMessage>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nfunction SubmitButton(props: any) {\r\n  const isSubmitting = useIsSubmitting();\r\n  const actionData = useActionData();\r\n\r\n  return (\r\n    <Button\r\n      {...props}\r\n      isLoading={isSubmitting}\r\n      loadingText=\"Subscribing\"\r\n      disabled={actionData === \"success\" || isSubmitting}\r\n    >\r\n      {props.label}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default function Index() {\r\n  const actionData = useActionData();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Container maxW=\"1200px\" px={{ base: 6, md: 10 }} py={14}>\r\n        <Stack direction={{ base: \"column\", md: \"row\" }}>\r\n          <Stack direction=\"column\" spacing={10} justifyContent=\"center\">\r\n            <chakra.h1\r\n              fontSize=\"5xl\"\r\n              lineHeight={1}\r\n              fontWeight=\"bold\"\r\n              textAlign=\"left\"\r\n            >\r\n              Production-ready\r\n              <chakra.span\r\n                bgGradient=\"linear(to-br, #228be6, #15aabf)\"\r\n                bgClip=\"text\"\r\n              >\r\n                {\" \"}\r\n                Applications and Solutions{\" \"}\r\n              </chakra.span>{\" \"}\r\n              <br /> built and developed to last\r\n            </chakra.h1>\r\n            <Text\r\n              color={useColorModeValue(\"gray.600\", \"gray.400\")}\r\n              fontSize=\"lg\"\r\n              textAlign=\"left\"\r\n              fontWeight=\"400\"\r\n              maxW=\"700px\"\r\n            >\r\n              Scalable, serverless, and reliable solutions for the needs your\r\n              projects require. <br />\r\n              Eucrona is a centralized cloud based global network of\r\n              applications that grows over time.\r\n            </Text>\r\n            <Stack\r\n              direction={{ base: \"column\", md: \"row\" }}\r\n              spacing={{ base: 5, md: 10 }}\r\n              flexWrap=\"wrap\"\r\n            >\r\n              {features.map((feature, index) => (\r\n                <Stack\r\n                  key={index}\r\n                  direction={{ base: \"row\", md: \"column\" }}\r\n                  spacing={2}\r\n                >\r\n                  <Flex\r\n                    p={3}\r\n                    maxH=\"52px\"\r\n                    w=\"max-content\"\r\n                    color=\"white\"\r\n                    bgGradient=\"linear(to-br, #228be6, #15aabf)\"\r\n                    rounded=\"md\"\r\n                  >\r\n                    {feature.icon}\r\n                  </Flex>\r\n                  <Stack direction=\"column\" spacing={2}>\r\n                    <Text fontSize=\"md\" fontWeight=\"500\">\r\n                      {feature.title}\r\n                    </Text>\r\n                    <Text\r\n                      fontSize=\"sm\"\r\n                      _light={{ color: \"gray.600\" }}\r\n                      _dark={{ color: \"gray.400\" }}\r\n                      maxW={{ base: \"100%\", md: \"200px\" }}\r\n                    >\r\n                      {feature.detail}\r\n                    </Text>\r\n                  </Stack>\r\n                </Stack>\r\n              ))}\r\n            </Stack>\r\n            <Stack direction={{ base: \"column\", sm: \"row\" }} spacing={2}>\r\n              <Button\r\n                rightIcon={<ArrowForwardIcon />}\r\n                size=\"lg\"\r\n                colorScheme={\"primary\"}\r\n                as={Link}\r\n                to=\"/Solutions\"\r\n                draggable={false}\r\n              >\r\n                Get started\r\n              </Button>\r\n\r\n              <Button\r\n                as={Link}\r\n                to=\"/Resources\"\r\n                leftIcon={<FaBook />}\r\n                size=\"lg\"\r\n                rounded=\"md\"\r\n                variant={\"solid\"}\r\n              >\r\n                Resources\r\n              </Button>\r\n            </Stack>\r\n          </Stack>\r\n        </Stack>\r\n      </Container>\r\n      <Box overflow=\"hidden\">\r\n        <svg\r\n          fill={useColorModeValue(\"#f7fafc\", \"#171923\")}\r\n          width=\"150%\"\r\n          height=\"56px\"\r\n          // transform=\"scaleX(-1)\"\r\n          filter=\"drop-shadow(10px 5px 5px rgba(0, 0, 0, 0.05))\"\r\n          preserveAspectRatio=\"none\"\r\n          viewBox=\"0 0 1200 120\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d={`M321.39 56.44c58-10.79 114.16-30.13 172-41.86 82.39-16.72 168.19-17.73 \r\n            250.45-.39C823.78 31 906.67 72 985.66 92.83c70.05 18.48 146.53 26.09 214.34 \r\n            3V0H0v27.35a600.21 600.21 0 00321.39 29.09z`}\r\n          ></path>\r\n        </svg>\r\n      </Box>\r\n\r\n      <Container maxW=\"1200px\" px={{ base: 6, md: 10 }} py={14}>\r\n        <Stack\r\n          direction={{ base: \"column\", md: \"row\" }}\r\n          justifyContent=\"space-between\"\r\n        >\r\n          <Stack spacing={4}>\r\n            <chakra.h1 fontSize=\"2xl\" lineHeight={1.2} fontWeight=\"bold\">\r\n              The Ultimate Goal\r\n            </chakra.h1>\r\n            <Text\r\n              fontSize=\"md\"\r\n              color={useColorModeValue(\"gray.600\", \"gray.400\")}\r\n              maxW=\"480px\"\r\n            >\r\n              As our user base grows, so does our ecosystem develop. The main\r\n              goal at Eucrona is to develop and share applications within our\r\n              centralized database.\r\n            </Text>\r\n\r\n            <Stack spacing={2}>\r\n              <Text\r\n                fontSize=\"md\"\r\n                color={useColorModeValue(\"gray.600\", \"gray.400\")}\r\n              >\r\n                We plan on doing all that cultivating our values:\r\n              </Text>\r\n              {planList.map((data, index) => (\r\n                <HStack\r\n                  key={index}\r\n                  alignItems=\"center\"\r\n                  spacing={1}\r\n                  fontSize=\"md\"\r\n                >\r\n                  <Icon as={AiFillCheckCircle} w={4} h={4} color=\"blue.400\" />\r\n                  <Text fontSize=\"md\">{data}</Text>\r\n                </HStack>\r\n              ))}\r\n            </Stack>\r\n          </Stack>\r\n          <Stack>\r\n            <SimpleGrid\r\n              columns={2}\r\n              spacing={5}\r\n              pt={8}\r\n              pl={{ base: 0, md: 10 }}\r\n              margin=\"auto 0\"\r\n            >\r\n              {statData.map((data, index) => (\r\n                <Stack\r\n                  key={index}\r\n                  pl={3}\r\n                  py={1}\r\n                  pr={1}\r\n                  borderLeft=\"2px solid\"\r\n                  borderLeftColor=\"blue.400\"\r\n                  justifyContent=\"space-between\"\r\n                >\r\n                  <Box fontSize=\"2xl\" fontWeight=\"bold\" color=\"blue.400\">\r\n                    {data.score}\r\n                  </Box>\r\n                  <Text fontSize=\"md\">{data.label}</Text>\r\n                </Stack>\r\n              ))}\r\n            </SimpleGrid>\r\n          </Stack>\r\n        </Stack>\r\n      </Container>\r\n      <Flex\r\n        minH={\"50vh\"}\r\n        align={\"center\"}\r\n        justify={\"center\"}\r\n        as={ValidatedForm}\r\n        validator={validator}\r\n        method=\"post\"\r\n        id=\"subscribeForm\"\r\n        // resetAfterSubmit\r\n        px={{ base: 6, md: 10 }}\r\n        py={14}\r\n      >\r\n        <Stack\r\n          boxShadow={\"2xl\"}\r\n          bg={useColorModeValue(\"gray.50\", \"gray.700\")}\r\n          rounded={\"xl\"}\r\n          p={10}\r\n          spacing={8}\r\n          align={\"center\"}\r\n          maxW=\"750px\"\r\n        >\r\n          <Stack align={\"center\"} spacing={2}>\r\n            <Heading\r\n              textTransform={\"uppercase\"}\r\n              fontSize={\"3xl\"}\r\n              color={useColorModeValue(\"gray.800\", \"gray.200\")}\r\n            >\r\n              Subscribe\r\n            </Heading>\r\n            <Text fontSize={\"lg\"} color={\"gray.500\"} textAlign=\"center\">\r\n              No spam, ever. Your address will only be used for updates and\r\n              news. You can easily unsubscribe any time with a single click.\r\n            </Text>\r\n          </Stack>\r\n          <Stack\r\n            spacing={4}\r\n            direction={{ base: \"column\", md: \"row\" }}\r\n            w={\"100%\"}\r\n          >\r\n            <TextField\r\n              label=\"Email Address\"\r\n              type=\"email\"\r\n              name=\"emailAddress\"\r\n              placeholder=\"Enter your email address\"\r\n              rounded=\"md\"\r\n            />\r\n\r\n            <FormControl w={{ base: \"100%\", md: \"30%\" }}>\r\n              <SubmitButton\r\n                type=\"submit\"\r\n                colorScheme=\"primary\"\r\n                w=\"100%\"\r\n                variant={\"solid\"}\r\n                label=\"Subscribe\"\r\n              />\r\n            </FormControl>\r\n          </Stack>\r\n          {actionData && (\r\n            <Alert\r\n              status={\r\n                actionData === \"success\"\r\n                  ? \"success\"\r\n                  : actionData === \"exists\"\r\n                  ? \"info\"\r\n                  : \"error\"\r\n              }\r\n              rounded=\"md\"\r\n              w={\"full\"}\r\n            >\r\n              <AlertIcon />\r\n              <AlertTitle>\r\n                {actionData === \"success\"\r\n                  ? \"Subscribed successfully!\"\r\n                  : actionData === \"exists\"\r\n                  ? \"Already subscribed, please enter a new email address.\"\r\n                  : \"Failed to subscribe.\"}\r\n              </AlertTitle>\r\n            </Alert>\r\n          )}\r\n        </Stack>\r\n      </Flex>\r\n    </Fragment>\r\n  );\r\n}\r\n", "export default {'version':'773959b5','entry':{'module':'/_static/build/entry.client-KIUWNJ3X.js','imports':['/_static/build/_shared/chunk-IY2KL2ZX.js','/_static/build/_shared/chunk-TZXA3F5S.js','/_static/build/_shared/chunk-JISBONYM.js','/_static/build/_shared/chunk-7MTQJYW3.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/_static/build/root-N5SJJPR5.js','imports':['/_static/build/_shared/chunk-UU7BZSIB.js','/_static/build/_shared/chunk-PHKHS45P.js','/_static/build/_shared/chunk-RSRV5RAU.js','/_static/build/_shared/chunk-7T3D5V2T.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/[sitemap.xml]':{'id':'routes/[sitemap.xml]','parentId':'root','path':'sitemap.xml','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/[sitemap.xml]-HQOEQ5EB.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/contacts':{'id':'routes/contacts','parentId':'root','path':'contacts','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/contacts-5ATA5LJO.js','imports':['/_static/build/_shared/chunk-QHL7P74Z.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dev/null':{'id':'routes/dev/null','parentId':'root','path':'dev/null','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/dev/null-L5C63DWO.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/index-RXSTEZTG.js','imports':['/_static/build/_shared/chunk-QHL7P74Z.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/infrastructure':{'id':'routes/infrastructure','parentId':'root','path':'infrastructure','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/infrastructure-BMNO7YH3.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/resources':{'id':'routes/resources','parentId':'root','path':'resources','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/resources-HRIASZOF.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/solutions':{'id':'routes/solutions','parentId':'root','path':'solutions','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/solutions-APE6EH7Y.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/unsubscribe':{'id':'routes/unsubscribe','parentId':'root','path':'unsubscribe','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/unsubscribe-WLMIU73L.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/_static/build/manifest-773959B5.js'};"],
  "mappings": "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",
  "names": ["import_react", "createCache", "createEmotionServer", "import_react", "import_react", "import_react", "navigationLinks", "eucronaAccounts", "import_react", "import_react", "navigationLinks", "eucronaAccounts", "import_react", "handleResize", "import_icons", "ExecutionEnvironment", "scroll", "import_react", "import_icons", "import_react", "import_icons", "Error", "import_react", "Error", "import_react", "loader", "import_react", "import_icons", "import_react", "import_icons", "import_react", "ChakraLink", "import_react", "action", "action", "validator", "import_react", "import_remix_validated_form", "import_with_zod", "import_zod", "import_icons", "import_fa", "features", "validator", "action", "TextField", "SubmitButton"]
}
