{
  "version": 3,
  "sources": ["../server.js", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.tsx", "../app/styles/context.tsx", "../app/styles/createEmotionCache.ts", "../app/root.tsx", "../app/components/Layout.tsx", "../app/components/Navbar.tsx", "../app/components/Dashboard.tsx", "../app/utils/hooks.ts", "../app/components/Footer.tsx", "../app/components/Catch.tsx", "../app/components/Error.tsx", "../app/styles/theme.tsx", "../app/utils/auth.server.ts", "../app/routes/__auth/verify-identify.tsx", "../app/routes/__auth/register.tsx", "../app/routes/__auth/verify.tsx", "../app/routes/__auth/login.tsx", "../app/routes/dev/null.ts", "../app/routes/whoami.tsx", "../app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["import { createRequestHandler } from \"@remix-run/architect\";\nimport * as build from \"@remix-run/dev/server-build\";\n\nexport const handler = createRequestHandler({\n  build,\n  mode: process.env.NODE_ENV,\n});\n", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes\\\\__auth\\\\verify-identify.tsx\";\nimport * as route2 from \"./routes\\\\__auth\\\\register.tsx\";\nimport * as route3 from \"./routes\\\\__auth\\\\verify.tsx\";\nimport * as route4 from \"./routes\\\\__auth\\\\login.tsx\";\nimport * as route5 from \"./routes\\\\dev\\\\null.ts\";\nimport * as route6 from \"./routes\\\\whoami.tsx\";\nimport * as route7 from \"./routes\\\\index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const publicPath = \"/_static/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/__auth/verify-identify\": {\n      id: \"routes/__auth/verify-identify\",\n      parentId: \"root\",\n      path: \"verify-identify\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/__auth/register\": {\n      id: \"routes/__auth/register\",\n      parentId: \"root\",\n      path: \"register\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/__auth/verify\": {\n      id: \"routes/__auth/verify\",\n      parentId: \"root\",\n      path: \"verify\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/__auth/login\": {\n      id: \"routes/__auth/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/dev/null\": {\n      id: \"routes/dev/null\",\n      parentId: \"root\",\n      path: \"dev/null\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/whoami\": {\n      id: \"routes/whoami\",\n      parentId: \"root\",\n      path: \"whoami\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route7\n    }\n  };", "// entry.server.tsx\nimport { renderToString } from \"react-dom/server\";\nimport { CacheProvider } from \"@emotion/react\";\nimport createEmotionServer from \"@emotion/server/create-instance\";\nimport { RemixServer } from \"@remix-run/react\";\nimport type { EntryContext } from \"@remix-run/node\"; // Depends on the runtime you choose\n\nimport { ServerStyleContext } from \"app/styles/context\";\nimport createEmotionCache from \"app/styles/createEmotionCache\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const cache = createEmotionCache();\n  const { extractCriticalToChunks } = createEmotionServer(cache);\n\n  const html = renderToString(\n    <ServerStyleContext.Provider value={null}>\n      <CacheProvider value={cache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </CacheProvider>\n    </ServerStyleContext.Provider>\n  );\n\n  const chunks = extractCriticalToChunks(html);\n\n  const markup = renderToString(\n    <ServerStyleContext.Provider value={chunks.styles}>\n      <CacheProvider value={cache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </CacheProvider>\n    </ServerStyleContext.Provider>\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(`<!DOCTYPE html>${markup}`, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "// context.tsx\r\nimport React, { createContext } from \"react\";\r\n\r\nexport interface ServerStyleContextData {\r\n  key: string;\r\n  ids: Array<string>;\r\n  css: string;\r\n}\r\n\r\nexport const ServerStyleContext = createContext<\r\n  ServerStyleContextData[] | null\r\n>(null);\r\n\r\nexport interface ClientStyleContextData {\r\n  reset: () => void;\r\n}\r\n\r\nexport const ClientStyleContext = createContext<ClientStyleContextData | null>(\r\n  null\r\n);\r\n", "// createEmotionCache.ts\r\nimport createCache from \"@emotion/cache\";\r\n\r\nexport default function createEmotionCache() {\r\n  return createCache({ key: \"css\" });\r\n}\r\n", "import React, { useContext, useEffect } from \"react\";\nimport { withEmotionCache } from \"@emotion/react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { json, redirect } from \"@remix-run/node\";\n\nimport { useCatch, useLoaderData } from \"@remix-run/react\";\n\nimport type { LoaderFunction } from \"@remix-run/node\";\n\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\nimport type { MetaFunction, LinksFunction } from \"@remix-run/node\";\n\nimport { ServerStyleContext, ClientStyleContext } from \"app/styles/context\";\n\nimport Layout from \"app/components/Layout\";\nimport Catch from \"app/components/Catch\";\nimport Error from \"app/components/Error\";\n\nimport theme from \"app/styles/theme\";\n\nimport global from \"app/styles/global.css\";\nimport * as auth from \"app/utils/auth.server\";\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Eucrona\",\n  description:\n    \"Production-ready Applications and Solutions built and developed to last\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport const links: LinksFunction = () => {\n  return [\n    {\n      rel: \"stylesheet\",\n      href: global,\n    },\n\n    {\n      rel: \"icon\",\n      type: \"image/png\",\n      href: \"/_static/favicon.ico\",\n    },\n  ];\n};\n\ninterface DocumentProps {\n  children: React.ReactNode;\n}\n\nexport const action = async ({ request }: any) => {\n  try {\n    return await auth.signOut(request);\n  } catch (error) {\n    return \"\";\n  }\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  try {\n    const isAuthRes = await auth.isAuthenticated(request);\n    const userRes = await auth.getSession(request.headers.get(\"Cookie\"));\n\n    return json({ isAuthenticated: isAuthRes, user: userRes });\n  } catch (error) {\n    return \"\";\n  }\n};\n\nconst Document = withEmotionCache(\n  ({ children }: DocumentProps, emotionCache) => {\n    const serverStyleData = useContext(ServerStyleContext);\n    const clientStyleData = useContext(ClientStyleContext);\n\n    // Only executed on client\n    useEffect(() => {\n      // re-link sheet container\n      emotionCache.sheet.container = document.head;\n      // re-inject tags\n      const tags = emotionCache.sheet.tags;\n      emotionCache.sheet.flush();\n      tags.forEach((tag) => {\n        (emotionCache.sheet as any)._insertTag(tag);\n      });\n      // reset cache to reapply global styles\n      clientStyleData?.reset();\n    }, []);\n\n    return (\n      <html lang=\"en\">\n        <head>\n          <Meta />\n          <Links />\n          {serverStyleData?.map(({ key, ids, css }) => (\n            <style\n              key={key}\n              data-emotion={`${key} ${ids.join(\" \")}`}\n              dangerouslySetInnerHTML={{ __html: css }}\n            />\n          ))}\n        </head>\n\n        <body style={{ height: \"100%\", overflow: \"overlay\" }}>\n          <ChakraProvider theme={theme}>{children}</ChakraProvider>\n          <ScrollRestoration />\n          <Scripts />\n          {process.env.NODE_ENV === \"development\" ? <LiveReload /> : null}\n        </body>\n      </html>\n    );\n  }\n);\n\nexport default function App() {\n  return (\n    <Document>\n      <Layout>\n        <Outlet />\n      </Layout>\n    </Document>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  return (\n    <Document>\n      <Layout>\n        <Error error={error} />\n      </Layout>\n    </Document>\n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  return (\n    <Document>\n      <Layout>\n        <Catch caught={caught} />\n      </Layout>\n    </Document>\n  );\n}\n", "import { Fragment, ReactNode, useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Fade,\r\n  Divider,\r\n  IconButton,\r\n  Box,\r\n  useDisclosure,\r\n  Show,\r\n  Tooltip,\r\n  Center,\r\n  Skeleton,\r\n  Spinner,\r\n  Progress,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\nimport ExecutionEnvironment from \"exenv\";\r\n\r\nimport Navbar from \"app/components/Navbar\";\r\nimport Dashboard from \"~/components/Dashboard\";\r\nimport Footer from \"app/components/Footer\";\r\n\r\nimport { FaGithub, FaLinkedin } from \"react-icons/fa\";\r\n\r\nimport { useWindowDimensions } from \"app/utils/hooks\";\r\nimport { useScrollButtonVisibility } from \"app/utils/hooks\";\r\nimport { ChevronUpIcon } from \"@chakra-ui/icons\";\r\nimport { useLoaderData, useTransition } from \"@remix-run/react\";\r\nimport * as auth from \"app/utils/auth.server\";\r\nimport { LoaderFunction } from \"@remix-run/node\";\r\n\r\ninterface LayoutProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst navigationLinks = [\r\n  { label: \"Solutions\", url: \"Solutions\" },\r\n  { label: \"Infrastructure\", url: \"Infrastructure\" },\r\n  { label: \"Resources\", url: \"Resources\" },\r\n  { label: \"Contacts\", url: \"Contacts\" },\r\n];\r\n\r\nconst eucronaAccounts = [\r\n  {\r\n    label: \"Michail Proios LinkedIn\",\r\n    url: \"https://www.linkedin.com/in/michail-proios/\",\r\n    isExternal: true,\r\n    icon: <FaLinkedin />,\r\n  },\r\n  {\r\n    label: \"Michail Proios Github\",\r\n    url: \"https://github.com/MichailProios\",\r\n    isExternal: true,\r\n    icon: <FaGithub />,\r\n  },\r\n];\r\n\r\n// export const loader: LoaderFunction = async ({ request }: any) => {\r\n//   try {\r\n//     return await auth.isAuthenticated(request);\r\n//   } catch (error) {\r\n//     return \"\";\r\n//   }\r\n// };\r\n\r\nexport default function Layout({ children }: LayoutProps) {\r\n  const [flag, setFlag] = useState(false);\r\n  const { height } = useWindowDimensions();\r\n\r\n  const showButton = useScrollButtonVisibility();\r\n\r\n  useEffect(() => {\r\n    if (ExecutionEnvironment.canUseDOM) {\r\n      setFlag(true);\r\n    }\r\n  }, [setFlag]);\r\n\r\n  const handleScrollToTop = () => {\r\n    if (ExecutionEnvironment.canUseDOM) {\r\n      scroll.scrollToTop({\r\n        duration: 400,\r\n        delay: 0,\r\n        smooth: \"easeInOutQuart\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const { isAuthenticated } = useLoaderData();\r\n  const transition = useTransition();\r\n\r\n  return (\r\n    <Box\r\n      display={\"flex\"}\r\n      width={\"100%\"}\r\n      minHeight={height || \"100vh\"}\r\n      flexDirection={\"column\"}\r\n      justifyContent=\"flex-start\"\r\n    >\r\n      {!isAuthenticated && (\r\n        <>\r\n          <Navbar\r\n            navigationLinks={navigationLinks}\r\n            eucronaAccounts={eucronaAccounts}\r\n          />\r\n          <Progress\r\n            isIndeterminate\r\n            display={transition.state !== \"idle\" ? \"flex\" : \"none\"}\r\n            size=\"xs\"\r\n            position=\"fixed\"\r\n            top={\"64px\"}\r\n            zIndex={800}\r\n            width={\"100%\"}\r\n            backgroundColor=\"transparent\"\r\n            colorScheme={\"primary\"}\r\n          />\r\n          <Box>{children}</Box>\r\n          <Box marginTop={\"auto\"}>\r\n            <Footer />\r\n          </Box>\r\n        </>\r\n      )}\r\n\r\n      {isAuthenticated && (\r\n        <>\r\n          <Dashboard>\r\n            {children}\r\n            <Box marginTop={\"auto\"}>\r\n              <Footer />\r\n            </Box>\r\n          </Dashboard>\r\n        </>\r\n      )}\r\n\r\n      <Box display={{ base: \"none\", md: \"flex\" }}>\r\n        <Fade in={showButton} unmountOnExit style={{ zIndex: 1000 }}>\r\n          <Tooltip label=\"Scroll to Top\" closeOnScroll>\r\n            <IconButton\r\n              onClick={handleScrollToTop}\r\n              aria-label=\"top\"\r\n              zIndex={1000}\r\n              shadow=\"lg\"\r\n              size=\"lg\"\r\n              rounded={\"full\"}\r\n              position=\"fixed\"\r\n              bottom={12}\r\n              right={16}\r\n              colorScheme={\"primary\"}\r\n            >\r\n              <ChevronUpIcon fontSize=\"1.5em\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Fade>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n", "import { ReactNode, useEffect, useRef, forwardRef } from \"react\";\r\n\r\nimport {\r\n  Show,\r\n  Spinner,\r\n  Flex,\r\n  Image,\r\n  HStack,\r\n  Button,\r\n  IconButton,\r\n  useColorModeValue,\r\n  useColorMode,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  VStack,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  useDisclosure,\r\n  DrawerHeader,\r\n  Link,\r\n  DrawerCloseButton,\r\n  useBreakpoint,\r\n  Box,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { NavLink } from \"@remix-run/react\";\r\n\r\n// import Footer from \"app/components/Footer\";\r\n\r\nimport { HamburgerIcon, MoonIcon, SunIcon } from \"@chakra-ui/icons\";\r\n\r\nimport LogoSideways from \"public/logos/Logo-Sideways.svg\";\r\nimport LogoPlain from \"public/logos/Logo-Plain.svg\";\r\n\r\ninterface NavbarProps {\r\n  navigationLinks: { label: string; url: string }[];\r\n  eucronaAccounts: {\r\n    label: string;\r\n    url: string;\r\n    isExternal: boolean;\r\n    icon: any;\r\n  }[];\r\n}\r\n\r\nexport default function Navbar({\r\n  navigationLinks,\r\n  eucronaAccounts,\r\n}: NavbarProps) {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const btnRef = useRef<HTMLButtonElement>(null);\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  const breakpoint = useBreakpoint({ ssr: true });\r\n\r\n  useEffect(() => {\r\n    if (breakpoint === \"lg\") {\r\n      onClose();\r\n    }\r\n  }, [breakpoint, onClose]);\r\n\r\n  return (\r\n    <>\r\n      <NavbarHeader\r\n        isOpen={isOpen}\r\n        onOpen={onOpen}\r\n        onClose={onClose}\r\n        btnRef={btnRef}\r\n        colorMode={colorMode}\r\n        toggleColorMode={toggleColorMode}\r\n        navigationLinks={navigationLinks}\r\n        eucronaAccounts={eucronaAccounts}\r\n      />\r\n      {/* <NavbarDrawer\r\n        isOpen={isOpen}\r\n        onOpen={onOpen}\r\n        onClose={onClose}\r\n        btnRef={btnRef}\r\n        colorMode={colorMode}\r\n        toggleColorMode={toggleColorMode}\r\n        navigationLinks={navigationLinks}\r\n        eucronaAccounts={eucronaAccounts}\r\n      /> */}\r\n    </>\r\n  );\r\n}\r\n\r\ninterface NavbarHeaderProps {\r\n  isOpen: any;\r\n  onOpen: any;\r\n  onClose: any;\r\n  btnRef: any;\r\n  colorMode: any;\r\n  toggleColorMode: any;\r\n  navigationLinks: { label: string; url: string }[];\r\n  eucronaAccounts: {\r\n    label: string;\r\n    url: string;\r\n    isExternal: boolean;\r\n    icon: any;\r\n  }[];\r\n}\r\n\r\nfunction NavbarHeader({\r\n  isOpen,\r\n  onOpen,\r\n  onClose,\r\n  btnRef,\r\n  colorMode,\r\n  toggleColorMode,\r\n  navigationLinks,\r\n  eucronaAccounts,\r\n}: NavbarHeaderProps) {\r\n  return (\r\n    <Flex\r\n      h={16}\r\n      alignItems={\"center\"}\r\n      justifyContent={\"center\"}\r\n      px={{ base: 4, sm: 6, lg: 8 }}\r\n      bg={useColorModeValue(\"gray.50\", \"gray.900\")}\r\n      position=\"sticky\"\r\n      top={0}\r\n      zIndex={800}\r\n      width={\"100%\"}\r\n      as=\"header\"\r\n      boxShadow={\"md\"}\r\n    >\r\n      <Flex\r\n        alignItems={\"center\"}\r\n        justifyContent={\"space-between\"}\r\n        w={\"100%\"}\r\n        maxW={\"1600px\"}\r\n      >\r\n        <HStack spacing=\"40px\">\r\n          <NavLink to={\"/\"} prefetch=\"render\" draggable={false}>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                \"@media screen and (max-width: 370px)\": {\r\n                  display: \"none\",\r\n                },\r\n              }}\r\n            >\r\n              <Image\r\n                objectFit=\"contain\"\r\n                h={50}\r\n                w={\"auto\"}\r\n                minWidth=\"156px\"\r\n                src={LogoSideways}\r\n                alt=\"Eucrona-Logo\"\r\n                draggable=\"false\"\r\n                loading=\"eager\"\r\n              />\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                display: \"none\",\r\n                \"@media screen and (max-width: 370px)\": {\r\n                  display: \"flex\",\r\n                },\r\n              }}\r\n            >\r\n              <Image\r\n                objectFit=\"contain\"\r\n                h={50}\r\n                w={\"auto\"}\r\n                src={LogoPlain}\r\n                alt=\"Eucrona-Logo\"\r\n                draggable=\"false\"\r\n                loading=\"eager\"\r\n              />\r\n            </Box>\r\n          </NavLink>\r\n          {/* <HStack spacing=\"12px\" display={{ base: \"none\", lg: \"flex\" }}>\r\n            {navigationLinks.map((link, index) => (\r\n              <NavLink\r\n                key={index}\r\n                to={link.url}\r\n                draggable=\"false\"\r\n                prefetch=\"render\"\r\n              >\r\n                {({ isActive }) => (\r\n                  <Button onClick={onClose} variant=\"ghost\" isActive={isActive}>\r\n                    {link.label}\r\n                  </Button>\r\n                )}\r\n              </NavLink>\r\n            ))}\r\n          </HStack> */}\r\n        </HStack>\r\n\r\n        {/* <HStack spacing=\"12px\"> */}\r\n        <HStack spacing=\"2px\">\r\n          {/* {eucronaAccounts.map((value, index) => (\r\n              <IconButton\r\n                key={index}\r\n                variant={\"ghost\"}\r\n                aria-label=\"Color Scheme\"\r\n                as={Link}\r\n                href={value.url}\r\n                isExternal={value.isExternal}\r\n              >\r\n                {value.icon}\r\n              </IconButton>\r\n            ))} */}\r\n\r\n          <IconButton\r\n            variant={\"ghost\"}\r\n            aria-label=\"Color Scheme\"\r\n            onClick={() => {\r\n              toggleColorMode();\r\n            }}\r\n          >\r\n            {colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\r\n          </IconButton>\r\n        </HStack>\r\n\r\n        {/* <Button\r\n            fontSize={\"sm\"}\r\n            fontWeight={400}\r\n            display={{ base: \"none\", lg: \"flex\" }}\r\n            as={Link}\r\n            href=\"https://cloud.eucrona.com\"\r\n            style={{ textDecoration: \"none\" }}\r\n            variant={\"solid\"}\r\n          >\r\n            Sign In\r\n          </Button>\r\n\r\n          <Button\r\n            fontSize={\"sm\"}\r\n            fontWeight={600}\r\n            variant=\"solid\"\r\n            colorScheme={\"primary\"}\r\n            display={{ base: \"none\", lg: \"flex\" }}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n\r\n          <IconButton\r\n            aria-label=\"Open Drawer\"\r\n            ref={btnRef}\r\n            onClick={onOpen}\r\n            display={{ lg: \"none\" }}\r\n          >\r\n            <HamburgerIcon />\r\n          </IconButton> */}\r\n        {/* </HStack> */}\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n}\r\n\r\ninterface NavbarDrawerProps {\r\n  isOpen: any;\r\n  onOpen: any;\r\n  onClose: any;\r\n  btnRef: any;\r\n  colorMode: any;\r\n  toggleColorMode: any;\r\n  navigationLinks: { label: string; url: string }[];\r\n  eucronaAccounts: {\r\n    label: string;\r\n    url: string;\r\n    isExternal: boolean;\r\n    icon: any;\r\n  }[];\r\n}\r\n\r\nfunction NavbarDrawer({\r\n  isOpen,\r\n  onOpen,\r\n  onClose,\r\n  btnRef,\r\n  colorMode,\r\n  toggleColorMode,\r\n  navigationLinks,\r\n  eucronaAccounts,\r\n}: NavbarDrawerProps) {\r\n  return (\r\n    <Drawer\r\n      isOpen={isOpen}\r\n      placement=\"right\"\r\n      size=\"xs\"\r\n      onClose={onClose}\r\n      finalFocusRef={btnRef}\r\n    >\r\n      <DrawerOverlay />\r\n\r\n      <DrawerContent>\r\n        <DrawerCloseButton />\r\n        <DrawerHeader p={2} alignSelf=\"center\">\r\n          <NavLink to={\"/\"} onClick={onClose} prefetch=\"render\">\r\n            <Image\r\n              objectFit=\"contain\"\r\n              h={50}\r\n              w={\"auto\"}\r\n              src={LogoPlain}\r\n              alt=\"Eucrona-Logo\"\r\n              draggable=\"false\"\r\n              loading=\"eager\"\r\n            />\r\n          </NavLink>\r\n        </DrawerHeader>\r\n        <DrawerBody>\r\n          <VStack spacing=\"12px\" align=\"stretch\">\r\n            {navigationLinks.map((link, index) => (\r\n              <NavLink\r\n                key={index}\r\n                to={link.url}\r\n                draggable=\"false\"\r\n                prefetch=\"render\"\r\n              >\r\n                {({ isActive }) => (\r\n                  <Button\r\n                    onClick={onClose}\r\n                    variant=\"ghost\"\r\n                    isActive={isActive}\r\n                    w={\"100%\"}\r\n                  >\r\n                    {link.label}\r\n                  </Button>\r\n                )}\r\n              </NavLink>\r\n            ))}\r\n          </VStack>\r\n        </DrawerBody>\r\n\r\n        <DrawerFooter alignSelf=\"center\" width={\"100%\"}>\r\n          <VStack spacing=\"12px\" width={\"100%\"}>\r\n            <Button\r\n              fontSize={\"sm\"}\r\n              width={\"100%\"}\r\n              fontWeight={400}\r\n              as={Link}\r\n              href=\"https://cloud.eucrona.com\"\r\n              style={{ textDecoration: \"none\" }}\r\n              variant={\"solid\"}\r\n            >\r\n              Sign In\r\n            </Button>\r\n\r\n            <Button\r\n              width={\"100%\"}\r\n              fontSize={\"sm\"}\r\n              fontWeight={600}\r\n              variant=\"solid\"\r\n              colorScheme={\"primary\"}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </VStack>\r\n        </DrawerFooter>\r\n      </DrawerContent>\r\n    </Drawer>\r\n  );\r\n}\r\n", "import { ReactNode, useEffect, useRef, forwardRef, Children } from \"react\";\r\n\r\nimport {\r\n  Show,\r\n  Spinner,\r\n  Flex,\r\n  Image,\r\n  HStack,\r\n  Button,\r\n  IconButton,\r\n  useColorModeValue,\r\n  useColorMode,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  VStack,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  useDisclosure,\r\n  DrawerHeader,\r\n  Link,\r\n  DrawerCloseButton,\r\n  useBreakpoint,\r\n  Box,\r\n  Avatar,\r\n  CloseButton,\r\n  Icon,\r\n  Text,\r\n  BoxProps,\r\n  FlexProps,\r\n  Menu,\r\n  MenuButton,\r\n  MenuDivider,\r\n  MenuItem,\r\n  MenuList,\r\n  Progress,\r\n  Stack,\r\n  useBoolean,\r\n  SlideFade,\r\n  Slide,\r\n  ScaleFade,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { Form, NavLink, useLoaderData, useTransition } from \"@remix-run/react\";\r\n\r\nimport {\r\n  FiHome,\r\n  FiTrendingUp,\r\n  FiCompass,\r\n  FiStar,\r\n  FiSettings,\r\n  FiMenu,\r\n  FiBell,\r\n  FiChevronDown,\r\n} from \"react-icons/fi\";\r\n\r\nimport {\r\n  HamburgerIcon,\r\n  MoonIcon,\r\n  SunIcon,\r\n  BellIcon,\r\n  ChevronDownIcon,\r\n  ChevronLeftIcon,\r\n  ChevronRightIcon,\r\n} from \"@chakra-ui/icons\";\r\n\r\nimport LogoSideways from \"public/logos/Logo-Sideways.svg\";\r\nimport LogoPlain from \"public/logos/Logo-Plain.svg\";\r\nimport { useWindowDimensions } from \"~/utils/hooks\";\r\n\r\ninterface NavbarProps {\r\n  children: any;\r\n}\r\n\r\nexport default function Dashboard({ children }: NavbarProps) {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const btnRef = useRef<HTMLButtonElement>(null);\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n  const breakpoint = useBreakpoint({ ssr: true });\r\n\r\n  useEffect(() => {\r\n    if (breakpoint === \"lg\") {\r\n      onClose();\r\n    }\r\n  }, [breakpoint, onClose]);\r\n\r\n  return (\r\n    <>\r\n      <Sidebar>{children}</Sidebar>\r\n    </>\r\n  );\r\n}\r\n\r\ninterface SidebarProps extends BoxProps {\r\n  children: any;\r\n  // onClose: () => void;\r\n}\r\n\r\nconst Sidebar = ({ children, ...rest }: SidebarProps) => {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  const [sidebar, setSidebar] = useBoolean();\r\n  const transition = useTransition();\r\n  const { height } = useWindowDimensions();\r\n  const breakpoint = useBreakpoint({ ssr: true });\r\n\r\n  useEffect(() => {\r\n    if (breakpoint === \"lg\" || breakpoint === \"md\") {\r\n      setSidebar.on();\r\n    } else {\r\n      setSidebar.off();\r\n    }\r\n  }, [breakpoint, setSidebar]);\r\n\r\n  return (\r\n    <Flex\r\n      flexDirection=\"row\"\r\n      justifyContent=\"flex-start\"\r\n      display={{ sm: \"none\", md: \"flex\" }}\r\n    >\r\n      <Box\r\n        transition=\"0.3s ease\"\r\n        zIndex={850}\r\n        bg={useColorModeValue(\"gray.50\", \"gray.900\")}\r\n        borderRight=\"1px\"\r\n        borderRightColor={useColorModeValue(\"gray.200\", \"gray.800\")}\r\n        boxShadow={\"md\"}\r\n        w={sidebar ? \"60px\" : \"240px\"}\r\n        position=\"fixed\"\r\n        h=\"full\"\r\n        display=\"flex\"\r\n        flexDirection={\"column\"}\r\n        justifyContent=\"center\"\r\n        {...rest}\r\n      >\r\n        <Flex h={16} alignItems=\"center\" justifyContent=\"center\">\r\n          <HStack direction={\"row\"} align=\"center\" spacing={sidebar ? 0 : 4}>\r\n            <SlideFade in={!sidebar} reverse>\r\n              <NavLink\r\n                to={\"/\"}\r\n                draggable={false}\r\n                style={{ display: sidebar ? \"none\" : \"flex\" }}\r\n              >\r\n                <Box>\r\n                  <Image\r\n                    objectFit=\"contain\"\r\n                    h={50}\r\n                    w={\"auto\"}\r\n                    minWidth=\"156px\"\r\n                    src={LogoSideways}\r\n                    alt=\"Eucrona-Logo\"\r\n                    draggable=\"false\"\r\n                    loading=\"eager\"\r\n                  />\r\n                </Box>\r\n              </NavLink>\r\n            </SlideFade>\r\n            <SlideFade in={sidebar} reverse>\r\n              <NavLink\r\n                to={\"/\"}\r\n                draggable={false}\r\n                style={{ display: sidebar ? \"flex\" : \"none\" }}\r\n              >\r\n                <Box>\r\n                  <Image\r\n                    objectFit=\"contain\"\r\n                    h={\"35px\"}\r\n                    w={\"auto\"}\r\n                    src={LogoPlain}\r\n                    alt=\"Eucrona-Logo\"\r\n                    draggable=\"false\"\r\n                    loading=\"eager\"\r\n                  />\r\n                </Box>\r\n              </NavLink>\r\n            </SlideFade>\r\n          </HStack>\r\n        </Flex>\r\n\r\n        <Box\r\n          display=\"flex\"\r\n          w=\"100%\"\r\n          justifyContent=\"flex-end\"\r\n          alignItems=\"flex-end\"\r\n          marginTop=\"auto\"\r\n        >\r\n          <IconButton\r\n            variant={\"ghost\"}\r\n            aria-label=\"Sidebar Toggle\"\r\n            onClick={setSidebar.toggle}\r\n            m={\"10px\"}\r\n          >\r\n            {sidebar ? (\r\n              <ChevronRightIcon fontSize={\"xl\"} />\r\n            ) : (\r\n              <ChevronLeftIcon fontSize={\"xl\"} />\r\n            )}\r\n          </IconButton>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box w={\"100%\"}>\r\n        <Header colorMode={colorMode} toggleColorMode={toggleColorMode} />\r\n        <Progress\r\n          isIndeterminate\r\n          width={\"100%\"}\r\n          display={transition.state !== \"idle\" ? \"flex\" : \"none\"}\r\n          ml={sidebar ? \"60px\" : \"240px\"}\r\n          size=\"xs\"\r\n          position=\"fixed\"\r\n          top={\"64px\"}\r\n          zIndex={800}\r\n          backgroundColor=\"transparent\"\r\n          colorScheme={\"primary\"}\r\n        />\r\n        <Box\r\n          transition=\"0.3s ease\"\r\n          ml={sidebar ? \"60px\" : \"240px\"}\r\n          display={\"flex\"}\r\n          flexDirection={\"column\"}\r\n          justifyContent=\"flex-start\"\r\n          minHeight={height ? `calc(${height}px - 64px)` : `calc(100vh - 64px)`}\r\n        >\r\n          {children}\r\n        </Box>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\ninterface HeaderProps {\r\n  colorMode: any;\r\n  toggleColorMode: any;\r\n}\r\n\r\nfunction Header({ colorMode, toggleColorMode }: HeaderProps) {\r\n  return (\r\n    <>\r\n      <Flex\r\n        h={16}\r\n        alignItems={\"center\"}\r\n        justifyContent={\"center\"}\r\n        px={{ base: 4, sm: 6, lg: 8 }}\r\n        bg={useColorModeValue(\"gray.50\", \"gray.900\")}\r\n        position=\"sticky\"\r\n        top={0}\r\n        zIndex={800}\r\n        width={\"100%\"}\r\n        as=\"header\"\r\n        boxShadow={\"md\"}\r\n      >\r\n        <Flex\r\n          alignItems={\"center\"}\r\n          justifyContent={\"flex-end\"}\r\n          w={\"100%\"}\r\n          // maxW={\"1920px\"}\r\n        >\r\n          <HStack spacing={4}>\r\n            <IconButton\r\n              variant={\"ghost\"}\r\n              aria-label=\"Color Scheme\"\r\n              onClick={() => {\r\n                toggleColorMode();\r\n              }}\r\n            >\r\n              {colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\r\n            </IconButton>\r\n\r\n            <IconButton variant={\"ghost\"} aria-label=\"Notifications\">\r\n              <BellIcon fontSize={\"xl\"} />\r\n            </IconButton>\r\n            <UserMenu />\r\n          </HStack>\r\n        </Flex>\r\n      </Flex>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction UserMenu() {\r\n  const { user } = useLoaderData();\r\n\r\n  return (\r\n    <Flex alignItems={\"center\"}>\r\n      <Menu>\r\n        <MenuButton\r\n          h={12}\r\n          as={Button}\r\n          variant=\"ghost\"\r\n          p={2}\r\n          rightIcon={<ChevronDownIcon />}\r\n          transition=\"all 0.3s\"\r\n        >\r\n          <HStack>\r\n            <Avatar size={\"sm\"} />\r\n            <VStack\r\n              display={{ base: \"none\", md: \"flex\" }}\r\n              alignItems=\"flex-start\"\r\n              spacing=\"1px\"\r\n              ml=\"2\"\r\n            >\r\n              <Text fontSize=\"sm\">{user.data.UserId.payload.name}</Text>\r\n              <Text fontSize=\"xs\" color=\"gray.600\">\r\n                Base\r\n              </Text>\r\n            </VStack>\r\n          </HStack>\r\n        </MenuButton>\r\n        <MenuList bg={useColorModeValue(\"gray.50\", \"gray.900\")} boxShadow=\"md\">\r\n          <MenuItem>Profile</MenuItem>\r\n          <MenuItem>Settings</MenuItem>\r\n          <MenuDivider />\r\n          <Form method=\"post\" replace>\r\n            <MenuItem type=\"submit\">Sign out</MenuItem>\r\n          </Form>\r\n        </MenuList>\r\n      </Menu>\r\n    </Flex>\r\n  );\r\n}\r\n", "import { useEffect, useState } from \"react\";\r\n\r\nexport function useScrollButtonVisibility() {\r\n  const [showButton, setShowButton] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      const handleScrollButtonVisiblity = () => {\r\n        window.pageYOffset > 300 ? setShowButton(true) : setShowButton(false);\r\n      };\r\n      window.addEventListener(\"scroll\", handleScrollButtonVisiblity);\r\n      return () => {\r\n        window.removeEventListener(\"scroll\", handleScrollButtonVisiblity);\r\n      };\r\n    }\r\n  }, []); // Empty array ensures that effect is only run on mount\r\n  return showButton;\r\n}\r\n\r\ntype WindowDimentions = {\r\n  width: number | undefined;\r\n  height: number | undefined;\r\n};\r\n\r\nexport function useWindowDimensions() {\r\n  const [windowDimensions, setWindowSize] = useState<WindowDimentions>({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // only execute all the code below in client side\r\n    if (typeof window !== \"undefined\") {\r\n      // Handler to call on window resize\r\n      function handleResize() {\r\n        // Set window width/height to state\r\n        setWindowSize({\r\n          width: window.innerWidth,\r\n          height: window.innerHeight,\r\n        });\r\n      }\r\n\r\n      // Add event listener\r\n      window.addEventListener(\"resize\", handleResize);\r\n\r\n      // Call handler right away so state gets updated with initial window size\r\n      handleResize();\r\n\r\n      // Remove event listener on cleanup\r\n      return () => window.removeEventListener(\"resize\", handleResize);\r\n    }\r\n  }, []); // Empty array ensures that effect is only run on mount\r\n  return windowDimensions;\r\n}\r\n", "import {\r\n  Stack,\r\n  HStack,\r\n  Link,\r\n  Divider,\r\n  Image,\r\n  IconButton,\r\n  LinkProps,\r\n  Button,\r\n  Center,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\n// Here we have used react-icons package for the icons\r\n\r\nimport LogoPlain from \"public/logos/Logo-Plain.svg\";\r\n\r\nimport { NavLink } from \"@remix-run/react\";\r\n\r\n// interface FooterProps {\r\n//   navigationLinks: { label: string; url: string }[];\r\n//   eucronaAccounts: {\r\n//     label: string;\r\n//     url: string;\r\n//     isExternal: boolean;\r\n//     icon: any;\r\n//   }[];\r\n// }\r\n\r\nfunction Footer() {\r\n  return (\r\n    <Center p={2} marginInline=\"auto\">\r\n      <Text>Eucrona Cloud {new Date().getFullYear()}</Text>\r\n    </Center>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n", "import React from \"react\";\r\nimport { Heading, Text, Button, Container, VStack } from \"@chakra-ui/react\";\r\nimport { NavLink } from \"@remix-run/react\";\r\nimport { ArrowForwardIcon } from \"@chakra-ui/icons\";\r\n\r\ninterface CatchProps {\r\n  caught: any;\r\n}\r\n\r\nexport default function Catch({ caught }: CatchProps) {\r\n  return (\r\n    <Container mt=\"5em\">\r\n      <VStack>\r\n        <Heading bgGradient=\"linear(to-br, #228be6, #15aabf)\" bgClip=\"text\">\r\n          {caught.status}\r\n        </Heading>\r\n        <Text fontSize=\"18px\">{caught.statusText}</Text>\r\n\r\n        <Button\r\n          rightIcon={<ArrowForwardIcon />}\r\n          variant=\"solid\"\r\n          colorScheme={\"primary\"}\r\n          size=\"lg\"\r\n          as={NavLink}\r\n          to=\"/\"\r\n          draggable={false}\r\n        >\r\n          Go to Home\r\n        </Button>\r\n      </VStack>\r\n    </Container>\r\n  );\r\n}\r\n", "import React from \"react\";\r\nimport { Heading, Text, Button, Container, VStack } from \"@chakra-ui/react\";\r\nimport { NavLink } from \"@remix-run/react\";\r\nimport { ArrowForwardIcon } from \"@chakra-ui/icons\";\r\n\r\ninterface ErrorProps {\r\n  error: any;\r\n}\r\n\r\nexport default function Error({ error }: ErrorProps) {\r\n  console.error(error.stack);\r\n  return (\r\n    <Container mt=\"5em\">\r\n      <VStack>\r\n        <Heading bgGradient=\"linear(to-br, #228be6, #15aabf)\" bgClip=\"text\">\r\n          Application Error\r\n        </Heading>\r\n        <Text fontSize=\"18px\">{error.message}</Text>\r\n\r\n        <Button\r\n          rightIcon={<ArrowForwardIcon />}\r\n          variant=\"solid\"\r\n          colorScheme={\"primary\"}\r\n          size=\"lg\"\r\n          as={NavLink}\r\n          to=\"/\"\r\n          draggable={false}\r\n        >\r\n          Go to Home\r\n        </Button>\r\n      </VStack>\r\n    </Container>\r\n  );\r\n}\r\n", "import { extendTheme } from \"@chakra-ui/react\";\r\n\r\nconst colors = {\r\n  primary: {\r\n    \"50\": \"#f0f9fe\",\r\n    \"100\": \"#c3e5fb\",\r\n    \"200\": \"#8dcdf7\",\r\n    \"300\": \"#45aef2\",\r\n    \"400\": \"#349cde\",\r\n    \"500\": \"#2c83bb\",\r\n    \"600\": \"#256f9e\",\r\n    \"700\": \"#1e597f\",\r\n    \"800\": \"#194b6b\",\r\n    \"900\": \"#12364d\",\r\n  },\r\n};\r\n\r\nconst config = {\r\n  initialColorMode: \"light\",\r\n};\r\n\r\nconst components = {};\r\n\r\nconst theme = extendTheme({ config, colors, components });\r\n\r\nexport default theme;\r\n", "import {\r\n  AuthenticationDetails,\r\n  CognitoUser,\r\n  CognitoUserAttribute,\r\n  CognitoUserPool,\r\n} from \"amazon-cognito-identity-js\";\r\n\r\nimport { createCookie, redirect, json } from \"@remix-run/node\";\r\n\r\nimport { createArcTableSessionStorage } from \"@remix-run/architect\";\r\n\r\nconst userPoolId = process.env.COGNITO_USERPOOL_ID;\r\nconst clientId = process.env.COGNITO_CLIENT_ID;\r\nconst sessionSecret = process.env.COGNITO_SESSION_SECRET;\r\n\r\nif (!sessionSecret || !userPoolId || !clientId) {\r\n  throw new Error(\"Env missing configuration\");\r\n}\r\n\r\nconst poolData = {\r\n  UserPoolId: `${userPoolId}`,\r\n  ClientId: `${clientId}`,\r\n};\r\n\r\nconst userPool: CognitoUserPool = new CognitoUserPool(poolData);\r\n\r\nconst sessionCookie = createCookie(\"__session\", {\r\n  secrets: [sessionSecret],\r\n  httpOnly: true,\r\n  sameSite: true,\r\n  secure: process.env.NODE_ENV === \"production\",\r\n});\r\n\r\nexport const { getSession, commitSession, destroySession } =\r\n  createArcTableSessionStorage({\r\n    table: \"sessions\",\r\n    idx: \"_idx\",\r\n    ttl: \"_ttl\",\r\n    cookie: sessionCookie,\r\n  });\r\n\r\nexport async function isAuthenticated(request: Request) {\r\n  const currentSession = await getSession(request.headers.get(\"Cookie\"));\r\n\r\n  return currentSession.has(\"UserId\") ? true : false;\r\n}\r\n\r\nexport async function protectedRoute(request: Request) {\r\n  const currentSession = await getSession(request.headers.get(\"Cookie\"));\r\n\r\n  return currentSession.has(\"UserId\") ? currentSession : redirect(\"/login\");\r\n}\r\n\r\nexport async function unprotectedRoute(request: Request) {\r\n  const currentSession = await getSession(request.headers.get(\"Cookie\"));\r\n\r\n  return currentSession.has(\"UserId\") ? redirect(\"/\") : false;\r\n}\r\n\r\nfunction getCognitoUser(username: string) {\r\n  const userData = {\r\n    Username: username,\r\n    Pool: userPool,\r\n  };\r\n  const cognitoUser = new CognitoUser(userData);\r\n\r\n  return cognitoUser;\r\n}\r\n\r\nexport async function signUp(username: string, name: string, password: string) {\r\n  return new Promise(function (resolve, reject) {\r\n    const attributeList = [\r\n      new CognitoUserAttribute({\r\n        Name: \"email\",\r\n        Value: username,\r\n      }),\r\n      new CognitoUserAttribute({\r\n        Name: \"name\",\r\n        Value: name,\r\n      }),\r\n    ];\r\n\r\n    userPool.signUp(username, password, attributeList, [], function (err, res) {\r\n      if (err) {\r\n        reject(err);\r\n      } else {\r\n        resolve(res);\r\n      }\r\n    });\r\n  }).catch((err) => {\r\n    throw err;\r\n  });\r\n}\r\n\r\nexport async function signIn(\r\n  request: any,\r\n  username: string,\r\n  password: string,\r\n  remember: boolean\r\n) {\r\n  return new Promise(async function (resolve, reject) {\r\n    const authenticationData = {\r\n      Username: username,\r\n      Password: password,\r\n    };\r\n    const authenticationDetails = new AuthenticationDetails(authenticationData);\r\n\r\n    const currentUser = getCognitoUser(username);\r\n\r\n    currentUser.authenticateUser(authenticationDetails, {\r\n      onSuccess: async function (res: any) {\r\n        const session = await getSession(request.headers.get(\"Cookie\"));\r\n        session.set(\"UserId\", res.idToken);\r\n\r\n        resolve(\r\n          json(\r\n            { status: \"Authenticated\" },\r\n            {\r\n              headers: {\r\n                \"Set-Cookie\": await commitSession(session, {\r\n                  maxAge: remember\r\n                    ? 60 * 60 * 24 * 7 // 7 days\r\n                    : undefined,\r\n                }),\r\n              },\r\n            }\r\n          )\r\n        );\r\n      },\r\n      onFailure: function (err: any) {\r\n        reject(err);\r\n      },\r\n    });\r\n  }).catch((err) => {\r\n    throw err;\r\n  });\r\n}\r\n\r\nexport async function verifyAccount(username: string, code: string) {\r\n  return new Promise(function (resolve, reject) {\r\n    const cognitoUser = getCognitoUser(username);\r\n\r\n    cognitoUser.confirmRegistration(code, true, function (err, result) {\r\n      if (err) {\r\n        reject(err);\r\n      } else {\r\n        resolve(result);\r\n      }\r\n    });\r\n  }).catch((err) => {\r\n    throw err;\r\n  });\r\n}\r\n\r\nexport async function sendCode(username: string) {\r\n  return new Promise(function (resolve, reject) {\r\n    const cognitoUser = getCognitoUser(username);\r\n\r\n    if (!cognitoUser) {\r\n      reject(`could not find ${username}`);\r\n      return;\r\n    }\r\n\r\n    cognitoUser.forgotPassword({\r\n      onSuccess: function (res) {\r\n        resolve(res);\r\n      },\r\n      onFailure: function (err) {\r\n        reject(err);\r\n      },\r\n    });\r\n  }).catch((err) => {\r\n    throw err;\r\n  });\r\n}\r\n\r\nexport async function forgotPassword(\r\n  username: string,\r\n  code: string,\r\n  password: string\r\n) {\r\n  return new Promise(function (resolve, reject) {\r\n    const cognitoUser = getCognitoUser(username);\r\n\r\n    if (!cognitoUser) {\r\n      reject(`could not find ${username}`);\r\n      return;\r\n    }\r\n\r\n    cognitoUser.confirmPassword(code, password, {\r\n      onSuccess: function () {\r\n        resolve(\"password updated\");\r\n      },\r\n      onFailure: function (err) {\r\n        reject(err);\r\n      },\r\n    });\r\n  });\r\n}\r\n\r\nexport async function signOut(request: any) {\r\n  const session = await getSession(request.headers.get(\"Cookie\"));\r\n\r\n  return redirect(\"/login\", {\r\n    headers: {\r\n      \"Set-Cookie\": await destroySession(session),\r\n    },\r\n  });\r\n}\r\n\r\n// export async function getAttributes() {\r\n//   return new Promise(function (resolve, reject) {\r\n//     currentUser.getUserAttributes(function (err: any, attributes: any) {\r\n//       if (err) {\r\n//         reject(err);\r\n//       } else {\r\n//         resolve(attributes);\r\n//       }\r\n//     });\r\n//   }).catch((err) => {\r\n//     throw err;\r\n//   });\r\n// }\r\n\r\n// export async function setAttribute(attribute: any) {\r\n//   return new Promise(function (resolve, reject) {\r\n//     const attributeList = [];\r\n//     const res = new CognitoUserAttribute(attribute);\r\n//     attributeList.push(res);\r\n\r\n//     currentUser.updateAttributes(attributeList, (err: any, res: any) => {\r\n//       if (err) {\r\n//         reject(err);\r\n//       } else {\r\n//         resolve(res);\r\n//       }\r\n//     });\r\n//   }).catch((err) => {\r\n//     throw err;\r\n//   });\r\n// }\r\n", "import { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Container,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Stack,\r\n  Button,\r\n  Heading,\r\n  useColorModeValue,\r\n  VStack,\r\n  Center,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Checkbox,\r\n  FormErrorMessage,\r\n  Textarea,\r\n  Divider,\r\n  Text,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  PinInput,\r\n  PinInputField,\r\n  HStack,\r\n  Flex,\r\n  useDisclosure,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  Spinner,\r\n  IconButton,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { LoaderFunction, redirect } from \"@remix-run/node\";\r\nimport {\r\n  ValidatedForm,\r\n  validationError,\r\n  useIsSubmitting,\r\n  useField,\r\n} from \"remix-validated-form\";\r\nimport { withZod } from \"@remix-validated-form/with-zod\";\r\nimport { z } from \"zod\";\r\n\r\nimport * as auth from \"app/utils/auth.server\";\r\nimport { Link, useActionData } from \"@remix-run/react\";\r\n\r\nexport const validator = withZod(\r\n  z.object({\r\n    emailAddress: z\r\n      .string()\r\n      .min(1, { message: \"Email Address is required\" })\r\n      .email(\"Must be a valid email\")\r\n      .trim(),\r\n  })\r\n);\r\n\r\nexport async function action({ request }: { request: Request }) {\r\n  const data = await validator.validate(await request.formData());\r\n\r\n  if (data.error) {\r\n    return validationError(data.error);\r\n  }\r\n\r\n  const { emailAddress } = data.data;\r\n\r\n  try {\r\n    await auth.sendCode(emailAddress);\r\n    return redirect(`/verify?emailAddress=${emailAddress}`);\r\n  } catch (error: any) {\r\n    if (error.name && error.message) {\r\n      return { res: { name: error.name, message: error.message } };\r\n    } else {\r\n      return {\r\n        res: { name: \"unknownException\", message: \"Unknown exception\" },\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({\r\n  request,\r\n}: {\r\n  request: Request;\r\n}) => {\r\n  const res = await auth.unprotectedRoute(request);\r\n\r\n  if (res !== false) {\r\n    return res;\r\n  }\r\n\r\n  const url = new URL(request.url);\r\n\r\n  const emailAddress: any = url.searchParams.get(\"emailAddress\");\r\n\r\n  if (emailAddress) {\r\n    return redirect(`/verify?emailAddress=${emailAddress}`);\r\n  } else {\r\n    return null;\r\n  }\r\n\r\n  function TextField(props: any) {\r\n    const { error, getInputProps } = useField(props.name);\r\n    const isSubmitting = useIsSubmitting();\r\n\r\n    return (\r\n      <FormControl id={props.name} isInvalid={error ? true : false}>\r\n        <FormLabel>{props.label}</FormLabel>\r\n        <Input {...props} {...getInputProps()} isReadOnly={isSubmitting} />\r\n        <FormErrorMessage>{error}</FormErrorMessage>\r\n      </FormControl>\r\n    );\r\n  }\r\n};\r\n\r\nfunction TextField(props: any) {\r\n  const { error, getInputProps } = useField(props.name);\r\n  const isSubmitting = useIsSubmitting();\r\n\r\n  return (\r\n    <FormControl id={props.name} isInvalid={error ? true : false}>\r\n      <FormLabel>{props.label}</FormLabel>\r\n      <Input {...props} {...getInputProps()} isReadOnly={isSubmitting} />\r\n      <FormErrorMessage>{error}</FormErrorMessage>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nfunction SubmitButton(props: any) {\r\n  const isSubmitting = useIsSubmitting();\r\n  const actionData = useActionData();\r\n\r\n  return (\r\n    <Button\r\n      {...props}\r\n      isLoading={isSubmitting}\r\n      loadingText=\"Sending OTP\"\r\n      // disabled={actionData === \"success\" || isSubmitting}\r\n    >\r\n      {props.label}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default function Verify() {\r\n  const actionData = useActionData();\r\n\r\n  return (\r\n    <Container maxW=\"7xl\" p={{ base: 5, md: 10 }}>\r\n      <Center>\r\n        <Stack\r\n          spacing={4}\r\n          as={ValidatedForm}\r\n          validator={validator}\r\n          method=\"post\"\r\n          id=\"verifyIdentifyForm\"\r\n          replace\r\n        >\r\n          <Stack align=\"center\">\r\n            <Heading fontSize=\"2xl\">Verify Account</Heading>\r\n          </Stack>\r\n          <VStack\r\n            boxSize={{ base: \"xs\", sm: \"sm\", md: \"md\" }}\r\n            h=\"max-content !important\"\r\n            bg={useColorModeValue(\"white\", \"gray.700\")}\r\n            rounded=\"xl\"\r\n            boxShadow={\"2xl\"}\r\n            p={{ base: 5, sm: 10 }}\r\n            spacing={8}\r\n          >\r\n            <VStack spacing={4} w=\"100%\">\r\n              <TextField\r\n                label=\"Email Address\"\r\n                name=\"emailAddress\"\r\n                placeholder=\"Enter your email\"\r\n                rounded=\"md\"\r\n                type=\"email\"\r\n              />\r\n              {actionData?.res && (\r\n                <Alert status=\"error\" rounded=\"md\">\r\n                  <AlertIcon />\r\n                  <AlertTitle>{actionData?.res?.message}</AlertTitle>\r\n                </Alert>\r\n              )}\r\n            </VStack>\r\n\r\n            <VStack spacing={4} w=\"100%\">\r\n              <SubmitButton\r\n                w=\"100%\"\r\n                colorScheme=\"primary\"\r\n                label=\"Verify Account\"\r\n                type=\"submit\"\r\n              />\r\n\r\n              <Text>\r\n                Already verified?&nbsp;\r\n                <Text\r\n                  as={Link}\r\n                  to=\"/login\"\r\n                  fontSize={{ base: \"md\", sm: \"md\" }}\r\n                  fontWeight=\"bold\"\r\n                  _hover={{ textDecoration: \"underline\" }}\r\n                >\r\n                  Sign In\r\n                </Text>\r\n              </Text>\r\n            </VStack>\r\n          </VStack>\r\n        </Stack>\r\n      </Center>\r\n    </Container>\r\n  );\r\n}\r\n", "import { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Stack,\r\n  Button,\r\n  Heading,\r\n  useColorModeValue,\r\n  VStack,\r\n  Center,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Checkbox,\r\n  FormErrorMessage,\r\n  Textarea,\r\n  Divider,\r\n  Text,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport type { LoaderFunction } from \"@remix-run/node\";\r\nimport {\r\n  ValidatedForm,\r\n  validationError,\r\n  useIsSubmitting,\r\n  useField,\r\n} from \"remix-validated-form\";\r\nimport { withZod } from \"@remix-validated-form/with-zod\";\r\nimport { z } from \"zod\";\r\n\r\nimport { redirect } from \"@remix-run/node\";\r\n\r\nimport * as auth from \"app/utils/auth.server\";\r\nimport { Link, useActionData } from \"@remix-run/react\";\r\n\r\nconst passwordRegex = new RegExp(\r\n  \"(?=[A-Za-z0-9@#$%^&+!=]+$)^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@#$%^&+!=]).*$\"\r\n);\r\n\r\nexport const validator = withZod(\r\n  z.object({\r\n    fullName: z.string().min(1, { message: \"Full Name is required\" }),\r\n    emailAddress: z\r\n      .string()\r\n      .min(1, { message: \"Email Address is required\" })\r\n      .email(\"Must be a valid email\")\r\n      .trim(),\r\n    password: z\r\n      .string()\r\n      .min(8, { message: \"Password must be at least 8 characters\" })\r\n      .regex(passwordRegex, {\r\n        message:\r\n          \"Password must contain at least one uppercase, one lowercase, one number, and one special character\",\r\n      })\r\n      .trim(),\r\n    confirmPassword: z\r\n      .string()\r\n      .min(8, { message: \"Confirm Password must be at least 8 characters\" })\r\n      .regex(passwordRegex, {\r\n        message:\r\n          \"Password must contain at least one uppercase, one lowercase, one number, and one special character\",\r\n      })\r\n      .trim(),\r\n\r\n    agreed: z.any(),\r\n  })\r\n);\r\n\r\n// export const loader: LoaderFunction = async ({ request }) => {\r\n//!Register\r\n// const res = await utils.signUp(\r\n//   \"mproios12@eucrona.com\",\r\n//   \"name\",\r\n//   \"!Mike32083705\"\r\n// );\r\n//!Sign In\r\n// const res = await utils.signIn(\r\n//   request,\r\n//   \"mproios12@eucrona.com\",\r\n//   \"!Mike32083705\"\r\n// );\r\n//!Verify\r\n// const res = await utils.verifyAccount(\"mproios12@eucrona.com\", \"559423\");\r\n\r\n//!Send Code\r\n// const res = await utils.sendCode(\"mproios12@eucrona.com\");\r\n//!Forgot Password\r\n// const res = await utils.forgotPassword(\r\n//   \"mproios1@eucrona.com\",\r\n//   \"924445\",\r\n//   \"!Mike32083705\"\r\n// );\r\n//!Log Out\r\n// const res = await utils.signOut(request);\r\n\r\n//!GetSession\r\n// const res = await utils.getSession(request);\r\n\r\n//   return \"s\";\r\n// };\r\n\r\nexport async function action({ request }: { request: Request }) {\r\n  const data = await validator.validate(await request.formData());\r\n\r\n  if (data.error) {\r\n    return validationError(data.error);\r\n  }\r\n\r\n  const { fullName, emailAddress, password, confirmPassword, agreed } =\r\n    data.data;\r\n\r\n  try {\r\n    if (password !== confirmPassword) {\r\n      return {\r\n        res: {\r\n          name: \"passwordMismatch\",\r\n          message: \"Passwords do not match.\",\r\n          formData: data.data,\r\n        },\r\n      };\r\n    }\r\n    if (!agreed) {\r\n      return {\r\n        res: {\r\n          name: \"notAgreed\",\r\n          message:\r\n            \"You must agree to the Terms & Conditions before registering.\",\r\n          formData: data.data,\r\n        },\r\n      };\r\n    }\r\n\r\n    await auth.signUp(emailAddress, fullName, password);\r\n\r\n    return redirect(`/verify?emailAddress=${emailAddress}`);\r\n  } catch (error: any) {\r\n    if (error.name && error.message) {\r\n      return {\r\n        res: { name: error.name, message: error.message, formData: data.data },\r\n      };\r\n    } else {\r\n      return {\r\n        res: {\r\n          name: \"unknownException\",\r\n          message: \"Unknown exception\",\r\n          formData: data.data,\r\n        },\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({ request }: any) => {\r\n  try {\r\n    return await auth.unprotectedRoute(request);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nfunction TextField(props: any) {\r\n  const { error, getInputProps } = useField(props.name);\r\n  const isSubmitting = useIsSubmitting();\r\n\r\n  return (\r\n    <FormControl id={props.name} isInvalid={error ? true : false}>\r\n      <FormLabel>{props.label}</FormLabel>\r\n      <Input {...props} {...getInputProps()} isReadOnly={isSubmitting} />\r\n      <FormErrorMessage>{error}</FormErrorMessage>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nfunction PasswordTextField(props: any) {\r\n  const { error, getInputProps } = useField(props.name);\r\n  const isSubmitting = useIsSubmitting();\r\n\r\n  return (\r\n    <FormControl id={props.name} isInvalid={error ? true : false}>\r\n      <FormLabel>{props.label}</FormLabel>\r\n      <InputGroup size=\"md\">\r\n        <Input\r\n          {...props}\r\n          {...getInputProps()}\r\n          isReadOnly={isSubmitting}\r\n          type={\"password\"}\r\n        />\r\n      </InputGroup>\r\n      <FormErrorMessage>{error}</FormErrorMessage>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nfunction CheckBox(props: any) {\r\n  const { getInputProps } = useField(props.name);\r\n  const isSubmitting = useIsSubmitting();\r\n\r\n  return (\r\n    <Checkbox\r\n      {...props}\r\n      {...getInputProps()}\r\n      value={\"yes\"}\r\n      isReadOnly={isSubmitting}\r\n    >\r\n      {props.label}\r\n    </Checkbox>\r\n  );\r\n}\r\n\r\nfunction SubmitButton(props: any) {\r\n  const isSubmitting = useIsSubmitting();\r\n  const actionData = useActionData();\r\n\r\n  return (\r\n    <Button\r\n      {...props}\r\n      isLoading={isSubmitting}\r\n      loadingText=\"Creating Account\"\r\n      // disabled={actionData === \"success\" || isSubmitting}\r\n    >\r\n      {props.label}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default function Register() {\r\n  const actionData = useActionData();\r\n\r\n  return (\r\n    <Container maxW=\"7xl\" p={{ base: 5, md: 10 }}>\r\n      <Center>\r\n        <Stack\r\n          spacing={4}\r\n          as={ValidatedForm}\r\n          validator={validator}\r\n          method=\"post\"\r\n          id=\"registerForm\"\r\n          replace\r\n        >\r\n          <Stack align=\"center\">\r\n            <Heading fontSize=\"2xl\">Create Account</Heading>\r\n          </Stack>\r\n          <VStack\r\n            boxSize={{ base: \"xs\", sm: \"sm\", md: \"md\" }}\r\n            h=\"max-content !important\"\r\n            bg={useColorModeValue(\"white\", \"gray.700\")}\r\n            rounded=\"xl\"\r\n            boxShadow={\"2xl\"}\r\n            p={{ base: 5, sm: 10 }}\r\n            spacing={8}\r\n          >\r\n            <VStack spacing={4} w=\"100%\">\r\n              <TextField\r\n                label=\"Full Name\"\r\n                name=\"fullName\"\r\n                placeholder=\"Enter your first and last name\"\r\n                rounded=\"md\"\r\n                type=\"text\"\r\n              />\r\n              <TextField\r\n                label=\"Email Address\"\r\n                name=\"emailAddress\"\r\n                placeholder=\"Enter your email\"\r\n                rounded=\"md\"\r\n                type=\"email\"\r\n              />\r\n\r\n              <PasswordTextField\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                placeholder=\"Enter your password\"\r\n                rounded=\"md\"\r\n              />\r\n              <PasswordTextField\r\n                label=\"Confirm Password\"\r\n                name=\"confirmPassword\"\r\n                placeholder=\"Confirm your password\"\r\n                rounded=\"md\"\r\n              />\r\n\r\n              {actionData?.res && (\r\n                <Alert status=\"error\" rounded=\"md\">\r\n                  <AlertIcon />\r\n                  <AlertTitle>{actionData?.res?.message}</AlertTitle>\r\n                </Alert>\r\n              )}\r\n\r\n              {actionData?.res?.name === \"UsernameExistsException\" && (\r\n                <Button\r\n                  as={Link}\r\n                  to={`/verify?emailAddress=${actionData?.res?.formData.emailAddress}`}\r\n                  colorScheme=\"primary\"\r\n                >\r\n                  Verify Account\r\n                </Button>\r\n              )}\r\n            </VStack>\r\n            <VStack w=\"100%\" spacing={4}>\r\n              <CheckBox\r\n                type=\"checkbox\"\r\n                name=\"agreed\"\r\n                label=\" Agree with Terms & Conditions\"\r\n              />\r\n\r\n              <SubmitButton\r\n                w=\"100%\"\r\n                colorScheme=\"primary\"\r\n                label=\"Create Account\"\r\n                type=\"submit\"\r\n              />\r\n              <Text>\r\n                Already have an account?&nbsp;\r\n                <Text\r\n                  as={Link}\r\n                  to=\"/login\"\r\n                  fontSize={{ base: \"md\", sm: \"md\" }}\r\n                  fontWeight=\"bold\"\r\n                  _hover={{ textDecoration: \"underline\" }}\r\n                >\r\n                  Sign In\r\n                </Text>\r\n              </Text>\r\n            </VStack>\r\n          </VStack>\r\n        </Stack>\r\n      </Center>\r\n    </Container>\r\n  );\r\n}\r\n", "import { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Container,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Stack,\r\n  Button,\r\n  Heading,\r\n  useColorModeValue,\r\n  VStack,\r\n  Center,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Checkbox,\r\n  FormErrorMessage,\r\n  Textarea,\r\n  Divider,\r\n  Text,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  PinInput,\r\n  PinInputField,\r\n  HStack,\r\n  Flex,\r\n  useDisclosure,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  Spinner,\r\n  IconButton,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { LoaderFunction, redirect } from \"@remix-run/node\";\r\nimport {\r\n  ValidatedForm,\r\n  validationError,\r\n  useIsSubmitting,\r\n  useField,\r\n} from \"remix-validated-form\";\r\nimport { withZod } from \"@remix-validated-form/with-zod\";\r\nimport { z } from \"zod\";\r\n\r\nimport * as auth from \"app/utils/auth.server\";\r\nimport {\r\n  Form,\r\n  Link,\r\n  useActionData,\r\n  useLoaderData,\r\n  useMatches,\r\n  useSubmit,\r\n  useTransition,\r\n} from \"@remix-run/react\";\r\n\r\nimport { RepeatIcon } from \"@chakra-ui/icons\";\r\n\r\nexport async function action({ request }: { request: Request }) {\r\n  const data = await request.formData();\r\n  const url = new URL(request.url);\r\n  const emailAddress: any = url.searchParams.get(\"emailAddress\");\r\n  const type: any = data.get(\"type\");\r\n  const otp: any = data.get(\"otp\");\r\n\r\n  // const otp: any = data.get(\"otp\");\r\n\r\n  try {\r\n    switch (type) {\r\n      case \"verify\": {\r\n        await auth.verifyAccount(emailAddress, otp);\r\n\r\n        return redirect(\"/login?verificationSuccessful\");\r\n      }\r\n      case \"resend\": {\r\n        return await auth.sendCode(emailAddress);\r\n      }\r\n\r\n      default: {\r\n        return \"\";\r\n      }\r\n    }\r\n  } catch (error: any) {\r\n    if (error.name && error.message) {\r\n      return { res: { name: error.name, message: error.message } };\r\n    } else {\r\n      return {\r\n        res: { name: \"unknownException\", message: \"Unknown exception\" },\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport const loader: LoaderFunction = async ({\r\n  request,\r\n}: {\r\n  request: Request;\r\n}) => {\r\n  const res = await auth.unprotectedRoute(request);\r\n\r\n  if (res !== false) {\r\n    return res;\r\n  }\r\n\r\n  const url = new URL(request.url);\r\n\r\n  const emailAddress: any = url.searchParams.get(\"emailAddress\");\r\n\r\n  if (emailAddress) {\r\n    return emailAddress;\r\n  } else {\r\n    return redirect(\"/verify-identify\");\r\n  }\r\n};\r\n\r\n// export const loader: LoaderFunction = async ({ request }: any) => {\r\n//   try {\r\n//     return await auth.unprotectedRoute(request);\r\n//   } catch (error) {\r\n//     return error;\r\n//   }\r\n// };\r\n\r\nexport default function Verify() {\r\n  const actionData = useActionData();\r\n\r\n  const submit = useSubmit();\r\n  const isSubmitting: any = useTransition().submission;\r\n  const emailAddress = useLoaderData();\r\n\r\n  function handleResend() {\r\n    const formData = new FormData();\r\n    formData.set(\"type\", \"resend\");\r\n    submit(formData, { method: \"post\" });\r\n  }\r\n\r\n  function handleVerify(value: any) {\r\n    const formData = new FormData();\r\n    formData.set(\"otp\", value);\r\n    formData.set(\"type\", \"verify\");\r\n    if (emailAddress) {\r\n      submit(formData, { method: \"post\" });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container maxW=\"7xl\" p={{ base: 5, md: 10 }}>\r\n      <Center>\r\n        <Stack spacing={4}>\r\n          <Stack align=\"center\">\r\n            <Heading fontSize=\"2xl\">Verify Account</Heading>\r\n          </Stack>\r\n          <VStack\r\n            boxSize={{ base: \"xs\", sm: \"sm\", md: \"md\" }}\r\n            h=\"max-content !important\"\r\n            bg={useColorModeValue(\"white\", \"gray.700\")}\r\n            rounded=\"xl\"\r\n            boxShadow={\"2xl\"}\r\n            p={{ base: 5, sm: 10 }}\r\n            spacing={8}\r\n          >\r\n            <VStack spacing={4} w=\"100%\">\r\n              <FormControl id={\"otp\"}>\r\n                <FormLabel textAlign={\"center\"}>One Time Pin</FormLabel>\r\n                <HStack\r\n                  w=\"100%\"\r\n                  display=\"flex\"\r\n                  justifyContent=\"center\"\r\n                  as={Form}\r\n                  method=\"post\"\r\n                >\r\n                  <PinInput\r\n                    otp\r\n                    size=\"lg\"\r\n                    autoFocus\r\n                    onComplete={(value) => {\r\n                      handleVerify(value);\r\n                    }}\r\n                  >\r\n                    <PinInputField readOnly={isSubmitting} />\r\n                    <PinInputField readOnly={isSubmitting} />\r\n                    <PinInputField readOnly={isSubmitting} />\r\n                    <PinInputField readOnly={isSubmitting} />\r\n                    <PinInputField readOnly={isSubmitting} />\r\n                    <PinInputField readOnly={isSubmitting} />\r\n                  </PinInput>\r\n                </HStack>\r\n              </FormControl>\r\n\r\n              {actionData?.res && !isSubmitting ? (\r\n                <Alert status=\"error\" rounded=\"md\">\r\n                  <AlertIcon />\r\n                  <AlertTitle>{actionData?.res.message} </AlertTitle>\r\n                </Alert>\r\n              ) : isSubmitting ? (\r\n                <Spinner size=\"xl\" />\r\n              ) : (\r\n                <Alert status=\"info\" rounded=\"md\">\r\n                  <AlertIcon />\r\n                  <AlertTitle>\r\n                    A one time pin was sent to your email. Please enter the\r\n                    code.\r\n                  </AlertTitle>\r\n                </Alert>\r\n              )}\r\n            </VStack>\r\n\r\n            <VStack spacing={4} w=\"100%\">\r\n              {actionData?.res?.name === \"ExpiredCodeException\" &&\r\n                !isSubmitting && (\r\n                  <Button onClick={handleResend} colorScheme=\"primary\">\r\n                    Resend Code\r\n                  </Button>\r\n                )}\r\n\r\n              <Text>\r\n                Account already verified?&nbsp;\r\n                <Text\r\n                  as={Link}\r\n                  to=\"/login\"\r\n                  fontSize={{ base: \"md\", sm: \"md\" }}\r\n                  fontWeight=\"bold\"\r\n                  _hover={{ textDecoration: \"underline\" }}\r\n                >\r\n                  Sign In\r\n                </Text>\r\n              </Text>\r\n            </VStack>\r\n          </VStack>\r\n        </Stack>\r\n      </Center>\r\n      {/* <EmailModal /> */}\r\n    </Container>\r\n  );\r\n}\r\n\r\n// function EmailModal() {\r\n//   const { isOpen, onOpen, onClose } = useDisclosure();\r\n//   const submit = useSubmit();\r\n//   const emailAddress = useLoaderData();\r\n\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [validationError, setValidationError] = useState(false);\r\n//   const [validationMessage, setValidationMessage] = useState(null);\r\n\r\n//   function handleEmail(value: string) {\r\n//     try {\r\n//       setEmail(value);\r\n//       emailValidator.parse(value);\r\n//     } catch (error: any) {\r\n//       setValidationError(true);\r\n//       setValidationMessage(error.message);\r\n//       console.log(validationMessage);\r\n//     }\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     if (!emailAddress) {\r\n//       onOpen();\r\n//     } else {\r\n//       onClose();\r\n//     }\r\n//   }, [emailAddress, onOpen, onClose]);\r\n\r\n//   const isSubmitting: any = useTransition().submission;\r\n\r\n//   return (\r\n//     <Modal\r\n//       isOpen={isOpen}\r\n//       onClose={onClose}\r\n//       autoFocus\r\n//       closeOnEsc={false}\r\n//       closeOnOverlayClick={false}\r\n//     >\r\n//       <ModalOverlay />\r\n//       <ModalContent>\r\n//         <ModalHeader>Verify Account</ModalHeader>\r\n//         <Form method=\"post\" replace>\r\n//           <ModalBody pb={6}>\r\n//             <Text>\r\n//               In order to further verify your account, please enter your email\r\n//               address.\r\n//             </Text>\r\n//             <br />\r\n//             <FormControl>\r\n//               <FormLabel>Email</FormLabel>\r\n//               <Input\r\n//                 placeholder=\"Email Address\"\r\n//                 type=\"email\"\r\n//                 name=\"emailAddress\"\r\n//                 readOnly={isSubmitting}\r\n//                 value={email}\r\n//                 onChange={(e) => {\r\n//                   handleEmail(e.target.value);\r\n//                 }}\r\n//                 // onSubmit={handleSet}\r\n//               />\r\n//               <input type=\"hidden\" name=\"type\" value=\"set\" />\r\n//             </FormControl>\r\n//           </ModalBody>\r\n//         </Form>\r\n\r\n//         <ModalFooter>\r\n//           <Button\r\n//             colorScheme=\"primary\"\r\n//             mr={3}\r\n//             type=\"submit\"\r\n//             w={\"100%\"}\r\n//             isLoading={isSubmitting}\r\n//           >\r\n//             Set Email\r\n//           </Button>\r\n//         </ModalFooter>\r\n//       </ModalContent>\r\n//     </Modal>\r\n//   );\r\n// }\r\n", "import { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Stack,\r\n  Button,\r\n  Heading,\r\n  useColorModeValue,\r\n  VStack,\r\n  Center,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Checkbox,\r\n  FormErrorMessage,\r\n  Textarea,\r\n  Text,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport type { LoaderFunction } from \"@remix-run/node\";\r\n\r\nimport { redirect } from \"@remix-run/node\";\r\n\r\nimport { Link, useLoaderData } from \"@remix-run/react\";\r\nimport {\r\n  ValidatedForm,\r\n  validationError,\r\n  useIsSubmitting,\r\n  useField,\r\n} from \"remix-validated-form\";\r\nimport { withZod } from \"@remix-validated-form/with-zod\";\r\nimport { z } from \"zod\";\r\n\r\nimport * as auth from \"app/utils/auth.server\";\r\nimport { useActionData } from \"@remix-run/react\";\r\n\r\nexport const validator = withZod(\r\n  z.object({\r\n    emailAddress: z\r\n      .string()\r\n      .min(1, { message: \"Email is required\" })\r\n      .email(\"Must be a valid email\"),\r\n    password: z\r\n      .string()\r\n      .min(8, { message: \"Password must be at least 8 characters\" }),\r\n\r\n    remember: z.any(),\r\n  })\r\n);\r\n\r\n// export const loader: LoaderFunction = async ({ request }) => {\r\n//!Register\r\n// const res = await utils.signUp(\r\n//   \"mproios12@eucrona.com\",\r\n//   \"name\",\r\n//   \"!Mike32083705\"\r\n// );\r\n//!Sign In\r\n// const res = await utils.signIn(\r\n//   request,\r\n//   \"mproios12@eucrona.com\",\r\n//   \"!Mike32083705\"\r\n// );\r\n//!Verify\r\n// const res = await utils.verifyAccount(\"mproios12@eucrona.com\", \"559423\");\r\n\r\n//!Send Code\r\n// const res = await utils.sendCode(\"mproios12@eucrona.com\");\r\n//!Forgot Password\r\n// const res = await utils.forgotPassword(\r\n//   \"mproios1@eucrona.com\",\r\n//   \"924445\",\r\n//   \"!Mike32083705\"\r\n// );\r\n//!Log Out\r\n// const res = await utils.signOut(request);\r\n\r\n//!GetSession\r\n// const res = await utils.getSession(request);\r\n\r\n//   return \"s\";\r\n// };\r\n\r\nexport const loader: LoaderFunction = async ({ request }: any) => {\r\n  try {\r\n    const res = await auth.unprotectedRoute(request);\r\n\r\n    if (!res) {\r\n      const url = new URL(request.url);\r\n      const loginInstructions: any = url.searchParams.get(\r\n        \"verificationSuccessful\"\r\n      );\r\n\r\n      return loginInstructions;\r\n    }\r\n\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport async function action({ request }: { request: Request }) {\r\n  const data = await validator.validate(await request.formData());\r\n\r\n  if (data.error) {\r\n    return validationError(data.error);\r\n  }\r\n\r\n  const { emailAddress, password, remember } = data.data;\r\n\r\n  try {\r\n    return await auth.signIn(\r\n      request,\r\n      emailAddress,\r\n      password,\r\n      remember ? true : false\r\n    );\r\n  } catch (error: any) {\r\n    if (error.name && error.message) {\r\n      return {\r\n        res: { name: error.name, message: error.message, formData: data.data },\r\n      };\r\n    } else {\r\n      return {\r\n        res: {\r\n          name: \"unknownException\",\r\n          message: \"Unknown exception\",\r\n          formData: data.data,\r\n        },\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nfunction EmailTextField(props: any) {\r\n  const { error, getInputProps } = useField(props.name);\r\n  const isSubmitting = useIsSubmitting();\r\n\r\n  return (\r\n    <FormControl id={props.name} isInvalid={error ? true : false}>\r\n      <FormLabel>{props.label}</FormLabel>\r\n      <Input {...props} {...getInputProps()} readOnly={isSubmitting} />\r\n      <FormErrorMessage>{error}</FormErrorMessage>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nfunction PasswordTextField(props: any) {\r\n  const [show, setShow] = useState(false);\r\n  const handleClick = () => setShow(!show);\r\n  const { error, getInputProps } = useField(props.name);\r\n  const isSubmitting = useIsSubmitting();\r\n\r\n  return (\r\n    <FormControl id={props.name} isInvalid={error ? true : false}>\r\n      <FormLabel>{props.label}</FormLabel>\r\n      <InputGroup size=\"md\">\r\n        <Input\r\n          {...props}\r\n          {...getInputProps()}\r\n          readOnly={isSubmitting}\r\n          type={show ? \"text\" : \"password\"}\r\n        />\r\n        <InputRightElement width=\"4.5rem\">\r\n          <Button\r\n            h=\"1.75rem\"\r\n            size=\"sm\"\r\n            rounded=\"md\"\r\n            bg={useColorModeValue(\"gray.300\", \"gray.700\")}\r\n            _hover={{\r\n              bg: useColorModeValue(\"gray.400\", \"gray.800\"),\r\n            }}\r\n            disabled={isSubmitting}\r\n            onClick={handleClick}\r\n          >\r\n            {show ? \"Hide\" : \"Show\"}\r\n          </Button>\r\n        </InputRightElement>\r\n      </InputGroup>\r\n      <FormErrorMessage>{error}</FormErrorMessage>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nfunction CheckBox(props: any) {\r\n  const { getInputProps } = useField(props.name);\r\n  const isSubmitting = useIsSubmitting();\r\n\r\n  return (\r\n    <Checkbox\r\n      {...props}\r\n      {...getInputProps()}\r\n      value={\"yes\"}\r\n      readOnly={isSubmitting}\r\n    >\r\n      {props.label}\r\n    </Checkbox>\r\n  );\r\n}\r\n\r\nfunction SubmitButton(props: any) {\r\n  const isSubmitting = useIsSubmitting();\r\n\r\n  return (\r\n    <Button {...props} isLoading={isSubmitting} loadingText=\"Signing In\">\r\n      {props.label}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default function Login() {\r\n  const actionData = useActionData();\r\n  const loaderData = useLoaderData();\r\n\r\n  return (\r\n    <Container maxW=\"7xl\" p={{ base: 5, md: 10 }}>\r\n      <Center>\r\n        <Stack\r\n          spacing={4}\r\n          as={ValidatedForm}\r\n          validator={validator}\r\n          method=\"post\"\r\n          id=\"loginForm\"\r\n          replace\r\n        >\r\n          <Stack align=\"center\">\r\n            <Heading fontSize=\"2xl\">Sign In to your Account</Heading>\r\n          </Stack>\r\n          <VStack\r\n            boxSize={{ base: \"xs\", sm: \"sm\", md: \"md\" }}\r\n            h=\"max-content !important\"\r\n            bg={useColorModeValue(\"white\", \"gray.700\")}\r\n            rounded=\"xl\"\r\n            boxShadow={\"2xl\"}\r\n            p={{ base: 5, sm: 10 }}\r\n            spacing={8}\r\n          >\r\n            <VStack spacing={4} w=\"100%\">\r\n              <EmailTextField\r\n                label=\"Email Address\"\r\n                name=\"emailAddress\"\r\n                placeholder=\"Enter your email\"\r\n                rounded=\"md\"\r\n                type=\"email\"\r\n              />\r\n\r\n              <PasswordTextField\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                placeholder=\"Enter your password\"\r\n                rounded=\"md\"\r\n              />\r\n              {actionData?.res && (\r\n                <Alert status=\"error\" rounded=\"md\">\r\n                  <AlertIcon />\r\n                  <AlertTitle>{actionData?.res?.message}</AlertTitle>\r\n                </Alert>\r\n              )}\r\n              {loaderData !== null && (\r\n                <Alert status=\"success\" rounded=\"md\">\r\n                  <AlertIcon />\r\n                  <AlertTitle>\r\n                    Account verification successful! Please login with your\r\n                    credentials.\r\n                  </AlertTitle>\r\n                </Alert>\r\n              )}\r\n            </VStack>\r\n            <VStack w=\"100%\" spacing={4}>\r\n              <Stack direction=\"row\" justify=\"space-between\" w=\"100%\">\r\n                {/* <Checkbox colorScheme=\"primary\" size=\"md\">\r\n                  Remember me\r\n                </Checkbox> */}\r\n                <CheckBox type=\"checkbox\" name=\"remember\" label=\"Remember me\" />\r\n                <Text\r\n                  as={Link}\r\n                  to=\"/forgot\"\r\n                  fontSize={{ base: \"md\", sm: \"md\" }}\r\n                  // fontWeight=\"bold\"\r\n                  _hover={{ textDecoration: \"underline\" }}\r\n                >\r\n                  Forgot Password?\r\n                </Text>\r\n              </Stack>\r\n\r\n              <SubmitButton\r\n                w=\"100%\"\r\n                colorScheme=\"primary\"\r\n                label=\"Sign In\"\r\n                type=\"submit\"\r\n              />\r\n\r\n              <Text>\r\n                Don't have an account?&nbsp;\r\n                <Text\r\n                  as={Link}\r\n                  to=\"/register\"\r\n                  fontSize={{ base: \"md\", sm: \"md\" }}\r\n                  fontWeight=\"bold\"\r\n                  _hover={{ textDecoration: \"underline\" }}\r\n                >\r\n                  Register\r\n                </Text>\r\n              </Text>\r\n            </VStack>\r\n          </VStack>\r\n        </Stack>\r\n      </Center>\r\n    </Container>\r\n  );\r\n}\r\n", "export function action() {\r\n  return null;\r\n}\r\n", "import { Fragment } from \"react\";\r\nimport {\r\n  chakra,\r\n  Container,\r\n  Stack,\r\n  Text,\r\n  useColorModeValue,\r\n  Button,\r\n  Icon,\r\n  HStack,\r\n  SimpleGrid,\r\n  Flex,\r\n  Box,\r\n  Heading,\r\n  Input,\r\n  FormControl,\r\n  FormErrorMessage,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  Avatar,\r\n  Center,\r\n  Image,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport type { LoaderFunction } from \"@remix-run/node\";\r\n\r\nimport * as auth from \"app/utils/auth.server\";\r\nimport { Form, useLoaderData } from \"@remix-run/react\";\r\n\r\nexport const loader: LoaderFunction = async ({ request }: any) => {\r\n  // const cookieHeader = request.headers.get(\"Cookie\");\r\n  // const cookie = (await auth.sessionCookie.parse(cookieHeader)) || {};\r\n\r\n  // console.log(cookie);\r\n\r\n  try {\r\n    return await auth.protectedRoute(request);\r\n  } catch (error) {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport default function Whoami() {\r\n  // const actionData = useActionData();\r\n\r\n  const user = useLoaderData();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Center py={6}>\r\n        <Box\r\n          // maxW={\"1200px\"}\r\n          w={\"full\"}\r\n          bg={useColorModeValue(\"white\", \"gray.800\")}\r\n          // boxShadow={\"2xl\"}\r\n          // rounded={\"md\"}\r\n          overflow={\"hidden\"}\r\n        >\r\n          <Box p={6}>\r\n            <Stack spacing={0} align={\"center\"} mb={5}>\r\n              <Heading fontSize={\"2xl\"} fontWeight={500} fontFamily={\"body\"}>\r\n                {user.data.UserId.payload.name}\r\n              </Heading>\r\n              <Text color={\"gray.500\"}>\r\n                User Email: {user.data.UserId.payload.email}\r\n              </Text>\r\n              <Text color={\"gray.500\"}>\r\n                AWS Cognito Username ID:{\" \"}\r\n                {user.data.UserId.payload[\"cognito:username\"]}\r\n              </Text>\r\n              <Text color={\"gray.500\"}>\r\n                Verified:{\" \"}\r\n                {user.data.UserId.payload.email_verified ? \"Yes\" : \"No\"}\r\n              </Text>\r\n              <Text color={\"gray.500\"}>\r\n                Authentication Time:{\" \"}\r\n                {new Date(\r\n                  user.data.UserId.payload.auth_time * 1000\r\n                ).toUTCString()}\r\n              </Text>\r\n              <Text color={\"gray.500\"}>\r\n                EXP:{\" \"}\r\n                {new Date(user.data.UserId.payload.exp * 1000).toUTCString()}\r\n              </Text>\r\n              <Text color={\"gray.500\"}>\r\n                IAT:{\" \"}\r\n                {new Date(user.data.UserId.payload.iat * 1000).toUTCString()}\r\n              </Text>\r\n              <Text color={\"gray.500\"}>ID: {user.id}</Text>\r\n\r\n              <Text color={\"gray.500\"}>\r\n                Event ID: {user.data.UserId.payload.event_id}\r\n              </Text>\r\n              <Text color={\"gray.500\"}>\r\n                AUD: {user.data.UserId.payload.aud}\r\n              </Text>\r\n              <Text color={\"gray.500\"}>\r\n                JTI: {user.data.UserId.payload.jti}\r\n              </Text>\r\n              <Text color={\"gray.500\"}>\r\n                ISS: {user.data.UserId.payload.iss}\r\n              </Text>\r\n              <br />\r\n              <Text color={\"gray.500\"} maxW={\"1200px\"} align=\"center\">\r\n                JWT Token\r\n              </Text>\r\n              <Text color={\"gray.500\"} maxW={\"1200px\"}>\r\n                {user.data.UserId.jwtToken}\r\n              </Text>\r\n            </Stack>\r\n          </Box>\r\n        </Box>\r\n      </Center>\r\n    </Fragment>\r\n  );\r\n}\r\n", "import { Fragment } from \"react\";\r\nimport {\r\n  chakra,\r\n  Container,\r\n  Stack,\r\n  Text,\r\n  useColorModeValue,\r\n  Button,\r\n  Icon,\r\n  HStack,\r\n  SimpleGrid,\r\n  Flex,\r\n  Box,\r\n  Heading,\r\n  Input,\r\n  FormControl,\r\n  FormErrorMessage,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  Avatar,\r\n  Center,\r\n  Image,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport type { LoaderFunction } from \"@remix-run/node\";\r\n\r\nimport * as auth from \"app/utils/auth.server\";\r\nimport { Link } from \"@remix-run/react\";\r\n\r\nexport const loader: LoaderFunction = async ({ request }: any) => {\r\n  try {\r\n    return await auth.protectedRoute(request);\r\n  } catch (error) {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport default function Index() {\r\n  return (\r\n    <Fragment>\r\n      <Link to={\"/whoami\"} draggable=\"false\" prefetch=\"render\">\r\n        User Info\r\n      </Link>\r\n    </Fragment>\r\n  );\r\n}\r\n", "export default {'version':'2ba76422','entry':{'module':'/_static/build/entry.client-VWPDQ6WY.js','imports':['/_static/build/_shared/chunk-U7RZIOPR.js','/_static/build/_shared/chunk-7LJUAANO.js','/_static/build/_shared/chunk-5I45I5ZG.js','/_static/build/_shared/chunk-7MTQJYW3.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/_static/build/root-3NGXGXGC.js','imports':['/_static/build/_shared/chunk-JUZVN5BZ.js','/_static/build/_shared/chunk-CJSSKUMX.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/__auth/login':{'id':'routes/__auth/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/__auth/login-MP5SA3PD.js','imports':['/_static/build/_shared/chunk-TW2NOOU2.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__auth/register':{'id':'routes/__auth/register','parentId':'root','path':'register','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/__auth/register-D6EUHVMP.js','imports':['/_static/build/_shared/chunk-TW2NOOU2.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__auth/verify':{'id':'routes/__auth/verify','parentId':'root','path':'verify','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/__auth/verify-UX6DHVYD.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__auth/verify-identify':{'id':'routes/__auth/verify-identify','parentId':'root','path':'verify-identify','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/__auth/verify-identify-CS3QBJSG.js','imports':['/_static/build/_shared/chunk-TW2NOOU2.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dev/null':{'id':'routes/dev/null','parentId':'root','path':'dev/null','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/dev/null-L5C63DWO.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/index-24OCYBET.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/whoami':{'id':'routes/whoami','parentId':'root','path':'whoami','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/whoami-U53QUS34.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/_static/build/manifest-2BA76422.js'};"],
  "mappings": "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",
  "names": ["import_architect", "import_react", "createCache", "createEmotionServer", "import_react", "import_node", "import_react", "import_react", "navigationLinks", "eucronaAccounts", "import_react", "import_icons", "import_react", "handleResize", "import_react", "import_icons", "import_react", "ExecutionEnvironment", "scroll", "isAuthenticated", "import_react", "import_icons", "import_react", "import_icons", "Error", "import_react", "Error", "action", "loader", "import_react", "import_node", "import_react", "action", "loader", "TextField", "action", "loader", "validator", "import_react", "import_remix_validated_form", "import_with_zod", "import_zod", "import_node", "import_react", "validator", "action", "loader", "TextField", "SubmitButton", "action", "Verify", "loader", "import_react", "import_node", "import_react", "action", "loader", "Verify", "action", "loader", "validator", "import_react", "import_remix_validated_form", "import_with_zod", "import_zod", "import_react", "validator", "loader", "action", "PasswordTextField", "CheckBox", "SubmitButton", "action", "loader", "import_react", "import_react", "loader", "loader", "import_react", "import_react", "loader"]
}
