{
  "version": 3,
  "sources": ["../server.js", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.tsx", "../app/styles/context.tsx", "../app/styles/createEmotionCache.ts", "../app/root.tsx", "../app/components/Layout.tsx", "../app/utils/hooks.ts", "../app/components/Catch.tsx", "../app/components/Error.tsx", "../app/styles/theme.tsx", "../app/routes/__auth/register.tsx", "../app/utils/auth.server.ts", "../app/routes/__auth/verify.tsx", "../app/routes/__auth/login.tsx", "../app/routes/dev/null.ts", "../app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["import { createRequestHandler } from \"@remix-run/architect\";\nimport * as build from \"@remix-run/dev/server-build\";\n\nexport const handler = createRequestHandler({\n  build,\n  mode: process.env.NODE_ENV,\n});\n", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes\\\\__auth\\\\register.tsx\";\nimport * as route2 from \"./routes\\\\__auth\\\\verify.tsx\";\nimport * as route3 from \"./routes\\\\__auth\\\\login.tsx\";\nimport * as route4 from \"./routes\\\\dev\\\\null.ts\";\nimport * as route5 from \"./routes\\\\index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const publicPath = \"/_static/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/__auth/register\": {\n      id: \"routes/__auth/register\",\n      parentId: \"root\",\n      path: \"register\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/__auth/verify\": {\n      id: \"routes/__auth/verify\",\n      parentId: \"root\",\n      path: \"verify\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/__auth/login\": {\n      id: \"routes/__auth/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/dev/null\": {\n      id: \"routes/dev/null\",\n      parentId: \"root\",\n      path: \"dev/null\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    }\n  };", "// entry.server.tsx\nimport { renderToString } from \"react-dom/server\";\nimport { CacheProvider } from \"@emotion/react\";\nimport createEmotionServer from \"@emotion/server/create-instance\";\nimport { RemixServer } from \"@remix-run/react\";\nimport type { EntryContext } from \"@remix-run/node\"; // Depends on the runtime you choose\n\nimport { ServerStyleContext } from \"app/styles/context\";\nimport createEmotionCache from \"app/styles/createEmotionCache\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const cache = createEmotionCache();\n  const { extractCriticalToChunks } = createEmotionServer(cache);\n\n  const html = renderToString(\n    <ServerStyleContext.Provider value={null}>\n      <CacheProvider value={cache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </CacheProvider>\n    </ServerStyleContext.Provider>\n  );\n\n  const chunks = extractCriticalToChunks(html);\n\n  const markup = renderToString(\n    <ServerStyleContext.Provider value={chunks.styles}>\n      <CacheProvider value={cache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </CacheProvider>\n    </ServerStyleContext.Provider>\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(`<!DOCTYPE html>${markup}`, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "// context.tsx\r\nimport React, { createContext } from \"react\";\r\n\r\nexport interface ServerStyleContextData {\r\n  key: string;\r\n  ids: Array<string>;\r\n  css: string;\r\n}\r\n\r\nexport const ServerStyleContext = createContext<\r\n  ServerStyleContextData[] | null\r\n>(null);\r\n\r\nexport interface ClientStyleContextData {\r\n  reset: () => void;\r\n}\r\n\r\nexport const ClientStyleContext = createContext<ClientStyleContextData | null>(\r\n  null\r\n);\r\n", "// createEmotionCache.ts\r\nimport createCache from \"@emotion/cache\";\r\n\r\nexport default function createEmotionCache() {\r\n  return createCache({ key: \"css\" });\r\n}\r\n", "import React, { useContext, useEffect } from \"react\";\nimport { withEmotionCache } from \"@emotion/react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { useCatch, useLoaderData } from \"@remix-run/react\";\n\nimport type { LoaderFunction } from \"@remix-run/node\";\n\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\nimport type { MetaFunction, LinksFunction } from \"@remix-run/node\";\n\nimport { ServerStyleContext, ClientStyleContext } from \"app/styles/context\";\n\nimport Layout from \"app/components/Layout\";\nimport Catch from \"app/components/Catch\";\nimport Error from \"app/components/Error\";\n\nimport theme from \"app/styles/theme\";\n\nimport global from \"app/styles/global.css\";\nimport favicon from \"public/favicon.ico\";\nimport LogoPlain from \"public/logos/Logo-Plain.svg\";\nimport LogoSideways from \"public/logos/Logo-Sideways.svg\";\n\nimport * as utils from \"app/utils/auth.server\";\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Eucrona\",\n  description:\n    \"Production-ready Applications and Solutions built and developed to last\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport const links: LinksFunction = () => {\n  return [\n    // { rel: \"preconnect\", href: \"https://fonts.googleapis.com\" },\n    // { rel: \"preconnect\", href: \"https://fonts.gstatic.com\" },\n\n    {\n      rel: \"stylesheet\",\n      href: \"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700;1,800&display=swap\",\n    },\n    {\n      rel: \"stylesheet\",\n      href: global,\n    },\n    {\n      rel: \"preload\",\n      href: LogoPlain,\n      as: \"image\",\n    },\n    {\n      rel: \"preload\",\n      href: LogoSideways,\n      as: \"image\",\n    },\n    {\n      rel: \"preload\",\n      type: \"image/png\",\n      href: favicon,\n    },\n    {\n      rel: \"icon\",\n      type: \"image/png\",\n      href: favicon,\n    },\n  ];\n};\n\ninterface DocumentProps {\n  children: React.ReactNode;\n}\n\nconst Document = withEmotionCache(\n  ({ children }: DocumentProps, emotionCache) => {\n    const serverStyleData = useContext(ServerStyleContext);\n    const clientStyleData = useContext(ClientStyleContext);\n\n    // Only executed on client\n    useEffect(() => {\n      // re-link sheet container\n      emotionCache.sheet.container = document.head;\n      // re-inject tags\n      const tags = emotionCache.sheet.tags;\n      emotionCache.sheet.flush();\n      tags.forEach((tag) => {\n        (emotionCache.sheet as any)._insertTag(tag);\n      });\n      // reset cache to reapply global styles\n      clientStyleData?.reset();\n    }, []);\n\n    return (\n      <html lang=\"en\">\n        <head>\n          <Meta />\n          <Links />\n          {serverStyleData?.map(({ key, ids, css }) => (\n            <style\n              key={key}\n              data-emotion={`${key} ${ids.join(\" \")}`}\n              dangerouslySetInnerHTML={{ __html: css }}\n            />\n          ))}\n        </head>\n\n        <body style={{ height: \"100%\", overflow: \"overlay\" }}>\n          <ChakraProvider theme={theme}>{children}</ChakraProvider>\n          <ScrollRestoration />\n          <Scripts />\n          {process.env.NODE_ENV === \"development\" ? <LiveReload /> : null}\n        </body>\n      </html>\n    );\n  }\n);\n\nexport default function App() {\n  return (\n    <Document>\n      <Layout>\n        <Outlet />\n      </Layout>\n    </Document>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  return (\n    <Document>\n      <Layout>\n        <Error error={error} />\n      </Layout>\n    </Document>\n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  return (\n    <Document>\n      <Layout>\n        <Catch caught={caught} />\n      </Layout>\n    </Document>\n  );\n}\n", "import { Fragment, ReactNode, useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Fade,\r\n  Divider,\r\n  IconButton,\r\n  Box,\r\n  useDisclosure,\r\n  Show,\r\n  Tooltip,\r\n  Center,\r\n  Skeleton,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\nimport ExecutionEnvironment from \"exenv\";\r\n\r\n// import Navbar from \"app/components/Navbar\";\r\nimport Footer from \"app/components/Footer\";\r\n\r\nimport { FaGithub, FaLinkedin } from \"react-icons/fa\";\r\n\r\nimport { useWindowDimensions } from \"app/utils/hooks\";\r\nimport { useScrollButtonVisibility } from \"app/utils/hooks\";\r\nimport { ChevronUpIcon } from \"@chakra-ui/icons\";\r\n\r\ninterface LayoutProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst navigationLinks = [\r\n  { label: \"Solutions\", url: \"Solutions\" },\r\n  { label: \"Infrastructure\", url: \"Infrastructure\" },\r\n  { label: \"Resources\", url: \"Resources\" },\r\n  { label: \"Contacts\", url: \"Contacts\" },\r\n];\r\n\r\nconst eucronaAccounts = [\r\n  {\r\n    label: \"Michail Proios LinkedIn\",\r\n    url: \"https://www.linkedin.com/in/michail-proios/\",\r\n    isExternal: true,\r\n    icon: <FaLinkedin />,\r\n  },\r\n  {\r\n    label: \"Michail Proios Github\",\r\n    url: \"https://github.com/MichailProios\",\r\n    isExternal: true,\r\n    icon: <FaGithub />,\r\n  },\r\n];\r\n\r\nexport default function Layout({ children }: LayoutProps) {\r\n  const [flag, setFlag] = useState(false);\r\n  const { height } = useWindowDimensions();\r\n\r\n  const showButton = useScrollButtonVisibility();\r\n\r\n  useEffect(() => {\r\n    if (ExecutionEnvironment.canUseDOM) {\r\n      setFlag(true);\r\n    }\r\n  }, [setFlag]);\r\n\r\n  const handleScrollToTop = () => {\r\n    if (ExecutionEnvironment.canUseDOM) {\r\n      scroll.scrollToTop({\r\n        duration: 400,\r\n        delay: 0,\r\n        smooth: \"easeInOutQuart\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display={\"flex\"}\r\n      width={\"100%\"}\r\n      minHeight={height || \"100vh\"}\r\n      flexDirection={\"column\"}\r\n      justifyContent=\"flex-start\"\r\n    >\r\n      {/* <Navbar\r\n        navigationLinks={navigationLinks}\r\n        eucronaAccounts={eucronaAccounts}\r\n      /> */}\r\n\r\n      <Box display={{ base: \"none\", md: \"flex\" }}>\r\n        <Fade in={showButton} unmountOnExit style={{ zIndex: 1000 }}>\r\n          <Tooltip label=\"Scroll to Top\" closeOnScroll>\r\n            <IconButton\r\n              onClick={handleScrollToTop}\r\n              aria-label=\"top\"\r\n              zIndex={1000}\r\n              shadow=\"lg\"\r\n              size=\"lg\"\r\n              rounded={\"full\"}\r\n              position=\"fixed\"\r\n              bottom={12}\r\n              right={16}\r\n              colorScheme={\"primary\"}\r\n            >\r\n              <ChevronUpIcon fontSize=\"1.5em\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Fade>\r\n      </Box>\r\n\r\n      <Box>{children}</Box>\r\n      {/* <Box marginTop={\"auto\"}>\r\n        <Divider />\r\n        <Footer\r\n          navigationLinks={navigationLinks}\r\n          eucronaAccounts={eucronaAccounts}\r\n        />\r\n      </Box> */}\r\n    </Box>\r\n  );\r\n}\r\n", "import { useEffect, useState } from \"react\";\r\n\r\nexport function useScrollButtonVisibility() {\r\n  const [showButton, setShowButton] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      const handleScrollButtonVisiblity = () => {\r\n        window.pageYOffset > 300 ? setShowButton(true) : setShowButton(false);\r\n      };\r\n      window.addEventListener(\"scroll\", handleScrollButtonVisiblity);\r\n      return () => {\r\n        window.removeEventListener(\"scroll\", handleScrollButtonVisiblity);\r\n      };\r\n    }\r\n  }, []); // Empty array ensures that effect is only run on mount\r\n  return showButton;\r\n}\r\n\r\ntype WindowDimentions = {\r\n  width: number | undefined;\r\n  height: number | undefined;\r\n};\r\n\r\nexport function useWindowDimensions() {\r\n  const [windowDimensions, setWindowSize] = useState<WindowDimentions>({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // only execute all the code below in client side\r\n    if (typeof window !== \"undefined\") {\r\n      // Handler to call on window resize\r\n      function handleResize() {\r\n        // Set window width/height to state\r\n        setWindowSize({\r\n          width: window.innerWidth,\r\n          height: window.innerHeight,\r\n        });\r\n      }\r\n\r\n      // Add event listener\r\n      window.addEventListener(\"resize\", handleResize);\r\n\r\n      // Call handler right away so state gets updated with initial window size\r\n      handleResize();\r\n\r\n      // Remove event listener on cleanup\r\n      return () => window.removeEventListener(\"resize\", handleResize);\r\n    }\r\n  }, []); // Empty array ensures that effect is only run on mount\r\n  return windowDimensions;\r\n}\r\n", "import React from \"react\";\r\nimport { Heading, Text, Button, Container, VStack } from \"@chakra-ui/react\";\r\nimport { NavLink } from \"@remix-run/react\";\r\nimport { ArrowForwardIcon } from \"@chakra-ui/icons\";\r\n\r\ninterface CatchProps {\r\n  caught: any;\r\n}\r\n\r\nexport default function Catch({ caught }: CatchProps) {\r\n  return (\r\n    <Container mt=\"5em\">\r\n      <VStack>\r\n        <Heading bgGradient=\"linear(to-br, #228be6, #15aabf)\" bgClip=\"text\">\r\n          {caught.status}\r\n        </Heading>\r\n        <Text fontSize=\"18px\">{caught.statusText}</Text>\r\n\r\n        <Button\r\n          rightIcon={<ArrowForwardIcon />}\r\n          variant=\"solid\"\r\n          colorScheme={\"primary\"}\r\n          size=\"lg\"\r\n          as={NavLink}\r\n          to=\"/\"\r\n          draggable={false}\r\n        >\r\n          Go to Home\r\n        </Button>\r\n      </VStack>\r\n    </Container>\r\n  );\r\n}\r\n", "import React from \"react\";\r\nimport { Heading, Text, Button, Container, VStack } from \"@chakra-ui/react\";\r\nimport { NavLink } from \"@remix-run/react\";\r\nimport { ArrowForwardIcon } from \"@chakra-ui/icons\";\r\n\r\ninterface ErrorProps {\r\n  error: any;\r\n}\r\n\r\nexport default function Error({ error }: ErrorProps) {\r\n  console.error(error.stack);\r\n  return (\r\n    <Container mt=\"5em\">\r\n      <VStack>\r\n        <Heading bgGradient=\"linear(to-br, #228be6, #15aabf)\" bgClip=\"text\">\r\n          Application Error\r\n        </Heading>\r\n        <Text fontSize=\"18px\">{error.message}</Text>\r\n\r\n        <Button\r\n          rightIcon={<ArrowForwardIcon />}\r\n          variant=\"solid\"\r\n          colorScheme={\"primary\"}\r\n          size=\"lg\"\r\n          as={NavLink}\r\n          to=\"/\"\r\n          draggable={false}\r\n        >\r\n          Go to Home\r\n        </Button>\r\n      </VStack>\r\n    </Container>\r\n  );\r\n}\r\n", "import { extendTheme } from \"@chakra-ui/react\";\r\n\r\nconst colors = {\r\n  primary: {\r\n    \"50\": \"#f0f9fe\",\r\n    \"100\": \"#c3e5fb\",\r\n    \"200\": \"#8dcdf7\",\r\n    \"300\": \"#45aef2\",\r\n    \"400\": \"#349cde\",\r\n    \"500\": \"#2c83bb\",\r\n    \"600\": \"#256f9e\",\r\n    \"700\": \"#1e597f\",\r\n    \"800\": \"#194b6b\",\r\n    \"900\": \"#12364d\",\r\n  },\r\n};\r\n\r\nconst config = {\r\n  initialColorMode: \"dark\",\r\n};\r\n\r\nconst components = {};\r\n\r\nconst theme = extendTheme({ config, colors, components });\r\n\r\nexport default theme;\r\n", "import { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Stack,\r\n  Button,\r\n  Heading,\r\n  useColorModeValue,\r\n  VStack,\r\n  Center,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Checkbox,\r\n  FormErrorMessage,\r\n  Textarea,\r\n  Divider,\r\n  Text,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport type { LoaderFunction } from \"@remix-run/node\";\r\nimport {\r\n  ValidatedForm,\r\n  validationError,\r\n  useIsSubmitting,\r\n  useField,\r\n} from \"remix-validated-form\";\r\nimport { withZod } from \"@remix-validated-form/with-zod\";\r\nimport { z } from \"zod\";\r\n\r\nimport { redirect } from \"@remix-run/node\";\r\n\r\nimport * as auth from \"app/utils/auth.server\";\r\nimport { Link, useActionData } from \"@remix-run/react\";\r\n\r\nconst passwordRegex = new RegExp(\r\n  \"(?=[A-Za-z0-9@#$%^&+!=]+$)^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@#$%^&+!=]).*$\"\r\n);\r\n\r\nexport const validator = withZod(\r\n  z.object({\r\n    fullName: z.string().min(1, { message: \"Full Name is required\" }),\r\n    emailAddress: z\r\n      .string()\r\n      .min(1, { message: \"Email Address is required\" })\r\n      .email(\"Must be a valid email\")\r\n      .trim(),\r\n    password: z\r\n      .string()\r\n      .min(8, { message: \"Password must be at least 8 characters\" })\r\n      .regex(passwordRegex, {\r\n        message:\r\n          \"Password must contain at least one uppercase, one lowercase, one number, and one special character\",\r\n      })\r\n      .trim(),\r\n    confirmPassword: z\r\n      .string()\r\n      .min(8, { message: \"Confirm Password must be at least 8 characters\" })\r\n      .regex(passwordRegex, {\r\n        message:\r\n          \"Password must contain at least one uppercase, one lowercase, one number, and one special character\",\r\n      })\r\n      .trim(),\r\n  })\r\n);\r\n\r\n// export const loader: LoaderFunction = async ({ request }) => {\r\n//!Register\r\n// const res = await utils.signUp(\r\n//   \"mproios12@eucrona.com\",\r\n//   \"name\",\r\n//   \"!Mike32083705\"\r\n// );\r\n//!Sign In\r\n// const res = await utils.signIn(\r\n//   request,\r\n//   \"mproios12@eucrona.com\",\r\n//   \"!Mike32083705\"\r\n// );\r\n//!Verify\r\n// const res = await utils.verifyAccount(\"mproios12@eucrona.com\", \"559423\");\r\n\r\n//!Send Code\r\n// const res = await utils.sendCode(\"mproios12@eucrona.com\");\r\n//!Forgot Password\r\n// const res = await utils.forgotPassword(\r\n//   \"mproios1@eucrona.com\",\r\n//   \"924445\",\r\n//   \"!Mike32083705\"\r\n// );\r\n//!Log Out\r\n// const res = await utils.signOut(request);\r\n\r\n//!GetSession\r\n// const res = await utils.getSession(request);\r\n\r\n//   return \"s\";\r\n// };\r\n\r\nexport async function action({ request }: { request: Request }) {\r\n  const data = await validator.validate(await request.formData());\r\n\r\n  if (data.error) {\r\n    return validationError(data.error);\r\n  }\r\n\r\n  const { fullName, emailAddress, password, confirmPassword } = data.data;\r\n\r\n  try {\r\n    if (password !== confirmPassword) {\r\n      console.log(\"here\");\r\n      return \"passwordMismatch\";\r\n    }\r\n\r\n    console.log(fullName, emailAddress, password, confirmPassword);\r\n\r\n    await auth.signUp(emailAddress, fullName, password);\r\n\r\n    return redirect(`/verify?emailAddress=${emailAddress}`);\r\n  } catch (error: any) {\r\n    if (error.name === \"UsernameExistsException\") {\r\n      return \"accountExists\";\r\n    }\r\n    return \"unknownError\";\r\n  }\r\n}\r\n\r\nfunction TextField(props: any) {\r\n  const { error, getInputProps } = useField(props.name);\r\n  const actionData = useActionData();\r\n\r\n  return (\r\n    <FormControl id={props.name} isInvalid={error ? true : false}>\r\n      <FormLabel>{props.label}</FormLabel>\r\n      <Input\r\n        {...props}\r\n        {...getInputProps()}\r\n        disabled={actionData === \"success\"}\r\n      />\r\n      <FormErrorMessage>{error}</FormErrorMessage>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nfunction PasswordTextField(props: any) {\r\n  //   const [show, setShow] = useState(false);\r\n  //   const handleClick = () => setShow(!show);\r\n  const { error, getInputProps } = useField(props.name);\r\n  const actionData = useActionData();\r\n\r\n  return (\r\n    <FormControl id={props.name} isInvalid={error ? true : false}>\r\n      <FormLabel>{props.label}</FormLabel>\r\n      <InputGroup size=\"md\">\r\n        <Input\r\n          {...props}\r\n          {...getInputProps()}\r\n          // disabled={actionData === \"success\"}\r\n          type={\"password\"}\r\n        />\r\n        {/* <InputRightElement width=\"4.5rem\">\r\n          <Button\r\n            h=\"1.75rem\"\r\n            size=\"sm\"\r\n            rounded=\"md\"\r\n            bg={useColorModeValue(\"gray.300\", \"gray.700\")}\r\n            _hover={{\r\n              bg: useColorModeValue(\"gray.400\", \"gray.800\"),\r\n            }}\r\n            onClick={handleClick}\r\n          >\r\n            {show ? \"Hide\" : \"Show\"}\r\n          </Button>\r\n        </InputRightElement> */}\r\n      </InputGroup>\r\n      <FormErrorMessage>{error}</FormErrorMessage>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nfunction CheckBox(props: any) {\r\n  const { getInputProps } = useField(props.name);\r\n  const actionData = useActionData();\r\n\r\n  return (\r\n    <Checkbox\r\n      {...props}\r\n      {...getInputProps()}\r\n      defaultChecked\r\n      value={\"yes\"}\r\n      // disabled={actionData === \"success\"}\r\n    >\r\n      {props.label}\r\n    </Checkbox>\r\n  );\r\n}\r\n\r\nfunction SubmitButton(props: any) {\r\n  const isSubmitting = useIsSubmitting();\r\n  const actionData = useActionData();\r\n\r\n  return (\r\n    <Button\r\n      {...props}\r\n      isLoading={isSubmitting}\r\n      loadingText=\"Creating Account\"\r\n      // disabled={actionData === \"success\" || isSubmitting}\r\n    >\r\n      {props.label}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default function Register() {\r\n  const actionData = useActionData();\r\n\r\n  console.log(actionData);\r\n\r\n  return (\r\n    <Container maxW=\"7xl\" p={{ base: 5, md: 10 }}>\r\n      <Center>\r\n        <Stack\r\n          spacing={4}\r\n          as={ValidatedForm}\r\n          validator={validator}\r\n          method=\"post\"\r\n          id=\"registerForm\"\r\n        >\r\n          <VStack\r\n            boxSize={{ base: \"xs\", sm: \"sm\", md: \"md\" }}\r\n            h=\"max-content !important\"\r\n            bg={useColorModeValue(\"white\", \"gray.700\")}\r\n            rounded=\"lg\"\r\n            boxShadow=\"lg\"\r\n            p={{ base: 5, sm: 10 }}\r\n            spacing={8}\r\n          >\r\n            <Stack align=\"center\">\r\n              <Heading fontSize=\"2xl\">Create Account</Heading>\r\n            </Stack>\r\n\r\n            <VStack spacing={4} w=\"100%\">\r\n              <TextField\r\n                label=\"Full Name\"\r\n                name=\"fullName\"\r\n                placeholder=\"Enter your first and last name\"\r\n                rounded=\"md\"\r\n                type=\"text\"\r\n              />\r\n              <TextField\r\n                label=\"Email Address\"\r\n                name=\"emailAddress\"\r\n                placeholder=\"Enter your email\"\r\n                rounded=\"md\"\r\n                type=\"email\"\r\n              />\r\n\r\n              <PasswordTextField\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                placeholder=\"Enter your password\"\r\n                rounded=\"md\"\r\n              />\r\n              <PasswordTextField\r\n                label=\"Confirm Password\"\r\n                name=\"confirmPassword\"\r\n                placeholder=\"Confirm your password\"\r\n                rounded=\"md\"\r\n              />\r\n\r\n              {actionData === \"passwordMismatch\" && (\r\n                <Alert status=\"error\" rounded=\"md\">\r\n                  <AlertIcon />\r\n                  <AlertTitle>Passwords do not match</AlertTitle>\r\n                </Alert>\r\n              )}\r\n              {actionData === \"accountExists\" && (\r\n                <Alert status=\"error\" rounded=\"md\">\r\n                  <AlertIcon />\r\n                  <AlertTitle>Account already registered.</AlertTitle>\r\n\r\n                  <Button\r\n                    as={Link}\r\n                    to={\"/verify\"}\r\n                    colorScheme=\"primary\"\r\n                    size=\"sm\"\r\n                    maxW=\"125px\"\r\n                  >\r\n                    Verify Account\r\n                  </Button>\r\n                </Alert>\r\n              )}\r\n              {actionData === \"unknownError\" && (\r\n                <Alert status=\"error\" rounded=\"md\">\r\n                  <AlertIcon />\r\n                  <AlertTitle>Unknown error while registering</AlertTitle>\r\n                </Alert>\r\n              )}\r\n            </VStack>\r\n            <VStack w=\"100%\" spacing={4}>\r\n              <Checkbox colorScheme=\"primary\" size=\"md\">\r\n                Agree with Terms & Conditions\r\n              </Checkbox>\r\n\r\n              <SubmitButton\r\n                w=\"100%\"\r\n                colorScheme=\"primary\"\r\n                label=\"Create Account\"\r\n                type=\"submit\"\r\n              />\r\n              <Text>\r\n                Already have an account?&nbsp;\r\n                <Text\r\n                  as={Link}\r\n                  to=\"/Login\"\r\n                  fontSize={{ base: \"md\", sm: \"md\" }}\r\n                  fontWeight=\"bold\"\r\n                  _hover={{ textDecoration: \"underline\" }}\r\n                >\r\n                  Sign In\r\n                </Text>\r\n              </Text>\r\n            </VStack>\r\n          </VStack>\r\n        </Stack>\r\n      </Center>\r\n    </Container>\r\n  );\r\n}\r\n", "import {\r\n  AuthenticationDetails,\r\n  CognitoUser,\r\n  CognitoUserAttribute,\r\n  CognitoUserPool,\r\n} from \"amazon-cognito-identity-js\";\r\n\r\nimport { redirect, createCookieSessionStorage } from \"@remix-run/node\";\r\n\r\nconst userPoolId = process.env.COGNITO_USERPOOL_ID;\r\nconst clientId = process.env.COGNITO_CLIENT_ID;\r\nconst sessionSecret = process.env.COGNITO_SESSION_SECRET;\r\n\r\nif (!sessionSecret || !userPoolId || !clientId) {\r\n  throw new Error(\"Env missing configuration\");\r\n}\r\n\r\nconst poolData = {\r\n  UserPoolId: `${userPoolId}`,\r\n  ClientId: `${clientId}`,\r\n};\r\n\r\nconst userPool: CognitoUserPool = new CognitoUserPool(poolData);\r\n\r\nconst sessionStorage = createCookieSessionStorage({\r\n  cookie: {\r\n    name: \"EucronaCloud_Session\",\r\n    httpOnly: true,\r\n    path: \"/\",\r\n    sameSite: \"lax\",\r\n    secrets: [sessionSecret],\r\n    secure: process.env.NODE_ENV === \"production\",\r\n  },\r\n});\r\n\r\nexport async function getSession(request: Request) {\r\n  const cookie = request.headers.get(\"Cookie\");\r\n  return sessionStorage.getSession(cookie);\r\n}\r\n\r\nexport async function isAuthenticated(request: Request) {\r\n  const currentSession = await getSession(request);\r\n\r\n  console.log(currentSession.data.UserId);\r\n\r\n  if (currentSession.data.UserId) {\r\n    return true;\r\n  } else {\r\n    return redirect(\"/login\");\r\n  }\r\n}\r\n\r\nfunction getCognitoUser(username: string) {\r\n  const userData = {\r\n    Username: username,\r\n    Pool: userPool,\r\n  };\r\n  const cognitoUser = new CognitoUser(userData);\r\n\r\n  return cognitoUser;\r\n}\r\n\r\nexport async function signUp(username: string, name: string, password: string) {\r\n  return new Promise(function (resolve, reject) {\r\n    const attributeList = [\r\n      new CognitoUserAttribute({\r\n        Name: \"email\",\r\n        Value: username,\r\n      }),\r\n      new CognitoUserAttribute({\r\n        Name: \"name\",\r\n        Value: name,\r\n      }),\r\n    ];\r\n\r\n    userPool.signUp(username, password, attributeList, [], function (err, res) {\r\n      if (err) {\r\n        reject(err);\r\n      } else {\r\n        resolve(res);\r\n      }\r\n    });\r\n  }).catch((err) => {\r\n    throw err;\r\n  });\r\n}\r\n\r\nexport async function signIn(request: any, username: string, password: string) {\r\n  return new Promise(async function (resolve, reject) {\r\n    const authenticationData = {\r\n      Username: username,\r\n      Password: password,\r\n    };\r\n    const authenticationDetails = new AuthenticationDetails(authenticationData);\r\n\r\n    const currentUser = getCognitoUser(username);\r\n\r\n    currentUser.authenticateUser(authenticationDetails, {\r\n      onSuccess: async function (res: any) {\r\n        const session = await getSession(request);\r\n        session.set(\"UserId\", res.idToken);\r\n\r\n        resolve(\r\n          redirect(\"/\", {\r\n            headers: {\r\n              \"Set-Cookie\": await sessionStorage.commitSession(session, {\r\n                maxAge: true\r\n                  ? 60 * 60 * 24 * 7 // 7 days\r\n                  : undefined,\r\n              }),\r\n            },\r\n          })\r\n        );\r\n      },\r\n      onFailure: function (err: any) {\r\n        reject(err);\r\n      },\r\n    });\r\n  }).catch((err) => {\r\n    throw err;\r\n  });\r\n}\r\n\r\nexport async function verifyAccount(username: string, code: string) {\r\n  return new Promise(function (resolve, reject) {\r\n    const cognitoUser = getCognitoUser(username);\r\n\r\n    cognitoUser.confirmRegistration(code, true, function (err, result) {\r\n      if (err) {\r\n        reject(err);\r\n      } else {\r\n        resolve(result);\r\n      }\r\n    });\r\n  }).catch((err) => {\r\n    throw err;\r\n  });\r\n}\r\n\r\nexport async function sendCode(username: string) {\r\n  return new Promise(function (resolve, reject) {\r\n    const cognitoUser = getCognitoUser(username);\r\n\r\n    if (!cognitoUser) {\r\n      reject(`could not find ${username}`);\r\n      return;\r\n    }\r\n\r\n    cognitoUser.forgotPassword({\r\n      onSuccess: function (res) {\r\n        resolve(res);\r\n      },\r\n      onFailure: function (err) {\r\n        reject(err);\r\n      },\r\n    });\r\n  }).catch((err) => {\r\n    throw err;\r\n  });\r\n}\r\n\r\nexport async function forgotPassword(\r\n  username: string,\r\n  code: string,\r\n  password: string\r\n) {\r\n  return new Promise(function (resolve, reject) {\r\n    const cognitoUser = getCognitoUser(username);\r\n\r\n    if (!cognitoUser) {\r\n      reject(`could not find ${username}`);\r\n      return;\r\n    }\r\n\r\n    cognitoUser.confirmPassword(code, password, {\r\n      onSuccess: function () {\r\n        resolve(\"password updated\");\r\n      },\r\n      onFailure: function (err) {\r\n        reject(err);\r\n      },\r\n    });\r\n  });\r\n}\r\n\r\nexport async function signOut(request: any) {\r\n  const session = await getSession(request);\r\n\r\n  return redirect(\"/Login\", {\r\n    headers: {\r\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\r\n    },\r\n  });\r\n}\r\n\r\n// export async function getAttributes() {\r\n//   return new Promise(function (resolve, reject) {\r\n//     currentUser.getUserAttributes(function (err: any, attributes: any) {\r\n//       if (err) {\r\n//         reject(err);\r\n//       } else {\r\n//         resolve(attributes);\r\n//       }\r\n//     });\r\n//   }).catch((err) => {\r\n//     throw err;\r\n//   });\r\n// }\r\n\r\n// export async function setAttribute(attribute: any) {\r\n//   return new Promise(function (resolve, reject) {\r\n//     const attributeList = [];\r\n//     const res = new CognitoUserAttribute(attribute);\r\n//     attributeList.push(res);\r\n\r\n//     currentUser.updateAttributes(attributeList, (err: any, res: any) => {\r\n//       if (err) {\r\n//         reject(err);\r\n//       } else {\r\n//         resolve(res);\r\n//       }\r\n//     });\r\n//   }).catch((err) => {\r\n//     throw err;\r\n//   });\r\n// }\r\n", "import { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Container,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Stack,\r\n  Button,\r\n  Heading,\r\n  useColorModeValue,\r\n  VStack,\r\n  Center,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Checkbox,\r\n  FormErrorMessage,\r\n  Textarea,\r\n  Divider,\r\n  Text,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  PinInput,\r\n  PinInputField,\r\n  HStack,\r\n  Flex,\r\n  useDisclosure,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  IconButton,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { LoaderFunction, redirect } from \"@remix-run/node\";\r\nimport {\r\n  ValidatedForm,\r\n  validationError,\r\n  useIsSubmitting,\r\n  useField,\r\n} from \"remix-validated-form\";\r\nimport { withZod } from \"@remix-validated-form/with-zod\";\r\nimport { z } from \"zod\";\r\n\r\nimport * as auth from \"app/utils/auth.server\";\r\nimport {\r\n  Form,\r\n  Link,\r\n  useActionData,\r\n  useLoaderData,\r\n  useMatches,\r\n  useSubmit,\r\n  useTransition,\r\n} from \"@remix-run/react\";\r\n\r\nimport { RepeatIcon } from \"@chakra-ui/icons\";\r\n\r\nexport async function action({ request }: { request: Request }) {\r\n  const url = new URL(request.url);\r\n  const data = await request.formData();\r\n\r\n  const emailAddress: any = url.searchParams.get(\"emailAddress\");\r\n  const type: any = data.get(\"type\");\r\n  const otp: any = data.get(\"otp\");\r\n\r\n  try {\r\n    switch (type) {\r\n      case \"verify\": {\r\n        await auth.verifyAccount(emailAddress, otp);\r\n\r\n        return redirect(\"/login\");\r\n      }\r\n      case \"resend\": {\r\n        const res = await auth.sendCode(emailAddress);\r\n        console.log(res);\r\n        return \"success\";\r\n      }\r\n      default: {\r\n        return null;\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    return \"Incorrect Password\";\r\n  }\r\n}\r\n\r\nexport async function loader({ request }: { request: Request }) {\r\n  const url = new URL(request.url);\r\n\r\n  const emailAddress: any = url.searchParams.get(\"emailAddress\");\r\n\r\n  if (emailAddress) {\r\n    return emailAddress;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default function Verify() {\r\n  const actionData = useActionData();\r\n  const loading = useTransition();\r\n  const submit = useSubmit();\r\n\r\n  function handleResend() {\r\n    const formData = new FormData();\r\n    formData.set(\"type\", \"resend\");\r\n    submit(formData, { method: \"post\" });\r\n  }\r\n\r\n  function handleVerify(value: any) {\r\n    const formData = new FormData();\r\n    formData.set(\"otp\", value);\r\n    formData.set(\"type\", \"verify\");\r\n    submit(formData, { method: \"post\" });\r\n  }\r\n\r\n  return (\r\n    <Container maxW=\"7xl\" p={{ base: 5, md: 10 }}>\r\n      <Center>\r\n        <Stack spacing={4}>\r\n          <Stack align=\"center\">\r\n            <Heading fontSize=\"2xl\">Verify Account</Heading>\r\n          </Stack>\r\n          <VStack\r\n            boxSize={{ base: \"xs\", sm: \"sm\", md: \"md\" }}\r\n            h=\"max-content !important\"\r\n            bg={useColorModeValue(\"white\", \"gray.700\")}\r\n            rounded=\"lg\"\r\n            boxShadow=\"lg\"\r\n            p={{ base: 5, sm: 10 }}\r\n            spacing={8}\r\n          >\r\n            <FormControl id={\"otp\"}>\r\n              <FormLabel textAlign={\"center\"}>One Time Pin</FormLabel>\r\n              <HStack\r\n                w=\"100%\"\r\n                display=\"flex\"\r\n                justifyContent=\"center\"\r\n                as={Form}\r\n                method=\"post\"\r\n              >\r\n                <PinInput\r\n                  otp\r\n                  size=\"lg\"\r\n                  autoFocus\r\n                  // type=\"number\"\r\n                  onComplete={(value) => {\r\n                    handleVerify(value);\r\n                  }}\r\n                >\r\n                  <PinInputField />\r\n                  <PinInputField />\r\n                  <PinInputField />\r\n                  <PinInputField />\r\n                  <PinInputField />\r\n                  <PinInputField />\r\n                </PinInput>\r\n              </HStack>\r\n            </FormControl>\r\n\r\n            <Alert status=\"info\" rounded=\"md\">\r\n              <AlertIcon />\r\n              <AlertTitle>\r\n                A one time pin was sent to your email. Please enter the code\r\n                above\r\n              </AlertTitle>\r\n            </Alert>\r\n\r\n            <Flex alignItems={\"center\"} as={Form} method=\"post\">\r\n              <Text>Resend one time pin?&nbsp;</Text>\r\n              <IconButton\r\n                aria-label=\"Resend\"\r\n                icon={<RepeatIcon />}\r\n                size=\"sm\"\r\n                onClick={() => handleResend()}\r\n              />\r\n            </Flex>\r\n\r\n            {/* <input type=\"hidden\" name=\"otp\" value={otp || \"\"} /> */}\r\n          </VStack>\r\n        </Stack>\r\n      </Center>\r\n      <EmailModal />\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction EmailModal() {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const submit = useSubmit();\r\n  const emailAddress = useLoaderData();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!emailAddress) {\r\n      onOpen();\r\n    }\r\n  }, [emailAddress, onOpen]);\r\n\r\n  // function handleSetEmail() {\r\n  //   submit(null, { method: \"post\",  });\r\n  // }\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      autoFocus\r\n      closeOnEsc={false}\r\n      closeOnOverlayClick={false}\r\n    >\r\n      <ModalOverlay />\r\n      <ModalContent>\r\n        <ModalHeader>Verify Account</ModalHeader>\r\n\r\n        <ModalBody\r\n          pb={6}\r\n          as={Form}\r\n          method=\"post\"\r\n          action={`/verify?emailAddress=${email}`}\r\n        >\r\n          <Text>Please enter your email address</Text> <br />\r\n          <FormControl>\r\n            <FormLabel>Email</FormLabel>\r\n            <Input\r\n              placeholder=\"Email\"\r\n              type=\"email\"\r\n              name=\"emailAddress\"\r\n              value={email}\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n            />\r\n          </FormControl>\r\n        </ModalBody>\r\n\r\n        <ModalFooter>\r\n          <Button colorScheme=\"blue\" mr={3} onClick={onClose} type={\"submit\"}>\r\n            Set\r\n          </Button>\r\n        </ModalFooter>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n}\r\n", "import { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Stack,\r\n  Button,\r\n  Heading,\r\n  useColorModeValue,\r\n  VStack,\r\n  Center,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Checkbox,\r\n  FormErrorMessage,\r\n  Textarea,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport type { LoaderFunction } from \"@remix-run/node\";\r\n\r\nimport { Link, useMatches } from \"@remix-run/react\";\r\nimport {\r\n  ValidatedForm,\r\n  validationError,\r\n  useIsSubmitting,\r\n  useField,\r\n} from \"remix-validated-form\";\r\nimport { withZod } from \"@remix-validated-form/with-zod\";\r\nimport { z } from \"zod\";\r\n\r\nimport * as auth from \"app/utils/auth.server\";\r\nimport { useActionData, useLoaderData } from \"@remix-run/react\";\r\n\r\nexport const validator = withZod(\r\n  z.object({\r\n    emailAddress: z\r\n      .string()\r\n      .min(1, { message: \"Email is required\" })\r\n      .email(\"Must be a valid email\"),\r\n    password: z\r\n      .string()\r\n      .min(8, { message: \"Password must be at least 8 characters\" }),\r\n  })\r\n);\r\n\r\n// export const loader: LoaderFunction = async ({ request }) => {\r\n//!Register\r\n// const res = await utils.signUp(\r\n//   \"mproios12@eucrona.com\",\r\n//   \"name\",\r\n//   \"!Mike32083705\"\r\n// );\r\n//!Sign In\r\n// const res = await utils.signIn(\r\n//   request,\r\n//   \"mproios12@eucrona.com\",\r\n//   \"!Mike32083705\"\r\n// );\r\n//!Verify\r\n// const res = await utils.verifyAccount(\"mproios12@eucrona.com\", \"559423\");\r\n\r\n//!Send Code\r\n// const res = await utils.sendCode(\"mproios12@eucrona.com\");\r\n//!Forgot Password\r\n// const res = await utils.forgotPassword(\r\n//   \"mproios1@eucrona.com\",\r\n//   \"924445\",\r\n//   \"!Mike32083705\"\r\n// );\r\n//!Log Out\r\n// const res = await utils.signOut(request);\r\n\r\n//!GetSession\r\n// const res = await utils.getSession(request);\r\n\r\n//   return \"s\";\r\n// };\r\n\r\nexport async function action({ request }: { request: Request }) {\r\n  const data = await validator.validate(await request.formData());\r\n\r\n  if (data.error) {\r\n    return validationError(data.error);\r\n  }\r\n\r\n  const { emailAddress, password } = data.data;\r\n\r\n  try {\r\n    const res = await auth.signIn(request, emailAddress, password);\r\n\r\n    return res;\r\n  } catch (error) {\r\n    return \"Incorrect Password\";\r\n  }\r\n}\r\n\r\nfunction EmailTextField(props: any) {\r\n  const { error, getInputProps } = useField(props.name);\r\n  const actionData = useActionData();\r\n\r\n  return (\r\n    <FormControl id={props.name} isInvalid={error ? true : false}>\r\n      <FormLabel>{props.label}</FormLabel>\r\n      <Input\r\n        {...props}\r\n        {...getInputProps()}\r\n        disabled={actionData === \"success\"}\r\n      />\r\n      <FormErrorMessage>{error}</FormErrorMessage>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nfunction PasswordTextField(props: any) {\r\n  const [show, setShow] = useState(false);\r\n  const handleClick = () => setShow(!show);\r\n  const { error, getInputProps } = useField(props.name);\r\n  const actionData = useActionData();\r\n\r\n  return (\r\n    <FormControl id={props.name} isInvalid={error ? true : false}>\r\n      <FormLabel>{props.label}</FormLabel>\r\n      <InputGroup size=\"md\">\r\n        <Input\r\n          {...props}\r\n          {...getInputProps()}\r\n          // disabled={actionData === \"success\"}\r\n          type={show ? \"text\" : \"password\"}\r\n        />\r\n        <InputRightElement width=\"4.5rem\">\r\n          <Button\r\n            h=\"1.75rem\"\r\n            size=\"sm\"\r\n            rounded=\"md\"\r\n            bg={useColorModeValue(\"gray.300\", \"gray.700\")}\r\n            _hover={{\r\n              bg: useColorModeValue(\"gray.400\", \"gray.800\"),\r\n            }}\r\n            onClick={handleClick}\r\n          >\r\n            {show ? \"Hide\" : \"Show\"}\r\n          </Button>\r\n        </InputRightElement>\r\n      </InputGroup>\r\n      <FormErrorMessage>{error}</FormErrorMessage>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nfunction CheckBox(props: any) {\r\n  const { getInputProps } = useField(props.name);\r\n  const actionData = useActionData();\r\n\r\n  return (\r\n    <Checkbox\r\n      {...props}\r\n      {...getInputProps()}\r\n      defaultChecked\r\n      value={\"yes\"}\r\n      // disabled={actionData === \"success\"}\r\n    >\r\n      {props.label}\r\n    </Checkbox>\r\n  );\r\n}\r\n\r\nfunction SubmitButton(props: any) {\r\n  const isSubmitting = useIsSubmitting();\r\n  const actionData = useActionData();\r\n\r\n  return (\r\n    <Button\r\n      {...props}\r\n      isLoading={isSubmitting}\r\n      loadingText=\"Signing In\"\r\n      // disabled={actionData === \"success\" || isSubmitting}\r\n    >\r\n      {props.label}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default function Login() {\r\n  const actionData = useActionData();\r\n\r\n  return (\r\n    <Container maxW=\"7xl\" p={{ base: 5, md: 10 }}>\r\n      <Center>\r\n        <Stack\r\n          spacing={4}\r\n          as={ValidatedForm}\r\n          validator={validator}\r\n          method=\"post\"\r\n          id=\"loginForm\"\r\n        >\r\n          <Stack align=\"center\">\r\n            <Heading fontSize=\"2xl\">Sign in to your account</Heading>\r\n          </Stack>\r\n          <VStack\r\n            boxSize={{ base: \"xs\", sm: \"sm\", md: \"md\" }}\r\n            h=\"max-content !important\"\r\n            bg={useColorModeValue(\"white\", \"gray.700\")}\r\n            rounded=\"lg\"\r\n            boxShadow=\"lg\"\r\n            p={{ base: 5, sm: 10 }}\r\n            spacing={8}\r\n          >\r\n            <VStack spacing={4} w=\"100%\">\r\n              <EmailTextField\r\n                label=\"Email Address\"\r\n                name=\"emailAddress\"\r\n                placeholder=\"Enter your email\"\r\n                rounded=\"md\"\r\n                type=\"email\"\r\n              />\r\n\r\n              <PasswordTextField\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                placeholder=\"Enter your password\"\r\n                rounded=\"md\"\r\n              />\r\n            </VStack>\r\n            <VStack w=\"100%\">\r\n              <Stack direction=\"row\" justify=\"space-between\" w=\"100%\">\r\n                <Checkbox colorScheme=\"green\" size=\"md\">\r\n                  Remember me\r\n                </Checkbox>\r\n                <Text as={Link} to=\"/login\" fontSize={{ base: \"md\", sm: \"md\" }}>\r\n                  Forgot password?\r\n                </Text>\r\n              </Stack>\r\n              {/* <Button\r\n                bg=\"green.300\"\r\n                color=\"white\"\r\n                _hover={{\r\n                  bg: \"green.500\",\r\n                }}\r\n                rounded=\"md\"\r\n              >\r\n                Sign in\r\n              </Button> */}\r\n              <SubmitButton\r\n                w=\"100%\"\r\n                colorScheme=\"primary\"\r\n                label=\"Sign In\"\r\n                type=\"submit\"\r\n              />\r\n\r\n              <Text\r\n                as={Link}\r\n                to=\"/register\"\r\n                fontSize={{ base: \"md\", sm: \"md\" }}\r\n              >\r\n                Register\r\n              </Text>\r\n            </VStack>\r\n          </VStack>\r\n        </Stack>\r\n      </Center>\r\n    </Container>\r\n  );\r\n}\r\n", "export function action() {\r\n  return null;\r\n}\r\n", "import { Fragment } from \"react\";\r\nimport {\r\n  chakra,\r\n  Container,\r\n  Stack,\r\n  Text,\r\n  useColorModeValue,\r\n  Button,\r\n  Icon,\r\n  HStack,\r\n  SimpleGrid,\r\n  Flex,\r\n  Box,\r\n  Heading,\r\n  Input,\r\n  FormControl,\r\n  FormErrorMessage,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport type { LoaderFunction } from \"@remix-run/node\";\r\n\r\nimport * as utils from \"app/utils/auth.server\";\r\nimport { Form } from \"@remix-run/react\";\r\n\r\nexport const action = async ({ request }: any) => {\r\n  try {\r\n    const res = await utils.signOut(request);\r\n\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const loader = async ({ request }: any) => {\r\n  try {\r\n    const res = await utils.isAuthenticated(request);\r\n\r\n    return res;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport default function Index() {\r\n  // const actionData = useActionData();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Form method=\"post\">\r\n        <Button type=\"submit\">Sign Out</Button>\r\n      </Form>\r\n    </Fragment>\r\n  );\r\n}\r\n", "export default {'version':'96a965ae','entry':{'module':'/_static/build/entry.client-GCOCC72I.js','imports':['/_static/build/_shared/chunk-5UVMJRQD.js','/_static/build/_shared/chunk-XD2OM2AY.js','/_static/build/_shared/chunk-7MTQJYW3.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/_static/build/root-GPH2CXZF.js','imports':['/_static/build/_shared/chunk-CFR2D7G6.js','/_static/build/_shared/chunk-C5QHTSBW.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/__auth/login':{'id':'routes/__auth/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/__auth/login-FXO6JAB3.js','imports':['/_static/build/_shared/chunk-BK644AGN.js','/_static/build/_shared/chunk-CJSSKUMX.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__auth/register':{'id':'routes/__auth/register','parentId':'root','path':'register','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/__auth/register-EUFF6Q2X.js','imports':['/_static/build/_shared/chunk-BK644AGN.js','/_static/build/_shared/chunk-CJSSKUMX.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__auth/verify':{'id':'routes/__auth/verify','parentId':'root','path':'verify','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/__auth/verify-T3OHYKOH.js','imports':['/_static/build/_shared/chunk-CJSSKUMX.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dev/null':{'id':'routes/dev/null','parentId':'root','path':'dev/null','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/dev/null-L5C63DWO.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/index-XBV6UTTF.js','imports':['/_static/build/_shared/chunk-CJSSKUMX.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/_static/build/manifest-96A965AE.js'};"],
  "mappings": "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",
  "names": ["import_react", "createCache", "createEmotionServer", "import_react", "import_react", "import_react", "handleResize", "ExecutionEnvironment", "scroll", "import_react", "import_icons", "import_react", "import_icons", "Error", "import_react", "Error", "import_react", "import_node", "import_react", "action", "import_react", "import_node", "import_react", "import_icons", "action", "action", "validator", "import_react", "import_remix_validated_form", "import_with_zod", "import_zod", "import_react", "validator", "action", "PasswordTextField", "SubmitButton", "validator", "PasswordTextField", "action", "action", "loader", "import_react", "import_react", "action", "loader"]
}
